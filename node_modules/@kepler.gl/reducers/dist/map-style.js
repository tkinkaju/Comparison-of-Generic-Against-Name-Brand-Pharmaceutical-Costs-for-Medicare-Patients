// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.mapStyleReducerFactory = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reduxActions = require("redux-actions");

var _actions = require("@kepler.gl/actions");

var mapStyleUpdaters = _interopRequireWildcard(require("./map-style-updaters"));

var _actionHandler;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Important: Do not rename `actionHandler` or the assignment pattern of property value.
 * It is used to generate documentation
 */
var actionHandler = (_actionHandler = {}, (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.INIT, mapStyleUpdaters.initMapStyleUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.INPUT_MAP_STYLE, mapStyleUpdaters.inputMapStyleUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.MAP_CONFIG_CHANGE, mapStyleUpdaters.mapConfigChangeUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.MAP_STYLE_CHANGE, mapStyleUpdaters.mapStyleChangeUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.REQUEST_MAP_STYLES, mapStyleUpdaters.requestMapStylesUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.LOAD_MAP_STYLES, mapStyleUpdaters.loadMapStylesUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.LOAD_MAP_STYLE_ERR, mapStyleUpdaters.loadMapStyleErrUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.RECEIVE_MAP_CONFIG, mapStyleUpdaters.receiveMapConfigUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.LOAD_CUSTOM_MAP_STYLE, mapStyleUpdaters.loadCustomMapStyleUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.ADD_CUSTOM_MAP_STYLE, mapStyleUpdaters.addCustomMapStyleUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.RESET_MAP_CONFIG, mapStyleUpdaters.resetMapConfigMapStyleUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.SET_3D_BUILDING_COLOR, mapStyleUpdaters.set3dBuildingColorUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.RESET_MAP_CONFIG, mapStyleUpdaters.resetMapConfigMapStyleUpdater), _actionHandler);

var mapStyleReducerFactory = function mapStyleReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (// @ts-expect-error
    (0, _reduxActions.handleActions)(actionHandler, _objectSpread(_objectSpread(_objectSpread({}, mapStyleUpdaters.INITIAL_MAP_STYLE), initialState), {}, {
      initialState: initialState
    }))
  );
};

exports.mapStyleReducerFactory = mapStyleReducerFactory;

var _default = mapStyleReducerFactory();

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYXAtc3R5bGUudHMiXSwibmFtZXMiOlsiYWN0aW9uSGFuZGxlciIsIkFjdGlvblR5cGVzIiwiSU5JVCIsIm1hcFN0eWxlVXBkYXRlcnMiLCJpbml0TWFwU3R5bGVVcGRhdGVyIiwiSU5QVVRfTUFQX1NUWUxFIiwiaW5wdXRNYXBTdHlsZVVwZGF0ZXIiLCJNQVBfQ09ORklHX0NIQU5HRSIsIm1hcENvbmZpZ0NoYW5nZVVwZGF0ZXIiLCJNQVBfU1RZTEVfQ0hBTkdFIiwibWFwU3R5bGVDaGFuZ2VVcGRhdGVyIiwiUkVRVUVTVF9NQVBfU1RZTEVTIiwicmVxdWVzdE1hcFN0eWxlc1VwZGF0ZXIiLCJMT0FEX01BUF9TVFlMRVMiLCJsb2FkTWFwU3R5bGVzVXBkYXRlciIsIkxPQURfTUFQX1NUWUxFX0VSUiIsImxvYWRNYXBTdHlsZUVyclVwZGF0ZXIiLCJSRUNFSVZFX01BUF9DT05GSUciLCJyZWNlaXZlTWFwQ29uZmlnVXBkYXRlciIsIkxPQURfQ1VTVE9NX01BUF9TVFlMRSIsImxvYWRDdXN0b21NYXBTdHlsZVVwZGF0ZXIiLCJBRERfQ1VTVE9NX01BUF9TVFlMRSIsImFkZEN1c3RvbU1hcFN0eWxlVXBkYXRlciIsIlJFU0VUX01BUF9DT05GSUciLCJyZXNldE1hcENvbmZpZ01hcFN0eWxlVXBkYXRlciIsIlNFVF8zRF9CVUlMRElOR19DT0xPUiIsInNldDNkQnVpbGRpbmdDb2xvclVwZGF0ZXIiLCJtYXBTdHlsZVJlZHVjZXJGYWN0b3J5IiwiaW5pdGlhbFN0YXRlIiwiSU5JVElBTF9NQVBfU1RZTEUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFvQkE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNQSxhQUFhLDBFQUNoQkMscUJBQVlDLElBREksRUFDR0MsZ0JBQWdCLENBQUNDLG1CQURwQixvREFFaEJILHFCQUFZSSxlQUZJLEVBRWNGLGdCQUFnQixDQUFDRyxvQkFGL0Isb0RBR2hCTCxxQkFBWU0saUJBSEksRUFHZ0JKLGdCQUFnQixDQUFDSyxzQkFIakMsb0RBSWhCUCxxQkFBWVEsZ0JBSkksRUFJZU4sZ0JBQWdCLENBQUNPLHFCQUpoQyxvREFLaEJULHFCQUFZVSxrQkFMSSxFQUtpQlIsZ0JBQWdCLENBQUNTLHVCQUxsQyxvREFNaEJYLHFCQUFZWSxlQU5JLEVBTWNWLGdCQUFnQixDQUFDVyxvQkFOL0Isb0RBT2hCYixxQkFBWWMsa0JBUEksRUFPaUJaLGdCQUFnQixDQUFDYSxzQkFQbEMsb0RBUWhCZixxQkFBWWdCLGtCQVJJLEVBUWlCZCxnQkFBZ0IsQ0FBQ2UsdUJBUmxDLG9EQVNoQmpCLHFCQUFZa0IscUJBVEksRUFTb0JoQixnQkFBZ0IsQ0FBQ2lCLHlCQVRyQyxvREFVaEJuQixxQkFBWW9CLG9CQVZJLEVBVW1CbEIsZ0JBQWdCLENBQUNtQix3QkFWcEMsb0RBV2hCckIscUJBQVlzQixnQkFYSSxFQVdlcEIsZ0JBQWdCLENBQUNxQiw2QkFYaEMsb0RBWWhCdkIscUJBQVl3QixxQkFaSSxFQVlvQnRCLGdCQUFnQixDQUFDdUIseUJBWnJDLG9EQWFoQnpCLHFCQUFZc0IsZ0JBYkksRUFhZXBCLGdCQUFnQixDQUFDcUIsNkJBYmhDLGtCQUFuQjs7QUFnQk8sSUFBTUcsc0JBQXNCLEdBQUcsU0FBekJBLHNCQUF5QjtBQUFBLE1BQUNDLFlBQUQsdUVBQWdCLEVBQWhCO0FBQUEsU0FDcEM7QUFDQSxxQ0FBYzVCLGFBQWQsZ0RBQ0tHLGdCQUFnQixDQUFDMEIsaUJBRHRCLEdBRUtELFlBRkw7QUFHRUEsTUFBQUEsWUFBWSxFQUFaQTtBQUhGO0FBRm9DO0FBQUEsQ0FBL0I7Ozs7ZUFRUUQsc0JBQXNCLEUiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMjIgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQge2hhbmRsZUFjdGlvbnN9IGZyb20gJ3JlZHV4LWFjdGlvbnMnO1xuaW1wb3J0IHtBY3Rpb25UeXBlc30gZnJvbSAnQGtlcGxlci5nbC9hY3Rpb25zJztcbmltcG9ydCAqIGFzIG1hcFN0eWxlVXBkYXRlcnMgZnJvbSAnLi9tYXAtc3R5bGUtdXBkYXRlcnMnO1xuXG4vKipcbiAqIEltcG9ydGFudDogRG8gbm90IHJlbmFtZSBgYWN0aW9uSGFuZGxlcmAgb3IgdGhlIGFzc2lnbm1lbnQgcGF0dGVybiBvZiBwcm9wZXJ0eSB2YWx1ZS5cbiAqIEl0IGlzIHVzZWQgdG8gZ2VuZXJhdGUgZG9jdW1lbnRhdGlvblxuICovXG5jb25zdCBhY3Rpb25IYW5kbGVyID0ge1xuICBbQWN0aW9uVHlwZXMuSU5JVF06IG1hcFN0eWxlVXBkYXRlcnMuaW5pdE1hcFN0eWxlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLklOUFVUX01BUF9TVFlMRV06IG1hcFN0eWxlVXBkYXRlcnMuaW5wdXRNYXBTdHlsZVVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5NQVBfQ09ORklHX0NIQU5HRV06IG1hcFN0eWxlVXBkYXRlcnMubWFwQ29uZmlnQ2hhbmdlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLk1BUF9TVFlMRV9DSEFOR0VdOiBtYXBTdHlsZVVwZGF0ZXJzLm1hcFN0eWxlQ2hhbmdlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlJFUVVFU1RfTUFQX1NUWUxFU106IG1hcFN0eWxlVXBkYXRlcnMucmVxdWVzdE1hcFN0eWxlc1VwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5MT0FEX01BUF9TVFlMRVNdOiBtYXBTdHlsZVVwZGF0ZXJzLmxvYWRNYXBTdHlsZXNVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuTE9BRF9NQVBfU1RZTEVfRVJSXTogbWFwU3R5bGVVcGRhdGVycy5sb2FkTWFwU3R5bGVFcnJVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuUkVDRUlWRV9NQVBfQ09ORklHXTogbWFwU3R5bGVVcGRhdGVycy5yZWNlaXZlTWFwQ29uZmlnVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLkxPQURfQ1VTVE9NX01BUF9TVFlMRV06IG1hcFN0eWxlVXBkYXRlcnMubG9hZEN1c3RvbU1hcFN0eWxlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLkFERF9DVVNUT01fTUFQX1NUWUxFXTogbWFwU3R5bGVVcGRhdGVycy5hZGRDdXN0b21NYXBTdHlsZVVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5SRVNFVF9NQVBfQ09ORklHXTogbWFwU3R5bGVVcGRhdGVycy5yZXNldE1hcENvbmZpZ01hcFN0eWxlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNFVF8zRF9CVUlMRElOR19DT0xPUl06IG1hcFN0eWxlVXBkYXRlcnMuc2V0M2RCdWlsZGluZ0NvbG9yVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlJFU0VUX01BUF9DT05GSUddOiBtYXBTdHlsZVVwZGF0ZXJzLnJlc2V0TWFwQ29uZmlnTWFwU3R5bGVVcGRhdGVyXG59O1xuXG5leHBvcnQgY29uc3QgbWFwU3R5bGVSZWR1Y2VyRmFjdG9yeSA9IChpbml0aWFsU3RhdGUgPSB7fSkgPT5cbiAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICBoYW5kbGVBY3Rpb25zKGFjdGlvbkhhbmRsZXIsIHtcbiAgICAuLi5tYXBTdHlsZVVwZGF0ZXJzLklOSVRJQUxfTUFQX1NUWUxFLFxuICAgIC4uLmluaXRpYWxTdGF0ZSxcbiAgICBpbml0aWFsU3RhdGVcbiAgfSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1hcFN0eWxlUmVkdWNlckZhY3RvcnkoKTtcbiJdfQ==