// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFileExtensions = exports.getFileFormatNames = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _reselect = require("reselect");// NOTE: default formats must match file-handler-test.js
var DEFAULT_FILE_EXTENSIONS = ['csv', 'json', 'geojson'];
var DEFAULT_FILE_FORMATS = ['CSV', 'Json', 'GeoJSON'];
var getFileFormatNames = (0, _reselect.createSelector)( // @ts-expect-error
function (state) {
  return state.loaders;
}, function (loaders) {
  return [].concat(DEFAULT_FILE_FORMATS, (0, _toConsumableArray2["default"])(loaders.map(function (loader) {
    return loader.name;
  })));
});
exports.getFileFormatNames = getFileFormatNames;
var getFileExtensions = (0, _reselect.createSelector)( // @ts-expect-error
function (state) {
  return state.loaders;
}, function (loaders) {
  return [].concat(DEFAULT_FILE_EXTENSIONS, (0, _toConsumableArray2["default"])(loaders.flatMap(function (loader) {
    return loader.extensions;
  })));
});
exports.getFileExtensions = getFileExtensions;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy92aXMtc3RhdGUtc2VsZWN0b3JzLnRzIl0sIm5hbWVzIjpbIkRFRkFVTFRfRklMRV9FWFRFTlNJT05TIiwiREVGQVVMVF9GSUxFX0ZPUk1BVFMiLCJnZXRGaWxlRm9ybWF0TmFtZXMiLCJzdGF0ZSIsImxvYWRlcnMiLCJtYXAiLCJsb2FkZXIiLCJuYW1lIiwiZ2V0RmlsZUV4dGVuc2lvbnMiLCJmbGF0TWFwIiwiZXh0ZW5zaW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFvQkE7O0FBcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQSxJQUFNQSx1QkFBdUIsR0FBRyxDQUFDLEtBQUQsRUFBUSxNQUFSLEVBQWdCLFNBQWhCLENBQWhDO0FBQ0EsSUFBTUMsb0JBQW9CLEdBQUcsQ0FBQyxLQUFELEVBQVEsTUFBUixFQUFnQixTQUFoQixDQUE3QjtBQUVPLElBQU1DLGtCQUFrQixHQUFHLCtCQUNoQztBQUNBLFVBQUFDLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLE9BQVY7QUFBQSxDQUYyQixFQUdoQyxVQUFBQSxPQUFPO0FBQUEsbUJBQVFILG9CQUFSLHNDQUFpQ0csT0FBTyxDQUFDQyxHQUFSLENBQVksVUFBQUMsTUFBTTtBQUFBLFdBQUlBLE1BQU0sQ0FBQ0MsSUFBWDtBQUFBLEdBQWxCLENBQWpDO0FBQUEsQ0FIeUIsQ0FBM0I7O0FBTUEsSUFBTUMsaUJBQWlCLEdBQUcsK0JBQy9CO0FBQ0EsVUFBQUwsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsT0FBVjtBQUFBLENBRjBCLEVBRy9CLFVBQUFBLE9BQU87QUFBQSxtQkFBUUosdUJBQVIsc0NBQW9DSSxPQUFPLENBQUNLLE9BQVIsQ0FBZ0IsVUFBQUgsTUFBTTtBQUFBLFdBQUlBLE1BQU0sQ0FBQ0ksVUFBWDtBQUFBLEdBQXRCLENBQXBDO0FBQUEsQ0FId0IsQ0FBMUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMjIgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQge2NyZWF0ZVNlbGVjdG9yfSBmcm9tICdyZXNlbGVjdCc7XG5cbi8vIE5PVEU6IGRlZmF1bHQgZm9ybWF0cyBtdXN0IG1hdGNoIGZpbGUtaGFuZGxlci10ZXN0LmpzXG5jb25zdCBERUZBVUxUX0ZJTEVfRVhURU5TSU9OUyA9IFsnY3N2JywgJ2pzb24nLCAnZ2VvanNvbiddO1xuY29uc3QgREVGQVVMVF9GSUxFX0ZPUk1BVFMgPSBbJ0NTVicsICdKc29uJywgJ0dlb0pTT04nXTtcblxuZXhwb3J0IGNvbnN0IGdldEZpbGVGb3JtYXROYW1lcyA9IGNyZWF0ZVNlbGVjdG9yKFxuICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gIHN0YXRlID0+IHN0YXRlLmxvYWRlcnMsXG4gIGxvYWRlcnMgPT4gWy4uLkRFRkFVTFRfRklMRV9GT1JNQVRTLCAuLi5sb2FkZXJzLm1hcChsb2FkZXIgPT4gbG9hZGVyLm5hbWUpXVxuKTtcblxuZXhwb3J0IGNvbnN0IGdldEZpbGVFeHRlbnNpb25zID0gY3JlYXRlU2VsZWN0b3IoXG4gIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgc3RhdGUgPT4gc3RhdGUubG9hZGVycyxcbiAgbG9hZGVycyA9PiBbLi4uREVGQVVMVF9GSUxFX0VYVEVOU0lPTlMsIC4uLmxvYWRlcnMuZmxhdE1hcChsb2FkZXIgPT4gbG9hZGVyLmV4dGVuc2lvbnMpXVxuKTtcbiJdfQ==