// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.media = exports.breakPointValues = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _styledComponents = require("styled-components");

var _templateObject, _templateObject2, _templateObject3;

// These are useful for test or when theme doesn't define them
var breakPointValues = {
  palm: 588,
  desk: 768
};
/**
 * Contains media rules for different device types
 * @namespace
 * @property {object}  media
 * @property {string}  media.palm - rule for palm devices
 * @property {string}  media.portable - rule for portable devices
 * @property {string}  media.desk - rule for desktops
 */

exports.breakPointValues = breakPointValues;
var media = {
  palm: function palm(first) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return (0, _styledComponents.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n    @media (max-width: ", "px) {\n      ", ";\n    }\n  "])), function (props) {
      return (props.theme.breakPoints || breakPointValues).palm;
    }, _styledComponents.css.apply(void 0, [first].concat(args)));
  },
  portable: function portable(first) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    return (0, _styledComponents.css)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n    @media (max-width: ", "px) {\n      ", ";\n    }\n  "])), function (props) {
      return (props.theme.breakPoints || breakPointValues).desk;
    }, _styledComponents.css.apply(void 0, [first].concat(args)));
  },
  desk: function desk(first) {
    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    return (0, _styledComponents.css)(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n    @media (min-width: ", "px) {\n      ", ";\n    }\n  "])), function (props) {
      return (props.theme.breakPoints || breakPointValues).desk + 1;
    }, _styledComponents.css.apply(void 0, [first].concat(args)));
  }
};
exports.media = media;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tZWRpYS1icmVha3BvaW50cy50cyJdLCJuYW1lcyI6WyJicmVha1BvaW50VmFsdWVzIiwicGFsbSIsImRlc2siLCJtZWRpYSIsImZpcnN0IiwiYXJncyIsImNzcyIsInByb3BzIiwidGhlbWUiLCJicmVha1BvaW50cyIsInBvcnRhYmxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQW9CQTs7OztBQUVBO0FBQ08sSUFBTUEsZ0JBQWdCLEdBQUc7QUFDOUJDLEVBQUFBLElBQUksRUFBRSxHQUR3QjtBQUU5QkMsRUFBQUEsSUFBSSxFQUFFO0FBRndCLENBQXpCO0FBS1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRU8sSUFBTUMsS0FBSyxHQUFHO0FBQ25CRixFQUFBQSxJQUFJLEVBQUUsY0FBQ0csS0FBRDtBQUFBLHNDQUFXQyxJQUFYO0FBQVdBLE1BQUFBLElBQVg7QUFBQTs7QUFBQSxlQUFvQkMscUJBQXBCLGtKQUNpQixVQUFBQyxLQUFLO0FBQUEsYUFBSSxDQUFDQSxLQUFLLENBQUNDLEtBQU4sQ0FBWUMsV0FBWixJQUEyQlQsZ0JBQTVCLEVBQThDQyxJQUFsRDtBQUFBLEtBRHRCLEVBRUFLLHFDQUFJRixLQUFKLFNBQWNDLElBQWQsRUFGQTtBQUFBLEdBRGE7QUFPbkJLLEVBQUFBLFFBQVEsRUFBRSxrQkFBQ04sS0FBRDtBQUFBLHVDQUFXQyxJQUFYO0FBQVdBLE1BQUFBLElBQVg7QUFBQTs7QUFBQSxlQUFvQkMscUJBQXBCLG9KQUNhLFVBQUFDLEtBQUs7QUFBQSxhQUFJLENBQUNBLEtBQUssQ0FBQ0MsS0FBTixDQUFZQyxXQUFaLElBQTJCVCxnQkFBNUIsRUFBOENFLElBQWxEO0FBQUEsS0FEbEIsRUFFSkkscUNBQUlGLEtBQUosU0FBY0MsSUFBZCxFQUZJO0FBQUEsR0FQUztBQWFuQkgsRUFBQUEsSUFBSSxFQUFFLGNBQUNFLEtBQUQ7QUFBQSx1Q0FBV0MsSUFBWDtBQUFXQSxNQUFBQSxJQUFYO0FBQUE7O0FBQUEsZUFBb0JDLHFCQUFwQixvSkFDaUIsVUFBQUMsS0FBSztBQUFBLGFBQUksQ0FBQ0EsS0FBSyxDQUFDQyxLQUFOLENBQVlDLFdBQVosSUFBMkJULGdCQUE1QixFQUE4Q0UsSUFBOUMsR0FBcUQsQ0FBekQ7QUFBQSxLQUR0QixFQUVBSSxxQ0FBSUYsS0FBSixTQUFjQyxJQUFkLEVBRkE7QUFBQTtBQWJhLENBQWQiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMjIgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQge2Nzc30gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG4vLyBUaGVzZSBhcmUgdXNlZnVsIGZvciB0ZXN0IG9yIHdoZW4gdGhlbWUgZG9lc24ndCBkZWZpbmUgdGhlbVxuZXhwb3J0IGNvbnN0IGJyZWFrUG9pbnRWYWx1ZXMgPSB7XG4gIHBhbG06IDU4OCxcbiAgZGVzazogNzY4XG59O1xuXG4vKipcbiAqIENvbnRhaW5zIG1lZGlhIHJ1bGVzIGZvciBkaWZmZXJlbnQgZGV2aWNlIHR5cGVzXG4gKiBAbmFtZXNwYWNlXG4gKiBAcHJvcGVydHkge29iamVjdH0gIG1lZGlhXG4gKiBAcHJvcGVydHkge3N0cmluZ30gIG1lZGlhLnBhbG0gLSBydWxlIGZvciBwYWxtIGRldmljZXNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSAgbWVkaWEucG9ydGFibGUgLSBydWxlIGZvciBwb3J0YWJsZSBkZXZpY2VzXG4gKiBAcHJvcGVydHkge3N0cmluZ30gIG1lZGlhLmRlc2sgLSBydWxlIGZvciBkZXNrdG9wc1xuICovXG5cbmV4cG9ydCBjb25zdCBtZWRpYSA9IHtcbiAgcGFsbTogKGZpcnN0LCAuLi5hcmdzKSA9PiBjc3NgXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLnRoZW1lLmJyZWFrUG9pbnRzIHx8IGJyZWFrUG9pbnRWYWx1ZXMpLnBhbG19cHgpIHtcbiAgICAgICR7Y3NzKGZpcnN0LCAuLi5hcmdzKX07XG4gICAgfVxuICBgLFxuXG4gIHBvcnRhYmxlOiAoZmlyc3QsIC4uLmFyZ3MpID0+IGNzc2BcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJHtwcm9wcyA9PiAocHJvcHMudGhlbWUuYnJlYWtQb2ludHMgfHwgYnJlYWtQb2ludFZhbHVlcykuZGVza31weCkge1xuICAgICAgJHtjc3MoZmlyc3QsIC4uLmFyZ3MpfTtcbiAgICB9XG4gIGAsXG5cbiAgZGVzazogKGZpcnN0LCAuLi5hcmdzKSA9PiBjc3NgXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLnRoZW1lLmJyZWFrUG9pbnRzIHx8IGJyZWFrUG9pbnRWYWx1ZXMpLmRlc2sgKyAxfXB4KSB7XG4gICAgICAke2NzcyhmaXJzdCwgLi4uYXJncyl9O1xuICAgIH1cbiAgYFxufTtcbiJdfQ==