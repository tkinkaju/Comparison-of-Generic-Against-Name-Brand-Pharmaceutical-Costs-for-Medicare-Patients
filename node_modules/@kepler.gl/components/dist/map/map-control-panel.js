// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _localization = require("@kepler.gl/localization");

var _styledComponents2 = require("../common/styled-components");

var _icons = require("../common/icons");

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

var StyledMapControlPanel = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  background-color: ", ";\n  flex-grow: 1;\n  z-index: 1;\n  p {\n    margin-bottom: 0;\n  }\n"])), function (props) {
  return props.theme.mapPanelBackgroundColor;
});

var StyledMapControlPanelContent = _styledComponents["default"].div.attrs({
  className: 'map-control__panel-content'
})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  ", ";\n  max-height: 500px;\n  min-height: 100px;\n  min-width: ", "px;\n  overflow: auto;\n"])), function (props) {
  return props.theme.dropdownScrollBar;
}, function (props) {
  return props.theme.mapControl.width;
});

var StyledMapControlPanelHeader = _styledComponents["default"].div.attrs({
  className: 'map-control__panel-header'
})(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  justify-content: space-between;\n  background-color: ", ";\n  height: 32px;\n  padding: 6px 12px;\n  font-family: ", ";\n  font-size: 11px;\n  color: ", ";\n  position: relative;\n  box-sizing: border-box;\n\n  button {\n    width: 18px;\n    height: 18px;\n  }\n"])), function (props) {
  return props.theme.mapPanelHeaderBackgroundColor;
}, function (props) {
  return props.theme.fontFamily;
}, function (props) {
  return props.theme.titleTextColor;
});

var StyledIcon = (0, _styledComponents["default"])(_styledComponents2.IconRoundSmall)(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2["default"])(["\n  color: ", ";\n  background-color: transparent;\n\n  :hover {\n    cursor: pointer;\n    background-color: transparent;\n    color: ", ";\n  }\n"])), function (props) {
  return props.theme.activeColor;
}, function (props) {
  return props.theme.linkBtnColor;
});

function MapControlPanelFactory() {
  /** @type {import('./map-control-panel').MapControlPanelComponent} */
  var MapControlPanel = /*#__PURE__*/_react["default"].memo(function (_ref) {
    var children = _ref.children,
        header = _ref.header,
        pinnable = _ref.pinnable,
        disableClose = _ref.disableClose,
        onPinClick = _ref.onPinClick,
        onClick = _ref.onClick,
        _ref$scale = _ref.scale,
        scale = _ref$scale === void 0 ? 1 : _ref$scale,
        isExport = _ref.isExport,
        logoComponent = _ref.logoComponent;
    return /*#__PURE__*/_react["default"].createElement(StyledMapControlPanel, {
      className: "map-control-panel",
      style: {
        transform: "scale(".concat(scale, ")"),
        marginBottom: '8px !important'
      }
    }, /*#__PURE__*/_react["default"].createElement(StyledMapControlPanelHeader, null, isExport && logoComponent ? logoComponent : header ? /*#__PURE__*/_react["default"].createElement("span", {
      style: {
        verticalAlign: 'middle'
      }
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: header
    })) : null, isExport ? null : /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, pinnable && /*#__PURE__*/_react["default"].createElement(StyledIcon, {
      className: "pin-map-control-item",
      onClick: onPinClick
    }, /*#__PURE__*/_react["default"].createElement(_icons.Pin, {
      height: "16px"
    })), disableClose ? null : /*#__PURE__*/_react["default"].createElement(StyledIcon, {
      className: "close-map-control-item",
      onClick: onClick
    }, /*#__PURE__*/_react["default"].createElement(_icons.Close, {
      height: "16px"
    })))), /*#__PURE__*/_react["default"].createElement(StyledMapControlPanelContent, null, children));
  });

  MapControlPanel.displayName = 'MapControlPanel';
  return MapControlPanel;
}

var _default = MapControlPanelFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,