// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _logo = _interopRequireDefault(require("../common/logo"));

var _splitMapButton = _interopRequireDefault(require("./split-map-button"));

var _toggle3dButton = _interopRequireDefault(require("./toggle-3d-button"));

var _layerSelectorPanel = _interopRequireDefault(require("./layer-selector-panel"));

var _mapLegendPanel = _interopRequireDefault(require("./map-legend-panel"));

var _mapDrawPanel = _interopRequireDefault(require("./map-draw-panel"));

var _localePanel = _interopRequireDefault(require("./locale-panel"));

var _templateObject;

var StyledMapControl = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  right: 0;\n  padding: ", "px;\n  z-index: 10;\n  margin-top: ", "px;\n  position: absolute;\n  display: grid;\n  row-gap: 8px;\n  justify-items: end;\n  pointer-events: none; /* prevent padding from blocking input */\n  & > * {\n    /* all children should allow input */\n    pointer-events: all;\n  }\n"])), function (props) {
  return props.theme.mapControl.padding;
}, function (props) {
  return props.top || 0;
});

var LegendLogo = /*#__PURE__*/_react["default"].createElement(_logo["default"], {
  version: false,
  appName: "kepler.gl"
});

MapControlFactory.deps = [_mapDrawPanel["default"], _toggle3dButton["default"], _splitMapButton["default"], _mapLegendPanel["default"], _layerSelectorPanel["default"], _localePanel["default"]];

function MapControlFactory(MapDrawPanel, Toggle3dButton, SplitMapButton, MapLegendPanel, LayerSelectorPanel, LocalePanel) {
  var DEFAULT_ACTIONS = [SplitMapButton, LayerSelectorPanel, Toggle3dButton, MapDrawPanel, LocalePanel, MapLegendPanel];
  /** @type {import('./map-control').MapControl} */

  var MapControl = /*#__PURE__*/_react["default"].memo(function (_ref) {
    var actionComponents = _ref.actionComponents,
        props = (0, _objectWithoutProperties2["default"])(_ref, ["actionComponents"]);
    return /*#__PURE__*/_react["default"].createElement(StyledMapControl, {
      className: "map-control",
      top: props.top
    }, actionComponents.map(function (ActionComponent, index) {
      return /*#__PURE__*/_react["default"].createElement(ActionComponent, (0, _extends2["default"])({
        key: index,
        className: "map-control-action"
      }, props));
    }));
  });

  MapControl.defaultProps = {
    isSplit: false,
    top: 0,
    mapIndex: 0,
    logoComponent: LegendLogo,
    // @ts-expect-error
    actionComponents: DEFAULT_ACTIONS
  };
  MapControl.displayName = 'MapControl';
  return MapControl;
}

var _default = MapControlFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,