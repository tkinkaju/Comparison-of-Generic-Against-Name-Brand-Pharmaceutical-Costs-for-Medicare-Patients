// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _icons = require("../common/icons");

var _styledComponents = require("../common/styled-components");

var _mapControlTooltip = _interopRequireDefault(require("./map-control-tooltip"));Toggle3dButtonFactory.deps = [_mapControlTooltip["default"]];

function Toggle3dButtonFactory(MapControlTooltip) {
  var defaultActionIcons = {
    cube: _icons.Cube3d
  };
  /** @type {import('./toggle-3d-button').Toggle3dButtonComponent} */

  var Toggle3dButton = function Toggle3dButton(_ref) {
    var dragRotate = _ref.dragRotate,
        onTogglePerspective = _ref.onTogglePerspective,
        _ref$actionIcons = _ref.actionIcons,
        actionIcons = _ref$actionIcons === void 0 ? defaultActionIcons : _ref$actionIcons,
        mapControls = _ref.mapControls;
    var onClick = (0, _react.useCallback)(function (event) {
      event.preventDefault();
      onTogglePerspective();
    }, [onTogglePerspective]);
    var isVisible = (0, _react.useMemo)(function () {
      return ((mapControls === null || mapControls === void 0 ? void 0 : mapControls.toggle3d) || {}).show;
    }, [mapControls]);
    return isVisible ? /*#__PURE__*/_react["default"].createElement(MapControlTooltip, {
      id: "action-3d",
      message: dragRotate ? 'tooltip.disable3DMap' : 'tooltip.3DMap'
    }, /*#__PURE__*/_react["default"].createElement(_styledComponents.MapControlButton, {
      onClick: onClick,
      active: dragRotate,
      className: (0, _classnames["default"])('map-control-button', 'toggle-3d', {
        map3d: dragRotate
      })
    }, /*#__PURE__*/_react["default"].createElement(actionIcons.cube, {
      height: "22px"
    }))) : null;
  };

  Toggle3dButton.displayName = 'Toggle3dButton';
  return /*#__PURE__*/_react["default"].memo(Toggle3dButton);
}

var _default = Toggle3dButtonFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYXAvdG9nZ2xlLTNkLWJ1dHRvbi50c3giXSwibmFtZXMiOlsiVG9nZ2xlM2RCdXR0b25GYWN0b3J5IiwiZGVwcyIsIk1hcENvbnRyb2xUb29sdGlwRmFjdG9yeSIsIk1hcENvbnRyb2xUb29sdGlwIiwiZGVmYXVsdEFjdGlvbkljb25zIiwiY3ViZSIsIkN1YmUzZCIsIlRvZ2dsZTNkQnV0dG9uIiwiZHJhZ1JvdGF0ZSIsIm9uVG9nZ2xlUGVyc3BlY3RpdmUiLCJhY3Rpb25JY29ucyIsIm1hcENvbnRyb2xzIiwib25DbGljayIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJpc1Zpc2libGUiLCJ0b2dnbGUzZCIsInNob3ciLCJtYXAzZCIsImRpc3BsYXlOYW1lIiwiUmVhY3QiLCJtZW1vIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQW9CQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUF4QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFTQUEscUJBQXFCLENBQUNDLElBQXRCLEdBQTZCLENBQUNDLDZCQUFELENBQTdCOztBQWFBLFNBQVNGLHFCQUFULENBQStCRyxpQkFBL0IsRUFBa0Q7QUFDaEQsTUFBTUMsa0JBQWtCLEdBQUc7QUFDekJDLElBQUFBLElBQUksRUFBRUM7QUFEbUIsR0FBM0I7QUFHQTs7QUFDQSxNQUFNQyxjQUE2QyxHQUFHLFNBQWhEQSxjQUFnRCxPQUtoRDtBQUFBLFFBSkpDLFVBSUksUUFKSkEsVUFJSTtBQUFBLFFBSEpDLG1CQUdJLFFBSEpBLG1CQUdJO0FBQUEsZ0NBRkpDLFdBRUk7QUFBQSxRQUZKQSxXQUVJLGlDQUZVTixrQkFFVjtBQUFBLFFBREpPLFdBQ0ksUUFESkEsV0FDSTtBQUNKLFFBQU1DLE9BQU8sR0FBRyx3QkFDZCxVQUFBQyxLQUFLLEVBQUk7QUFDUEEsTUFBQUEsS0FBSyxDQUFDQyxjQUFOO0FBQ0FMLE1BQUFBLG1CQUFtQjtBQUNwQixLQUphLEVBS2QsQ0FBQ0EsbUJBQUQsQ0FMYyxDQUFoQjtBQVFBLFFBQU1NLFNBQVMsR0FBRyxvQkFBUSxZQUFNO0FBQzlCLGFBQU8sQ0FBQyxDQUFBSixXQUFXLFNBQVgsSUFBQUEsV0FBVyxXQUFYLFlBQUFBLFdBQVcsQ0FBRUssUUFBYixLQUF5QixFQUExQixFQUE4QkMsSUFBckM7QUFDRCxLQUZpQixFQUVmLENBQUNOLFdBQUQsQ0FGZSxDQUFsQjtBQUlBLFdBQU9JLFNBQVMsZ0JBQ2QsZ0NBQUMsaUJBQUQ7QUFDRSxNQUFBLEVBQUUsRUFBQyxXQURMO0FBRUUsTUFBQSxPQUFPLEVBQUVQLFVBQVUsR0FBRyxzQkFBSCxHQUE0QjtBQUZqRCxvQkFJRSxnQ0FBQyxrQ0FBRDtBQUNFLE1BQUEsT0FBTyxFQUFFSSxPQURYO0FBRUUsTUFBQSxNQUFNLEVBQUVKLFVBRlY7QUFHRSxNQUFBLFNBQVMsRUFBRSw0QkFBVyxvQkFBWCxFQUFpQyxXQUFqQyxFQUE4QztBQUFDVSxRQUFBQSxLQUFLLEVBQUVWO0FBQVIsT0FBOUM7QUFIYixvQkFLRSxnQ0FBQyxXQUFELENBQWEsSUFBYjtBQUFrQixNQUFBLE1BQU0sRUFBQztBQUF6QixNQUxGLENBSkYsQ0FEYyxHQWFaLElBYko7QUFjRCxHQWhDRDs7QUFrQ0FELEVBQUFBLGNBQWMsQ0FBQ1ksV0FBZixHQUE2QixnQkFBN0I7QUFDQSxzQkFBT0Msa0JBQU1DLElBQU4sQ0FBV2QsY0FBWCxDQUFQO0FBQ0Q7O2VBRWNQLHFCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIyIFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50VHlwZSwgdXNlQ2FsbGJhY2ssIHVzZU1lbW99IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHtDdWJlM2R9IGZyb20gJy4uL2NvbW1vbi9pY29ucyc7XG5pbXBvcnQge01hcENvbnRyb2xCdXR0b259IGZyb20gJy4uL2NvbW1vbi9zdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgTWFwQ29udHJvbFRvb2x0aXBGYWN0b3J5IGZyb20gJy4vbWFwLWNvbnRyb2wtdG9vbHRpcCc7XG5pbXBvcnQge01hcENvbnRyb2xzfSBmcm9tICdAa2VwbGVyLmdsL3R5cGVzJztcblxuVG9nZ2xlM2RCdXR0b25GYWN0b3J5LmRlcHMgPSBbTWFwQ29udHJvbFRvb2x0aXBGYWN0b3J5XTtcblxuaW50ZXJmYWNlIFRvZ2dsZTNkQnV0dG9uSWNvbnMge1xuICBjdWJlOiBDb21wb25lbnRUeXBlPGFueT47XG59XG5cbmV4cG9ydCB0eXBlIFRvZ2dsZTNkQnV0dG9uUHJvcHMgPSB7XG4gIGRyYWdSb3RhdGU6IGJvb2xlYW47XG4gIG9uVG9nZ2xlUGVyc3BlY3RpdmU6ICgpID0+IHZvaWQ7XG4gIGFjdGlvbkljb25zOiBUb2dnbGUzZEJ1dHRvbkljb25zO1xuICBtYXBDb250cm9sczogTWFwQ29udHJvbHM7XG59O1xuXG5mdW5jdGlvbiBUb2dnbGUzZEJ1dHRvbkZhY3RvcnkoTWFwQ29udHJvbFRvb2x0aXApIHtcbiAgY29uc3QgZGVmYXVsdEFjdGlvbkljb25zID0ge1xuICAgIGN1YmU6IEN1YmUzZFxuICB9O1xuICAvKiogQHR5cGUge2ltcG9ydCgnLi90b2dnbGUtM2QtYnV0dG9uJykuVG9nZ2xlM2RCdXR0b25Db21wb25lbnR9ICovXG4gIGNvbnN0IFRvZ2dsZTNkQnV0dG9uOiBSZWFjdC5GQzxUb2dnbGUzZEJ1dHRvblByb3BzPiA9ICh7XG4gICAgZHJhZ1JvdGF0ZSxcbiAgICBvblRvZ2dsZVBlcnNwZWN0aXZlLFxuICAgIGFjdGlvbkljb25zID0gZGVmYXVsdEFjdGlvbkljb25zLFxuICAgIG1hcENvbnRyb2xzXG4gIH0pID0+IHtcbiAgICBjb25zdCBvbkNsaWNrID0gdXNlQ2FsbGJhY2soXG4gICAgICBldmVudCA9PiB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIG9uVG9nZ2xlUGVyc3BlY3RpdmUoKTtcbiAgICAgIH0sXG4gICAgICBbb25Ub2dnbGVQZXJzcGVjdGl2ZV1cbiAgICApO1xuXG4gICAgY29uc3QgaXNWaXNpYmxlID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICByZXR1cm4gKG1hcENvbnRyb2xzPy50b2dnbGUzZCB8fCB7fSkuc2hvdztcbiAgICB9LCBbbWFwQ29udHJvbHNdKTtcblxuICAgIHJldHVybiBpc1Zpc2libGUgPyAoXG4gICAgICA8TWFwQ29udHJvbFRvb2x0aXBcbiAgICAgICAgaWQ9XCJhY3Rpb24tM2RcIlxuICAgICAgICBtZXNzYWdlPXtkcmFnUm90YXRlID8gJ3Rvb2x0aXAuZGlzYWJsZTNETWFwJyA6ICd0b29sdGlwLjNETWFwJ31cbiAgICAgID5cbiAgICAgICAgPE1hcENvbnRyb2xCdXR0b25cbiAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgIGFjdGl2ZT17ZHJhZ1JvdGF0ZX1cbiAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzbmFtZXMoJ21hcC1jb250cm9sLWJ1dHRvbicsICd0b2dnbGUtM2QnLCB7bWFwM2Q6IGRyYWdSb3RhdGV9KX1cbiAgICAgICAgPlxuICAgICAgICAgIDxhY3Rpb25JY29ucy5jdWJlIGhlaWdodD1cIjIycHhcIiAvPlxuICAgICAgICA8L01hcENvbnRyb2xCdXR0b24+XG4gICAgICA8L01hcENvbnRyb2xUb29sdGlwPlxuICAgICkgOiBudWxsO1xuICB9O1xuXG4gIFRvZ2dsZTNkQnV0dG9uLmRpc3BsYXlOYW1lID0gJ1RvZ2dsZTNkQnV0dG9uJztcbiAgcmV0dXJuIFJlYWN0Lm1lbW8oVG9nZ2xlM2RCdXR0b24pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBUb2dnbGUzZEJ1dHRvbkZhY3Rvcnk7XG4iXX0=