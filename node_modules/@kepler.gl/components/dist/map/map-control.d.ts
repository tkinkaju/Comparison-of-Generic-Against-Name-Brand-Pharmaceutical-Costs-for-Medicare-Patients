import React from 'react';
import SplitMapButtonFactory from './split-map-button';
import Toggle3dButtonFactory from './toggle-3d-button';
import LayerSelectorPanelFactory from './layer-selector-panel';
import MapLegendPanelFactory from './map-legend-panel';
import MapDrawPanelFactory from './map-draw-panel';
import LocalePanelFactory from './locale-panel';
import { Layer } from '@kepler.gl/layers';
import { Editor, MapControls } from '@kepler.gl/types';
import { Datasets } from '@kepler.gl/table';
export declare type MapControlProps = {
    availableLocales: ReadonlyArray<string>;
    datasets: Datasets;
    dragRotate: boolean;
    isSplit: boolean;
    primary: boolean;
    layers: Layer[];
    layersToRender: {
        [key: string]: boolean;
    };
    mapIndex: number;
    mapControls: MapControls;
    onTogglePerspective: () => void;
    onToggleSplitMap: () => void;
    onToggleMapControl: (control: string) => void;
    onSetEditorMode: (mode: string) => void;
    onToggleEditorVisibility: () => void;
    top: number;
    onSetLocale: () => void;
    locale: string;
    logoComponent: React.FC | React.ReactNode;
    readOnly?: boolean;
    scale?: number;
    mapLayers?: {
        [key: string]: boolean;
    };
    editor: Editor;
    actionComponents: React.FC[] | React.Component[];
    mapHeight?: number;
};
declare function MapControlFactory(MapDrawPanel: ReturnType<typeof MapDrawPanelFactory>, Toggle3dButton: ReturnType<typeof Toggle3dButtonFactory>, SplitMapButton: ReturnType<typeof SplitMapButtonFactory>, MapLegendPanel: ReturnType<typeof MapLegendPanelFactory>, LayerSelectorPanel: ReturnType<typeof LayerSelectorPanelFactory>, LocalePanel: ReturnType<typeof LocalePanelFactory>): React.FC<MapControlProps>;
declare namespace MapControlFactory {
    var deps: (typeof SplitMapButtonFactory | typeof Toggle3dButtonFactory | typeof LayerSelectorPanelFactory | typeof MapLegendPanelFactory | typeof MapDrawPanelFactory | typeof LocalePanelFactory)[];
}
export default MapControlFactory;
