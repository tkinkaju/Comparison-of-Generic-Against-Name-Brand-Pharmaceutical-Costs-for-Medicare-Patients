import { ComponentType } from 'react';
import { Field } from '@kepler.gl/types';
import FieldTokenFactory from '../common/field-token';
export declare type FieldListItemFactoryProps = {
    value: Field;
    displayOption: (field: Field) => string;
};
export declare function FieldListItemFactoryFactory(FieldToken: any): (showToken?: boolean) => ({ value, displayOption }: FieldListItemFactoryProps) => JSX.Element;
export declare namespace FieldListItemFactoryFactory {
    var deps: (typeof FieldTokenFactory)[];
}
declare type FieldType = string | string[] | {
    name: string;
    format: string | null;
}[] | {
    format?: string;
    id?: string;
    name?: string;
    fieldIdx?: number;
    type?: number;
} | Field;
interface FieldSelectorFactoryProps {
    fields?: FieldType[];
    onSelect: (items: ReadonlyArray<string | number | boolean | object> | string | number | boolean | object | null) => void;
    placement?: string;
    value?: FieldType | null;
    filterFieldTypes?: FieldType | FieldType[];
    inputTheme?: string;
    placeholder?: string;
    erasable?: boolean;
    error?: boolean;
    multiSelect?: boolean;
    closeOnSelect?: boolean;
    showToken?: boolean;
    suggested?: ReadonlyArray<string | number | boolean | object> | null;
    CustomChickletComponent?: ComponentType;
    size?: string;
}
declare function FieldSelectorFactory(FieldListItemFactory: ReturnType<typeof FieldListItemFactoryFactory>): ComponentType<FieldSelectorFactoryProps>;
declare namespace FieldSelectorFactory {
    var deps: (typeof FieldListItemFactoryFactory)[];
}
export default FieldSelectorFactory;
