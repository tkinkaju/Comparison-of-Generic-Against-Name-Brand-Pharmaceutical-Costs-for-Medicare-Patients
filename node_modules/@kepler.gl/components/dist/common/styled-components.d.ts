import ReactTooltip from 'react-tooltip';
import { RGBColor } from '@kepler.gl/types';
export declare const SelectText: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const SelectTextBold: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const IconRoundSmall: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const CenterFlexbox: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const CenterVerticalFlexbox: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const SpaceBetweenFlexbox: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const SBFlexboxItem: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const SBFlexboxNoMargin: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const PanelLabel: import("styled-components").StyledComponent<"label", any, {
    className: "side-panel-panel__label";
}, "className">;
export declare const PanelLabelWrapper: import("styled-components").StyledComponent<"div", any, {
    className: "side-panel-panel__label-wrapper";
}, "className">;
export declare const PanelLabelBold: import("styled-components").StyledComponent<"label", any, {
    className: "side-panel-panel__label";
}, "className">;
export declare const PanelHeaderTitle: import("styled-components").StyledComponent<"span", any, {
    className: string;
}, "className">;
export declare const PanelHeaderContent: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const PanelContent: import("styled-components").StyledComponent<"div", any, {
    className: string;
}, "className">;
interface SidePanelSectionProps {
    disabled?: boolean;
}
export declare const SidePanelSection: import("styled-components").StyledComponent<"div", any, {
    className: string;
} & SidePanelSectionProps, "className">;
export declare const SidePanelDivider: import("styled-components").StyledComponent<"div", any, {
    className: "side-panel-divider";
}, "className">;
export declare const Tooltip: import("styled-components").StyledComponent<typeof ReactTooltip, any, {}, never>;
export interface ButtonProps {
    negative?: boolean;
    secondary?: boolean;
    link?: boolean;
    floating?: boolean;
    cta?: boolean;
    large?: boolean;
    small?: boolean;
    disabled?: boolean;
    width?: string;
    inactive?: boolean;
}
export declare const Button: import("styled-components").StyledComponent<"div", any, {
    className: string;
} & ButtonProps, "className">;
interface InputProps {
    secondary?: boolean;
}
export declare const Input: import("styled-components").StyledComponent<"input", any, InputProps, never>;
export declare const InputLight: import("styled-components").StyledComponent<"input", any, {}, never>;
export declare const TextArea: import("styled-components").StyledComponent<"textarea", any, InputProps, never>;
export declare const TextAreaLight: import("styled-components").StyledComponent<"textarea", any, {}, never>;
export declare const InlineInput: import("styled-components").StyledComponent<"input", any, InputProps, never>;
export interface StyledPanelHeaderProps {
    active?: boolean;
    labelRCGColorValues?: RGBColor | null;
    warning?: boolean;
}
export declare const StyledPanelHeader: import("styled-components").StyledComponent<"div", any, StyledPanelHeaderProps, never>;
interface StyledPanelDropdownProps {
    type?: string;
}
export declare const StyledPanelDropdown: import("styled-components").StyledComponent<"div", any, StyledPanelDropdownProps, never>;
export declare const ButtonGroup: import("styled-components").StyledComponent<"div", any, {}, never>;
interface DatasetSquareProps {
    backgroundColor: RGBColor;
}
export declare const DatasetSquare: import("styled-components").StyledComponent<"div", any, DatasetSquareProps, never>;
interface SelectionButtonProps {
    selected?: boolean;
}
export declare const SelectionButton: import("styled-components").StyledComponent<"div", any, SelectionButtonProps, never>;
export declare const StyledTable: import("styled-components").StyledComponent<"table", any, {}, never>;
export declare const StyledModalContent: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledModalVerticalPanel: import("styled-components").StyledComponent<"div", any, {
    className: "modal-vertical-panel";
}, "className">;
export declare const StyledModalSection: import("styled-components").StyledComponent<"div", any, {
    className: string;
}, "className">;
interface StyledModalInputFootnoteProps {
    error?: boolean;
}
export declare const StyledModalInputFootnote: import("styled-components").StyledComponent<"div", any, {
    className: "modal-input__footnote";
} & StyledModalInputFootnoteProps, "className">;
/**
 * Newer versions of mapbox.gl display an error message banner on top of the map by default
 * which will cause the map to display points in the wrong locations
 * This workaround will hide the error banner.
 */
export declare const StyledMapContainer: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledAttrbution: import("styled-components").StyledComponent<"div", any, {
    className: "mapbox-attribution-container";
}, "className">;
export interface StyledExportSectionProps {
    disabled?: boolean;
}
export declare const StyledExportSection: import("styled-components").StyledComponent<"div", any, StyledExportSectionProps, never>;
export declare const StyledFilteredOption: import("styled-components").StyledComponent<"div", any, SelectionButtonProps, never>;
export declare const StyledType: import("styled-components").StyledComponent<"div", any, SelectionButtonProps, never>;
export declare const WidgetContainer: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const BottomWidgetInner: import("styled-components").StyledComponent<"div", any, {}, never>;
interface MapControlButtonProps {
    active?: boolean;
}
export declare const MapControlButton: import("styled-components").StyledComponent<"div", any, {
    className: string;
} & ButtonProps & {
    className: string;
} & MapControlButtonProps, "className">;
export declare const StyledFilterContent: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const TruncatedTitleText: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const CheckMark: import("styled-components").StyledComponent<"span", any, {
    className: "checkbox-inner";
}, "className">;
export {};
