// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledComponents2 = require("../styled-components");

var _iconButton = _interopRequireDefault(require("../icon-button"));

var _styles = require("@kepler.gl/styles");

var _utils = require("@kepler.gl/utils");

var _templateObject, _templateObject2;

var StyledSpeedControl = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  align-items: center;\n\n  .animation-control__speed-slider {\n    left: 0;\n    ", "\n  }\n"])), _styles.media.palm(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n      left: 60px;\n    "]))));

var DELAY_SHOW = 500;
var PRECISE_SPEED_ROUND = 1;

function SpeedControlFactory(AnimationSpeedSlider) {
  var SpeedControl = function SpeedControl(_ref) {
    var showAnimationWindowControl = _ref.showAnimationWindowControl,
        updateAnimationSpeed = _ref.updateAnimationSpeed,
        btnStyle = _ref.btnStyle,
        hideAndShowSpeedControl = _ref.hideAndShowSpeedControl,
        buttonHeight = _ref.buttonHeight,
        playbackIcons = _ref.playbackIcons,
        speed = _ref.speed,
        isSpeedControlVisible = _ref.isSpeedControlVisible;
    return showAnimationWindowControl || !updateAnimationSpeed ? null : /*#__PURE__*/_react["default"].createElement(StyledSpeedControl, null, /*#__PURE__*/_react["default"].createElement(_iconButton["default"], (0, _extends2["default"])({
      "data-tip": true,
      "data-for": "animate-speed",
      className: "playback-control-button"
    }, btnStyle, {
      onClick: hideAndShowSpeedControl
    }), /*#__PURE__*/_react["default"].createElement(playbackIcons.speed, {
      height: buttonHeight
    }), /*#__PURE__*/_react["default"].createElement(_styledComponents2.Tooltip, {
      id: "animate-speed",
      place: "top",
      delayShow: DELAY_SHOW,
      effect: "solid"
    }, /*#__PURE__*/_react["default"].createElement("span", null, (0, _utils.preciseRound)(speed, PRECISE_SPEED_ROUND), "x"))), isSpeedControlVisible ? /*#__PURE__*/_react["default"].createElement(AnimationSpeedSlider, {
      onHide: hideAndShowSpeedControl,
      updateAnimationSpeed: updateAnimationSpeed,
      speed: speed
    }) : null);
  };

  return SpeedControl;
}

var _default = SpeedControlFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vYW5pbWF0aW9uLWNvbnRyb2wvc3BlZWQtY29udHJvbC50c3giXSwibmFtZXMiOlsiU3R5bGVkU3BlZWRDb250cm9sIiwic3R5bGVkIiwiZGl2IiwibWVkaWEiLCJwYWxtIiwiREVMQVlfU0hPVyIsIlBSRUNJU0VfU1BFRURfUk9VTkQiLCJTcGVlZENvbnRyb2xGYWN0b3J5IiwiQW5pbWF0aW9uU3BlZWRTbGlkZXIiLCJTcGVlZENvbnRyb2wiLCJzaG93QW5pbWF0aW9uV2luZG93Q29udHJvbCIsInVwZGF0ZUFuaW1hdGlvblNwZWVkIiwiYnRuU3R5bGUiLCJoaWRlQW5kU2hvd1NwZWVkQ29udHJvbCIsImJ1dHRvbkhlaWdodCIsInBsYXliYWNrSWNvbnMiLCJzcGVlZCIsImlzU3BlZWRDb250cm9sVmlzaWJsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQW9CQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLGtCQUFrQixHQUFHQyw2QkFBT0MsR0FBVix3TUFNbEJDLGNBQU1DLElBTlksa0hBQXhCOztBQVlBLElBQU1DLFVBQVUsR0FBRyxHQUFuQjtBQUNBLElBQU1DLG1CQUFtQixHQUFHLENBQTVCOztBQUVBLFNBQVNDLG1CQUFULENBQTZCQyxvQkFBN0IsRUFBbUQ7QUFDakQsTUFBTUMsWUFBWSxHQUFHLFNBQWZBLFlBQWUsT0FTZjtBQUFBLFFBUkpDLDBCQVFJLFFBUkpBLDBCQVFJO0FBQUEsUUFQSkMsb0JBT0ksUUFQSkEsb0JBT0k7QUFBQSxRQU5KQyxRQU1JLFFBTkpBLFFBTUk7QUFBQSxRQUxKQyx1QkFLSSxRQUxKQSx1QkFLSTtBQUFBLFFBSkpDLFlBSUksUUFKSkEsWUFJSTtBQUFBLFFBSEpDLGFBR0ksUUFISkEsYUFHSTtBQUFBLFFBRkpDLEtBRUksUUFGSkEsS0FFSTtBQUFBLFFBREpDLHFCQUNJLFFBREpBLHFCQUNJO0FBQ0osV0FBT1AsMEJBQTBCLElBQUksQ0FBQ0Msb0JBQS9CLEdBQXNELElBQXRELGdCQUNMLGdDQUFDLGtCQUFELHFCQUNFLGdDQUFDLHNCQUFEO0FBQ0Usc0JBREY7QUFFRSxrQkFBUyxlQUZYO0FBR0UsTUFBQSxTQUFTLEVBQUM7QUFIWixPQUlNQyxRQUpOO0FBS0UsTUFBQSxPQUFPLEVBQUVDO0FBTFgscUJBT0UsZ0NBQUMsYUFBRCxDQUFlLEtBQWY7QUFBcUIsTUFBQSxNQUFNLEVBQUVDO0FBQTdCLE1BUEYsZUFRRSxnQ0FBQywwQkFBRDtBQUFTLE1BQUEsRUFBRSxFQUFDLGVBQVo7QUFBNEIsTUFBQSxLQUFLLEVBQUMsS0FBbEM7QUFBd0MsTUFBQSxTQUFTLEVBQUVULFVBQW5EO0FBQStELE1BQUEsTUFBTSxFQUFDO0FBQXRFLG9CQUNFLDhDQUFPLHlCQUFhVyxLQUFiLEVBQW9CVixtQkFBcEIsQ0FBUCxNQURGLENBUkYsQ0FERixFQWFHVyxxQkFBcUIsZ0JBQ3BCLGdDQUFDLG9CQUFEO0FBQ0UsTUFBQSxNQUFNLEVBQUVKLHVCQURWO0FBRUUsTUFBQSxvQkFBb0IsRUFBRUYsb0JBRnhCO0FBR0UsTUFBQSxLQUFLLEVBQUVLO0FBSFQsTUFEb0IsR0FNbEIsSUFuQk4sQ0FERjtBQXVCRCxHQWpDRDs7QUFtQ0EsU0FBT1AsWUFBUDtBQUNEOztlQUVjRixtQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAyMiBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7VG9vbHRpcH0gZnJvbSAnLi4vc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IEljb25CdXR0b24gZnJvbSAnLi4vaWNvbi1idXR0b24nO1xuaW1wb3J0IHttZWRpYX0gZnJvbSAnQGtlcGxlci5nbC9zdHlsZXMnO1xuaW1wb3J0IHtwcmVjaXNlUm91bmR9IGZyb20gJ0BrZXBsZXIuZ2wvdXRpbHMnO1xuXG5jb25zdCBTdHlsZWRTcGVlZENvbnRyb2wgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gIC5hbmltYXRpb24tY29udHJvbF9fc3BlZWQtc2xpZGVyIHtcbiAgICBsZWZ0OiAwO1xuICAgICR7bWVkaWEucGFsbWBcbiAgICAgIGxlZnQ6IDYwcHg7XG4gICAgYH1cbiAgfVxuYDtcblxuY29uc3QgREVMQVlfU0hPVyA9IDUwMDtcbmNvbnN0IFBSRUNJU0VfU1BFRURfUk9VTkQgPSAxO1xuXG5mdW5jdGlvbiBTcGVlZENvbnRyb2xGYWN0b3J5KEFuaW1hdGlvblNwZWVkU2xpZGVyKSB7XG4gIGNvbnN0IFNwZWVkQ29udHJvbCA9ICh7XG4gICAgc2hvd0FuaW1hdGlvbldpbmRvd0NvbnRyb2wsXG4gICAgdXBkYXRlQW5pbWF0aW9uU3BlZWQsXG4gICAgYnRuU3R5bGUsXG4gICAgaGlkZUFuZFNob3dTcGVlZENvbnRyb2wsXG4gICAgYnV0dG9uSGVpZ2h0LFxuICAgIHBsYXliYWNrSWNvbnMsXG4gICAgc3BlZWQsXG4gICAgaXNTcGVlZENvbnRyb2xWaXNpYmxlXG4gIH0pID0+IHtcbiAgICByZXR1cm4gc2hvd0FuaW1hdGlvbldpbmRvd0NvbnRyb2wgfHwgIXVwZGF0ZUFuaW1hdGlvblNwZWVkID8gbnVsbCA6IChcbiAgICAgIDxTdHlsZWRTcGVlZENvbnRyb2w+XG4gICAgICAgIDxJY29uQnV0dG9uXG4gICAgICAgICAgZGF0YS10aXBcbiAgICAgICAgICBkYXRhLWZvcj1cImFuaW1hdGUtc3BlZWRcIlxuICAgICAgICAgIGNsYXNzTmFtZT1cInBsYXliYWNrLWNvbnRyb2wtYnV0dG9uXCJcbiAgICAgICAgICB7Li4uYnRuU3R5bGV9XG4gICAgICAgICAgb25DbGljaz17aGlkZUFuZFNob3dTcGVlZENvbnRyb2x9XG4gICAgICAgID5cbiAgICAgICAgICA8cGxheWJhY2tJY29ucy5zcGVlZCBoZWlnaHQ9e2J1dHRvbkhlaWdodH0gLz5cbiAgICAgICAgICA8VG9vbHRpcCBpZD1cImFuaW1hdGUtc3BlZWRcIiBwbGFjZT1cInRvcFwiIGRlbGF5U2hvdz17REVMQVlfU0hPV30gZWZmZWN0PVwic29saWRcIj5cbiAgICAgICAgICAgIDxzcGFuPntwcmVjaXNlUm91bmQoc3BlZWQsIFBSRUNJU0VfU1BFRURfUk9VTkQpfXg8L3NwYW4+XG4gICAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgICA8L0ljb25CdXR0b24+XG4gICAgICAgIHtpc1NwZWVkQ29udHJvbFZpc2libGUgPyAoXG4gICAgICAgICAgPEFuaW1hdGlvblNwZWVkU2xpZGVyXG4gICAgICAgICAgICBvbkhpZGU9e2hpZGVBbmRTaG93U3BlZWRDb250cm9sfVxuICAgICAgICAgICAgdXBkYXRlQW5pbWF0aW9uU3BlZWQ9e3VwZGF0ZUFuaW1hdGlvblNwZWVkfVxuICAgICAgICAgICAgc3BlZWQ9e3NwZWVkfVxuICAgICAgICAgIC8+XG4gICAgICAgICkgOiBudWxsfVxuICAgICAgPC9TdHlsZWRTcGVlZENvbnRyb2w+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gU3BlZWRDb250cm9sO1xufVxuXG5leHBvcnQgZGVmYXVsdCBTcGVlZENvbnRyb2xGYWN0b3J5O1xuIl19