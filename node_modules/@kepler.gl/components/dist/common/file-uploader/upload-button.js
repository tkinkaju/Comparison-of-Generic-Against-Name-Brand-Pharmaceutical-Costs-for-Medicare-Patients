// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject;

var Wrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: inline-block;\n  color: ", ";\n  font-size: 12px;\n  text-decoration: underline;\n\n  :hover {\n    cursor: pointer;\n    font-weight: 500;\n  }\n"])), function (props) {
  return props.theme.textColorLT;
});

var inputStyle = {
  display: 'none'
};

/*
Inspired by https://github.com/okonet/react-dropzone/blob/master/src/index.js
*/

/** @type {typeof import('./upload-button').UploadButton} */
var UploadButton = function UploadButton(_ref) {
  var onUpload = _ref.onUpload,
      children = _ref.children;

  var _fileInput = (0, _react.useRef)(null);

  var _onClick = (0, _react.useCallback)(function () {
    if (_fileInput.current) {
      // @ts-ignore create ref with useRef<HTMLInputElement>
      _fileInput.current.value = null; // @ts-ignore create ref with useRef<HTMLInputElement>

      _fileInput.current.click();
    }
  }, [_fileInput]);

  var _onChange = (0, _react.useCallback)(function (event) {
    var files = event.target.files;

    if (!files) {
      return;
    }

    onUpload(files, event);
  }, [onUpload]);

  return /*#__PURE__*/_react["default"].createElement(Wrapper, {
    className: "upload-button"
  }, /*#__PURE__*/_react["default"].createElement("input", {
    type: "file",
    ref: _fileInput,
    style: inputStyle,
    onChange: _onChange,
    className: "upload-button-input"
  }), /*#__PURE__*/_react["default"].createElement("span", {
    className: "file-upload__upload-button-span",
    onClick: _onClick
  }, children));
};

var _default = UploadButton;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vZmlsZS11cGxvYWRlci91cGxvYWQtYnV0dG9uLnRzeCJdLCJuYW1lcyI6WyJXcmFwcGVyIiwic3R5bGVkIiwiZGl2IiwicHJvcHMiLCJ0aGVtZSIsInRleHRDb2xvckxUIiwiaW5wdXRTdHlsZSIsImRpc3BsYXkiLCJVcGxvYWRCdXR0b24iLCJvblVwbG9hZCIsImNoaWxkcmVuIiwiX2ZpbGVJbnB1dCIsIl9vbkNsaWNrIiwiY3VycmVudCIsInZhbHVlIiwiY2xpY2siLCJfb25DaGFuZ2UiLCJldmVudCIsImZpbGVzIiwidGFyZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBb0JBOztBQUNBOzs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHQyw2QkFBT0MsR0FBVixzUEFFRixVQUFBQyxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlDLFdBQWhCO0FBQUEsQ0FGSCxDQUFiOztBQVdBLElBQU1DLFVBQVUsR0FBRztBQUFDQyxFQUFBQSxPQUFPLEVBQUU7QUFBVixDQUFuQjs7QUFNQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQSxJQUFNQyxZQUF5QyxHQUFHLFNBQTVDQSxZQUE0QyxPQUEwQjtBQUFBLE1BQXhCQyxRQUF3QixRQUF4QkEsUUFBd0I7QUFBQSxNQUFkQyxRQUFjLFFBQWRBLFFBQWM7O0FBQzFFLE1BQU1DLFVBQVUsR0FBRyxtQkFBTyxJQUFQLENBQW5COztBQUVBLE1BQU1DLFFBQVEsR0FBRyx3QkFBWSxZQUFNO0FBQ2pDLFFBQUlELFVBQVUsQ0FBQ0UsT0FBZixFQUF3QjtBQUN0QjtBQUNBRixNQUFBQSxVQUFVLENBQUNFLE9BQVgsQ0FBbUJDLEtBQW5CLEdBQTJCLElBQTNCLENBRnNCLENBR3RCOztBQUNBSCxNQUFBQSxVQUFVLENBQUNFLE9BQVgsQ0FBbUJFLEtBQW5CO0FBQ0Q7QUFDRixHQVBnQixFQU9kLENBQUNKLFVBQUQsQ0FQYyxDQUFqQjs7QUFTQSxNQUFNSyxTQUFTLEdBQUcsd0JBQ2hCLFVBQUFDLEtBQUssRUFBSTtBQUFBLFFBRUlDLEtBRkosR0FHSEQsS0FIRyxDQUVMRSxNQUZLLENBRUlELEtBRko7O0FBS1AsUUFBSSxDQUFDQSxLQUFMLEVBQVk7QUFDVjtBQUNEOztBQUVEVCxJQUFBQSxRQUFRLENBQUNTLEtBQUQsRUFBUUQsS0FBUixDQUFSO0FBQ0QsR0FYZSxFQVloQixDQUFDUixRQUFELENBWmdCLENBQWxCOztBQWVBLHNCQUNFLGdDQUFDLE9BQUQ7QUFBUyxJQUFBLFNBQVMsRUFBQztBQUFuQixrQkFDRTtBQUNFLElBQUEsSUFBSSxFQUFDLE1BRFA7QUFFRSxJQUFBLEdBQUcsRUFBRUUsVUFGUDtBQUdFLElBQUEsS0FBSyxFQUFFTCxVQUhUO0FBSUUsSUFBQSxRQUFRLEVBQUVVLFNBSlo7QUFLRSxJQUFBLFNBQVMsRUFBQztBQUxaLElBREYsZUFRRTtBQUFNLElBQUEsU0FBUyxFQUFDLGlDQUFoQjtBQUFrRCxJQUFBLE9BQU8sRUFBRUo7QUFBM0QsS0FDR0YsUUFESCxDQVJGLENBREY7QUFjRCxDQXpDRDs7ZUEyQ2VGLFkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMjIgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQgUmVhY3QsIHt1c2VDYWxsYmFjaywgdXNlUmVmfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuY29uc3QgV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUudGV4dENvbG9yTFR9O1xuICBmb250LXNpemU6IDEycHg7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuXG4gIDpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cbmA7XG5jb25zdCBpbnB1dFN0eWxlID0ge2Rpc3BsYXk6ICdub25lJ307XG5cbmludGVyZmFjZSBVcGxvYWRCdXR0b25Qcm9wcyB7XG4gIG9uVXBsb2FkOiAoZmlsZXM6IEZpbGVMaXN0LCBldmVudDogYW55KSA9PiB2b2lkO1xufVxuXG4vKlxuSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL29rb25ldC9yZWFjdC1kcm9wem9uZS9ibG9iL21hc3Rlci9zcmMvaW5kZXguanNcbiovXG4vKiogQHR5cGUge3R5cGVvZiBpbXBvcnQoJy4vdXBsb2FkLWJ1dHRvbicpLlVwbG9hZEJ1dHRvbn0gKi9cbmNvbnN0IFVwbG9hZEJ1dHRvbjogUmVhY3QuRkM8VXBsb2FkQnV0dG9uUHJvcHM+ID0gKHtvblVwbG9hZCwgY2hpbGRyZW59KSA9PiB7XG4gIGNvbnN0IF9maWxlSW5wdXQgPSB1c2VSZWYobnVsbCk7XG5cbiAgY29uc3QgX29uQ2xpY2sgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKF9maWxlSW5wdXQuY3VycmVudCkge1xuICAgICAgLy8gQHRzLWlnbm9yZSBjcmVhdGUgcmVmIHdpdGggdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+XG4gICAgICBfZmlsZUlucHV0LmN1cnJlbnQudmFsdWUgPSBudWxsO1xuICAgICAgLy8gQHRzLWlnbm9yZSBjcmVhdGUgcmVmIHdpdGggdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+XG4gICAgICBfZmlsZUlucHV0LmN1cnJlbnQuY2xpY2soKTtcbiAgICB9XG4gIH0sIFtfZmlsZUlucHV0XSk7XG5cbiAgY29uc3QgX29uQ2hhbmdlID0gdXNlQ2FsbGJhY2soXG4gICAgZXZlbnQgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICB0YXJnZXQ6IHtmaWxlc31cbiAgICAgIH0gPSBldmVudDtcblxuICAgICAgaWYgKCFmaWxlcykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIG9uVXBsb2FkKGZpbGVzLCBldmVudCk7XG4gICAgfSxcbiAgICBbb25VcGxvYWRdXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8V3JhcHBlciBjbGFzc05hbWU9XCJ1cGxvYWQtYnV0dG9uXCI+XG4gICAgICA8aW5wdXRcbiAgICAgICAgdHlwZT1cImZpbGVcIlxuICAgICAgICByZWY9e19maWxlSW5wdXR9XG4gICAgICAgIHN0eWxlPXtpbnB1dFN0eWxlfVxuICAgICAgICBvbkNoYW5nZT17X29uQ2hhbmdlfVxuICAgICAgICBjbGFzc05hbWU9XCJ1cGxvYWQtYnV0dG9uLWlucHV0XCJcbiAgICAgIC8+XG4gICAgICA8c3BhbiBjbGFzc05hbWU9XCJmaWxlLXVwbG9hZF9fdXBsb2FkLWJ1dHRvbi1zcGFuXCIgb25DbGljaz17X29uQ2xpY2t9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L3NwYW4+XG4gICAgPC9XcmFwcGVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVXBsb2FkQnV0dG9uO1xuIl19