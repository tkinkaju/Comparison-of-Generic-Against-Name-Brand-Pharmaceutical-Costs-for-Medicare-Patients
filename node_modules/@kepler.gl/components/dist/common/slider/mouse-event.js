// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _document = _interopRequireDefault(require("global/document"));function nope() {}

var MouseEventHandler = /*#__PURE__*/function () {
  // Set correct type
  // Set correct type
  function MouseEventHandler(_ref) {
    var _this = this;

    var _ref$vertical = _ref.vertical,
        vertical = _ref$vertical === void 0 ? false : _ref$vertical,
        _ref$valueListener = _ref.valueListener,
        valueListener = _ref$valueListener === void 0 ? nope : _ref$valueListener,
        _ref$toggleMouseOver = _ref.toggleMouseOver,
        toggleMouseOver = _ref$toggleMouseOver === void 0 ? nope : _ref$toggleMouseOver,
        track = _ref.track,
        _ref$setAnchor = _ref.setAnchor,
        setAnchor = _ref$setAnchor === void 0 ? null : _ref$setAnchor;
    (0, _classCallCheck2["default"])(this, MouseEventHandler);
    (0, _defineProperty2["default"])(this, "vertical", void 0);
    (0, _defineProperty2["default"])(this, "valueListener", void 0);
    (0, _defineProperty2["default"])(this, "toggleMouseOver", void 0);
    (0, _defineProperty2["default"])(this, "track", void 0);
    (0, _defineProperty2["default"])(this, "setAnchor", void 0);
    (0, _defineProperty2["default"])(this, "handleMouseDown", function (e) {
      _document["default"].addEventListener('mouseup', _this.mouseup);

      _document["default"].addEventListener('mousemove', _this.mousemove);

      if (_this.setAnchor) {
        var pos = _this.getMousePos(e);

        _this.setAnchor(_this.getDistanceToTrack(pos));
      }

      _this.toggleMouseOver();
    });
    (0, _defineProperty2["default"])(this, "mouseup", function () {
      _document["default"].removeEventListener('mouseup', _this.mouseup);

      _document["default"].removeEventListener('mousemove', _this.mousemove);

      _this.toggleMouseOver();
    });
    (0, _defineProperty2["default"])(this, "mousemove", function (e) {
      e.preventDefault();

      var pos = _this.getMousePos(e);

      _this.valueListener(_this.getDistanceToTrack(pos));
    });
    (0, _defineProperty2["default"])(this, "handleTouchStart", function (e) {
      // TODO: fix touch event
      _document["default"].addEventListener('touchend', _this.touchend);

      _document["default"].addEventListener('touchmove', _this.touchmove);

      if (_this.setAnchor) {
        var pos = _this.getTouchPosition(e);

        _this.setAnchor(_this.getDistanceToTrack(pos));
      }

      _this.toggleMouseOver();
    });
    (0, _defineProperty2["default"])(this, "touchmove", function (e) {
      // TODO: touch not tested
      var pos = _this.getTouchPosition(e);

      _this.valueListener(_this.getDistanceToTrack(pos));
    });
    (0, _defineProperty2["default"])(this, "touchend", function () {
      _document["default"].removeEventListener('touchend', _this.touchend);

      _document["default"].removeEventListener('touchmove', _this.touchmove);

      _this.toggleMouseOver();
    });
    this.vertical = vertical;
    this.valueListener = valueListener;
    this.toggleMouseOver = toggleMouseOver;
    this.track = track;
    this.setAnchor = setAnchor;
  }

  (0, _createClass2["default"])(MouseEventHandler, [{
    key: "getMousePos",
    value: function getMousePos(e) {
      return this.vertical ? e.clientY : e.clientX;
    }
  }, {
    key: "getTouchPosition",
    value: function getTouchPosition(e) {
      return this.vertical ? e.touches[0].clientY : e.touches[0].clientX;
    }
  }, {
    key: "getDistanceToTrack",
    value: function getDistanceToTrack(pos) {
      if (!this.track.current) {
        return 0;
      }

      var trackRect = this.track.current.getBoundingClientRect();
      return pos - (this.vertical ? trackRect.bottom : trackRect.left);
    }
  }]);
  return MouseEventHandler;
}();

exports["default"] = MouseEventHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,