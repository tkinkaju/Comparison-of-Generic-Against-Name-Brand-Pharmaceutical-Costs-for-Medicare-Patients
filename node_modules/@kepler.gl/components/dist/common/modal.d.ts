/// <reference types="react-modal" />
import React, { Component, ReactNode } from 'react';
import { FlattenSimpleInterpolation } from 'styled-components';
export declare const ModalTitle: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ModalFooter: ({ cancel, confirm, cancelButton, confirmButton }: {
    cancel: any;
    confirm: any;
    cancelButton: any;
    confirmButton: any;
}) => JSX.Element;
interface ModalDialogOwnProps {
    footer: boolean;
    close: boolean;
    isOpen: boolean;
    title?: string;
    className?: string;
    onConfirm?: (...args: any) => void;
    onCancel: (...args: any) => void;
    confirmButton: object;
    confirmButtonLabel?: string;
    cancelButton: object;
    cancelButtonLabel?: string;
    cssStyle?: FlattenSimpleInterpolation | string;
    style?: React.CSSProperties;
    theme: any;
    children?: ReactNode;
}
export declare type ModalDialogProps = ModalDialogOwnProps & Omit<ReactModal.Props, 'style' | 'ariaHideApp' | 'className'>;
export declare class ModalDialog extends Component<ModalDialogProps> {
    static defaultProps: {
        footer: boolean;
        close: boolean;
        onConfirm: () => void;
        onCancel: () => void;
        cancelButton: {
            link: boolean;
            large: boolean;
            children: string;
        };
        confirmButton: {
            cta: boolean;
            large: boolean;
            width: string;
            children: string;
        };
        cssStyle: never[];
    };
    render(): JSX.Element;
}
declare const StyledModal: import("styled-components").StyledComponent<typeof ModalDialog, any, {}, never>;
export default StyledModal;
