// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _constants = require("@kepler.gl/constants");

var _templateObject;

function FieldTokenFactory(fieldTypeDisplay, fieldColors) {
  var FieldTag = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n    background-color: rgba(", ", 0.2);\n    border-radius: 2px;\n    border: 1px solid rgb(", ");\n    color: rgb(", ");\n    display: inline-block;\n    font-size: 10px;\n    font-weight: 400;\n    padding: 0 5px;\n    text-align: center;\n    width: 40px;\n    line-height: 20px;\n  "])), function (props) {
    return props.color;
  }, function (props) {
    return props.color;
  }, function (props) {
    return props.color;
  });

  var FieldToken = function FieldToken(_ref) {
    var type = _ref.type;
    return /*#__PURE__*/_react["default"].createElement(FieldTag, {
      color: fieldTypeDisplay[type] && fieldTypeDisplay[type].color || fieldColors["default"]
    }, fieldTypeDisplay[type].label);
  };

  return FieldToken;
}

function getFieldTypes() {
  return _constants.FIELD_TYPE_DISPLAY;
}

function getFieldColors() {
  return _constants.FIELD_COLORS;
}

FieldTokenFactory.deps = [getFieldTypes, getFieldColors];
var _default = FieldTokenFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb24vZmllbGQtdG9rZW4udHN4Il0sIm5hbWVzIjpbIkZpZWxkVG9rZW5GYWN0b3J5IiwiZmllbGRUeXBlRGlzcGxheSIsImZpZWxkQ29sb3JzIiwiRmllbGRUYWciLCJzdHlsZWQiLCJkaXYiLCJwcm9wcyIsImNvbG9yIiwiRmllbGRUb2tlbiIsInR5cGUiLCJsYWJlbCIsImdldEZpZWxkVHlwZXMiLCJGSUVMRF9UWVBFX0RJU1BMQVkiLCJnZXRGaWVsZENvbG9ycyIsIkZJRUxEX0NPTE9SUyIsImRlcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBb0JBOztBQUNBOztBQUNBOzs7O0FBTUEsU0FBU0EsaUJBQVQsQ0FDRUMsZ0JBREYsRUFFRUMsV0FGRixFQUc2QjtBQUMzQixNQUFNQyxRQUFRLEdBQUdDLDZCQUFPQyxHQUFWLHNYQUNhLFVBQUFDLEtBQUs7QUFBQSxXQUFJQSxLQUFLLENBQUNDLEtBQVY7QUFBQSxHQURsQixFQUdZLFVBQUFELEtBQUs7QUFBQSxXQUFJQSxLQUFLLENBQUNDLEtBQVY7QUFBQSxHQUhqQixFQUlDLFVBQUFELEtBQUs7QUFBQSxXQUFJQSxLQUFLLENBQUNDLEtBQVY7QUFBQSxHQUpOLENBQWQ7O0FBY0EsTUFBTUMsVUFBVSxHQUFHLFNBQWJBLFVBQWE7QUFBQSxRQUFFQyxJQUFGLFFBQUVBLElBQUY7QUFBQSx3QkFDakIsZ0NBQUMsUUFBRDtBQUNFLE1BQUEsS0FBSyxFQUFHUixnQkFBZ0IsQ0FBQ1EsSUFBRCxDQUFoQixJQUEwQlIsZ0JBQWdCLENBQUNRLElBQUQsQ0FBaEIsQ0FBdUJGLEtBQWxELElBQTRETCxXQUFXO0FBRGhGLE9BR0dELGdCQUFnQixDQUFDUSxJQUFELENBQWhCLENBQXVCQyxLQUgxQixDQURpQjtBQUFBLEdBQW5COztBQU9BLFNBQU9GLFVBQVA7QUFDRDs7QUFFRCxTQUFTRyxhQUFULEdBQXlCO0FBQ3ZCLFNBQU9DLDZCQUFQO0FBQ0Q7O0FBRUQsU0FBU0MsY0FBVCxHQUEwQjtBQUN4QixTQUFPQyx1QkFBUDtBQUNEOztBQUNEZCxpQkFBaUIsQ0FBQ2UsSUFBbEIsR0FBeUIsQ0FBQ0osYUFBRCxFQUFnQkUsY0FBaEIsQ0FBekI7ZUFDZWIsaUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMjIgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQge0ZJRUxEX1RZUEVfRElTUExBWSwgRklFTERfQ09MT1JTfSBmcm9tICdAa2VwbGVyLmdsL2NvbnN0YW50cyc7XG5cbmV4cG9ydCB0eXBlIEZpZWxkVG9rZW5Qcm9wcyA9IHtcbiAgdHlwZTogc3RyaW5nO1xufTtcblxuZnVuY3Rpb24gRmllbGRUb2tlbkZhY3RvcnkoXG4gIGZpZWxkVHlwZURpc3BsYXk6IFJldHVyblR5cGU8dHlwZW9mIGdldEZpZWxkVHlwZXM+LFxuICBmaWVsZENvbG9yczogUmV0dXJuVHlwZTx0eXBlb2YgZ2V0RmllbGRDb2xvcnM+XG4pOiBSZWFjdC5GQzxGaWVsZFRva2VuUHJvcHM+IHtcbiAgY29uc3QgRmllbGRUYWcgPSBzdHlsZWQuZGl2YFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJHtwcm9wcyA9PiBwcm9wcy5jb2xvcn0sIDAuMik7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigke3Byb3BzID0+IHByb3BzLmNvbG9yfSk7XG4gICAgY29sb3I6IHJnYigke3Byb3BzID0+IHByb3BzLmNvbG9yfSk7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHBhZGRpbmc6IDAgNXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogNDBweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgYDtcblxuICBjb25zdCBGaWVsZFRva2VuID0gKHt0eXBlfTogRmllbGRUb2tlblByb3BzKSA9PiAoXG4gICAgPEZpZWxkVGFnXG4gICAgICBjb2xvcj17KGZpZWxkVHlwZURpc3BsYXlbdHlwZV0gJiYgZmllbGRUeXBlRGlzcGxheVt0eXBlXS5jb2xvcikgfHwgZmllbGRDb2xvcnMuZGVmYXVsdH1cbiAgICA+XG4gICAgICB7ZmllbGRUeXBlRGlzcGxheVt0eXBlXS5sYWJlbH1cbiAgICA8L0ZpZWxkVGFnPlxuICApO1xuICByZXR1cm4gRmllbGRUb2tlbjtcbn1cblxuZnVuY3Rpb24gZ2V0RmllbGRUeXBlcygpIHtcbiAgcmV0dXJuIEZJRUxEX1RZUEVfRElTUExBWTtcbn1cblxuZnVuY3Rpb24gZ2V0RmllbGRDb2xvcnMoKSB7XG4gIHJldHVybiBGSUVMRF9DT0xPUlM7XG59XG5GaWVsZFRva2VuRmFjdG9yeS5kZXBzID0gW2dldEZpZWxkVHlwZXMsIGdldEZpZWxkQ29sb3JzXTtcbmV4cG9ydCBkZWZhdWx0IEZpZWxkVG9rZW5GYWN0b3J5O1xuIl19