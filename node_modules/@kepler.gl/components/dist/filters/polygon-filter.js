// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _itemSelector = _interopRequireDefault(require("../common/item-selector/item-selector"));

var _constants = require("@kepler.gl/constants");

var _components = require("./components");var layerFilter = function layerFilter(layer) {
  return layer.type === _constants.LAYER_TYPES.point;
};

var isAlreadySelected = function isAlreadySelected(selectedLayers, layerId) {
  return selectedLayers.findIndex(function (l) {
    return l.id === layerId;
  }) === -1;
};

function PolygonFilterFactory() {
  var PolygonFilter = /*#__PURE__*/_react["default"].memo(function (_ref) {
    var filter = _ref.filter,
        layers = _ref.layers,
        setLayers = _ref.setLayers;
    var setNewLayers = (0, _react.useCallback)(function (newLayers) {
      return setLayers(newLayers.map(function (l) {
        return l.id;
      }));
    }, [setLayers]);
    var selectedLayers = (0, _react.useMemo)(function () {
      return layers.filter(function (l) {
        var _filter$layerId;

        return (_filter$layerId = filter.layerId) === null || _filter$layerId === void 0 ? void 0 : _filter$layerId.includes(l.id);
      });
    }, [filter, layers]);
    var availableLayers = (0, _react.useMemo)(function () {
      // remove already added layers and filter out non point layers
      return layers.filter(function (layer) {
        return layerFilter(layer) && isAlreadySelected(selectedLayers, layer.id);
      });
    }, [layers, selectedLayers]);
    return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_components.StyledFilterPanel, {
      htmlFor: "filter-".concat(filter.id)
    }, "Layers:"), /*#__PURE__*/_react["default"].createElement(_itemSelector["default"], {
      options: availableLayers,
      selectedItems: selectedLayers,
      onChange: setNewLayers,
      searchable: false,
      multiSelect: true,
      getOptionValue: function getOptionValue(l) {
        return l.id;
      },
      displayOption: function displayOption(l) {
        return l.config.label;
      }
    }));
  });

  PolygonFilter.displayName = 'PolygonFilter';
  return PolygonFilter;
}

var _default = PolygonFilterFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9maWx0ZXJzL3BvbHlnb24tZmlsdGVyLnRzeCJdLCJuYW1lcyI6WyJsYXllckZpbHRlciIsImxheWVyIiwidHlwZSIsIkxBWUVSX1RZUEVTIiwicG9pbnQiLCJpc0FscmVhZHlTZWxlY3RlZCIsInNlbGVjdGVkTGF5ZXJzIiwibGF5ZXJJZCIsImZpbmRJbmRleCIsImwiLCJpZCIsIlBvbHlnb25GaWx0ZXJGYWN0b3J5IiwiUG9seWdvbkZpbHRlciIsIlJlYWN0IiwibWVtbyIsImZpbHRlciIsImxheWVycyIsInNldExheWVycyIsInNldE5ld0xheWVycyIsIm5ld0xheWVycyIsIm1hcCIsImluY2x1ZGVzIiwiYXZhaWxhYmxlTGF5ZXJzIiwiY29uZmlnIiwibGFiZWwiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFvQkE7O0FBQ0E7O0FBRUE7O0FBRUE7O0FBekJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBU0EsSUFBTUEsV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBQ0MsS0FBRDtBQUFBLFNBQWtCQSxLQUFLLENBQUNDLElBQU4sS0FBZUMsdUJBQVlDLEtBQTdDO0FBQUEsQ0FBcEI7O0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUFDQyxjQUFELEVBQTBCQyxPQUExQjtBQUFBLFNBQ3hCRCxjQUFjLENBQUNFLFNBQWYsQ0FBeUIsVUFBQUMsQ0FBQztBQUFBLFdBQUlBLENBQUMsQ0FBQ0MsRUFBRixLQUFTSCxPQUFiO0FBQUEsR0FBMUIsTUFBb0QsQ0FBQyxDQUQ3QjtBQUFBLENBQTFCOztBQUdBLFNBQVNJLG9CQUFULEdBQWdDO0FBQzlCLE1BQU1DLGFBQTJDLGdCQUFHQyxrQkFBTUMsSUFBTixDQUFXLGdCQUFpQztBQUFBLFFBQS9CQyxNQUErQixRQUEvQkEsTUFBK0I7QUFBQSxRQUF2QkMsTUFBdUIsUUFBdkJBLE1BQXVCO0FBQUEsUUFBZkMsU0FBZSxRQUFmQSxTQUFlO0FBQzlGLFFBQU1DLFlBQVksR0FBRyx3QkFDbkIsVUFBQUMsU0FBUyxFQUFJO0FBQ1gsYUFBT0YsU0FBUyxDQUFDRSxTQUFTLENBQUNDLEdBQVYsQ0FBYyxVQUFDWCxDQUFEO0FBQUEsZUFBY0EsQ0FBQyxDQUFDQyxFQUFoQjtBQUFBLE9BQWQsQ0FBRCxDQUFoQjtBQUNELEtBSGtCLEVBSW5CLENBQUNPLFNBQUQsQ0FKbUIsQ0FBckI7QUFPQSxRQUFNWCxjQUFjLEdBQUcsb0JBQVE7QUFBQSxhQUFNVSxNQUFNLENBQUNELE1BQVAsQ0FBYyxVQUFBTixDQUFDO0FBQUE7O0FBQUEsa0NBQUlNLE1BQU0sQ0FBQ1IsT0FBWCxvREFBSSxnQkFBZ0JjLFFBQWhCLENBQXlCWixDQUFDLENBQUNDLEVBQTNCLENBQUo7QUFBQSxPQUFmLENBQU47QUFBQSxLQUFSLEVBQWtFLENBQ3ZGSyxNQUR1RixFQUV2RkMsTUFGdUYsQ0FBbEUsQ0FBdkI7QUFLQSxRQUFNTSxlQUFlLEdBQUcsb0JBQVEsWUFBTTtBQUNwQztBQUNBLGFBQU9OLE1BQU0sQ0FBQ0QsTUFBUCxDQUNMLFVBQUFkLEtBQUs7QUFBQSxlQUFJRCxXQUFXLENBQUNDLEtBQUQsQ0FBWCxJQUFzQkksaUJBQWlCLENBQUNDLGNBQUQsRUFBaUJMLEtBQUssQ0FBQ1MsRUFBdkIsQ0FBM0M7QUFBQSxPQURBLENBQVA7QUFHRCxLQUx1QixFQUtyQixDQUFDTSxNQUFELEVBQVNWLGNBQVQsQ0FMcUIsQ0FBeEI7QUFPQSx3QkFDRSwwREFDRSxnQ0FBQyw2QkFBRDtBQUFtQixNQUFBLE9BQU8sbUJBQVlTLE1BQU0sQ0FBQ0wsRUFBbkI7QUFBMUIsaUJBREYsZUFFRSxnQ0FBQyx3QkFBRDtBQUNFLE1BQUEsT0FBTyxFQUFFWSxlQURYO0FBRUUsTUFBQSxhQUFhLEVBQUVoQixjQUZqQjtBQUdFLE1BQUEsUUFBUSxFQUFFWSxZQUhaO0FBSUUsTUFBQSxVQUFVLEVBQUUsS0FKZDtBQUtFLE1BQUEsV0FBVyxFQUFFLElBTGY7QUFNRSxNQUFBLGNBQWMsRUFBRSx3QkFBQ1QsQ0FBRDtBQUFBLGVBQWNBLENBQUMsQ0FBQ0MsRUFBaEI7QUFBQSxPQU5sQjtBQU9FLE1BQUEsYUFBYSxFQUFFLHVCQUFDRCxDQUFEO0FBQUEsZUFBY0EsQ0FBQyxDQUFDYyxNQUFGLENBQVNDLEtBQXZCO0FBQUE7QUFQakIsTUFGRixDQURGO0FBY0QsR0FsQ21ELENBQXBEOztBQW9DQVosRUFBQUEsYUFBYSxDQUFDYSxXQUFkLEdBQTRCLGVBQTVCO0FBRUEsU0FBT2IsYUFBUDtBQUNEOztlQUVjRCxvQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAyMiBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCBSZWFjdCwge3VzZU1lbW8sIHVzZUNhbGxiYWNrfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSXRlbVNlbGVjdG9yIGZyb20gJy4uL2NvbW1vbi9pdGVtLXNlbGVjdG9yL2l0ZW0tc2VsZWN0b3InO1xuaW1wb3J0IHtMYXllcn0gZnJvbSAnQGtlcGxlci5nbC9sYXllcnMnO1xuaW1wb3J0IHtMQVlFUl9UWVBFU30gZnJvbSAnQGtlcGxlci5nbC9jb25zdGFudHMnO1xuaW1wb3J0IHtQb2x5Z29uRmlsdGVyUHJvcHN9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHtTdHlsZWRGaWx0ZXJQYW5lbH0gZnJvbSAnLi9jb21wb25lbnRzJztcblxuY29uc3QgbGF5ZXJGaWx0ZXIgPSAobGF5ZXI6IExheWVyKSA9PiBsYXllci50eXBlID09PSBMQVlFUl9UWVBFUy5wb2ludDtcbmNvbnN0IGlzQWxyZWFkeVNlbGVjdGVkID0gKHNlbGVjdGVkTGF5ZXJzOiBMYXllcltdLCBsYXllcklkOiBzdHJpbmcpID0+XG4gIHNlbGVjdGVkTGF5ZXJzLmZpbmRJbmRleChsID0+IGwuaWQgPT09IGxheWVySWQpID09PSAtMTtcblxuZnVuY3Rpb24gUG9seWdvbkZpbHRlckZhY3RvcnkoKSB7XG4gIGNvbnN0IFBvbHlnb25GaWx0ZXI6IFJlYWN0LkZDPFBvbHlnb25GaWx0ZXJQcm9wcz4gPSBSZWFjdC5tZW1vKCh7ZmlsdGVyLCBsYXllcnMsIHNldExheWVyc30pID0+IHtcbiAgICBjb25zdCBzZXROZXdMYXllcnMgPSB1c2VDYWxsYmFjayhcbiAgICAgIG5ld0xheWVycyA9PiB7XG4gICAgICAgIHJldHVybiBzZXRMYXllcnMobmV3TGF5ZXJzLm1hcCgobDogTGF5ZXIpID0+IGwuaWQpKTtcbiAgICAgIH0sXG4gICAgICBbc2V0TGF5ZXJzXVxuICAgICk7XG5cbiAgICBjb25zdCBzZWxlY3RlZExheWVycyA9IHVzZU1lbW8oKCkgPT4gbGF5ZXJzLmZpbHRlcihsID0+IGZpbHRlci5sYXllcklkPy5pbmNsdWRlcyhsLmlkKSksIFtcbiAgICAgIGZpbHRlcixcbiAgICAgIGxheWVyc1xuICAgIF0pO1xuXG4gICAgY29uc3QgYXZhaWxhYmxlTGF5ZXJzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAvLyByZW1vdmUgYWxyZWFkeSBhZGRlZCBsYXllcnMgYW5kIGZpbHRlciBvdXQgbm9uIHBvaW50IGxheWVyc1xuICAgICAgcmV0dXJuIGxheWVycy5maWx0ZXIoXG4gICAgICAgIGxheWVyID0+IGxheWVyRmlsdGVyKGxheWVyKSAmJiBpc0FscmVhZHlTZWxlY3RlZChzZWxlY3RlZExheWVycywgbGF5ZXIuaWQpXG4gICAgICApO1xuICAgIH0sIFtsYXllcnMsIHNlbGVjdGVkTGF5ZXJzXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPFN0eWxlZEZpbHRlclBhbmVsIGh0bWxGb3I9e2BmaWx0ZXItJHtmaWx0ZXIuaWR9YH0+TGF5ZXJzOjwvU3R5bGVkRmlsdGVyUGFuZWw+XG4gICAgICAgIDxJdGVtU2VsZWN0b3JcbiAgICAgICAgICBvcHRpb25zPXthdmFpbGFibGVMYXllcnN9XG4gICAgICAgICAgc2VsZWN0ZWRJdGVtcz17c2VsZWN0ZWRMYXllcnN9XG4gICAgICAgICAgb25DaGFuZ2U9e3NldE5ld0xheWVyc31cbiAgICAgICAgICBzZWFyY2hhYmxlPXtmYWxzZX1cbiAgICAgICAgICBtdWx0aVNlbGVjdD17dHJ1ZX1cbiAgICAgICAgICBnZXRPcHRpb25WYWx1ZT17KGw6IExheWVyKSA9PiBsLmlkfVxuICAgICAgICAgIGRpc3BsYXlPcHRpb249eyhsOiBMYXllcikgPT4gbC5jb25maWcubGFiZWx9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9KTtcblxuICBQb2x5Z29uRmlsdGVyLmRpc3BsYXlOYW1lID0gJ1BvbHlnb25GaWx0ZXInO1xuXG4gIHJldHVybiBQb2x5Z29uRmlsdGVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBQb2x5Z29uRmlsdGVyRmFjdG9yeTtcbiJdfQ==