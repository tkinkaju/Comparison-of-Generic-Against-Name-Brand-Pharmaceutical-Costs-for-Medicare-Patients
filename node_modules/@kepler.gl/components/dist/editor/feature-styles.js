// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.noOp = noOp;
exports.getStyle = getStyle;
exports.RENDER_TYPE_STYLES = exports.DEFAULT_STROKE_DASH_ARRAY = exports.STATE_STYLES_STROKE_WIDTH = exports.DEFAULT_STATE_STYLE_OPACITY = exports.STATE_STYLES_FILL = exports.DEFAULT_STATE_STYLE_FILL = exports.STATE_STYLES_STROKE = exports.DEFAULT_STATE_STYLE_STROKE = exports.DEFAULT_RADIUS = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reactMapGlDraw = require("react-map-gl-draw");

var _lodash = _interopRequireDefault(require("lodash.get"));

var _constants = require("./constants");

var _STATE_STYLES_STROKE, _STATE_STYLES_FILL, _RENDER_TYPE_STYLES;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var DEFAULT_RADIUS = 5;
exports.DEFAULT_RADIUS = DEFAULT_RADIUS;
var DEFAULT_STATE_STYLE_STROKE = _constants.COLORS.PRIMARY;
exports.DEFAULT_STATE_STYLE_STROKE = DEFAULT_STATE_STYLE_STROKE;
var STATE_STYLES_STROKE = (_STATE_STYLES_STROKE = {}, (0, _defineProperty2["default"])(_STATE_STYLES_STROKE, _reactMapGlDraw.RenderStates.INACTIVE, '#26B5F2'), (0, _defineProperty2["default"])(_STATE_STYLES_STROKE, _reactMapGlDraw.RenderStates.UNCOMMITTED, '#a9a9a9'), (0, _defineProperty2["default"])(_STATE_STYLES_STROKE, _reactMapGlDraw.RenderStates.CLOSING, '#a9a9a9'), (0, _defineProperty2["default"])(_STATE_STYLES_STROKE, _reactMapGlDraw.RenderStates.SELECTED, '#26B5F2'), (0, _defineProperty2["default"])(_STATE_STYLES_STROKE, _reactMapGlDraw.RenderStates.HOVERED, '#26B5F2'), _STATE_STYLES_STROKE);
exports.STATE_STYLES_STROKE = STATE_STYLES_STROKE;
var DEFAULT_STATE_STYLE_FILL = '#000';
exports.DEFAULT_STATE_STYLE_FILL = DEFAULT_STATE_STYLE_FILL;
var STATE_STYLES_FILL = (_STATE_STYLES_FILL = {}, (0, _defineProperty2["default"])(_STATE_STYLES_FILL, _reactMapGlDraw.RenderStates.INACTIVE, '#333333'), (0, _defineProperty2["default"])(_STATE_STYLES_FILL, _reactMapGlDraw.RenderStates.HOVERED, '#7ac943'), (0, _defineProperty2["default"])(_STATE_STYLES_FILL, _reactMapGlDraw.RenderStates.SELECTED, '#ffff00'), (0, _defineProperty2["default"])(_STATE_STYLES_FILL, _reactMapGlDraw.RenderStates.UNCOMMITTED, '#a9a9a9'), (0, _defineProperty2["default"])(_STATE_STYLES_FILL, _reactMapGlDraw.RenderStates.CLOSING, '#a9a9a9'), _STATE_STYLES_FILL);
exports.STATE_STYLES_FILL = STATE_STYLES_FILL;
var DEFAULT_STATE_STYLE_OPACITY = 0.1;
exports.DEFAULT_STATE_STYLE_OPACITY = DEFAULT_STATE_STYLE_OPACITY;
var STATE_STYLES_STROKE_WIDTH = 2;
exports.STATE_STYLES_STROKE_WIDTH = STATE_STYLES_STROKE_WIDTH;
var DEFAULT_STROKE_DASH_ARRAY = '4,2';
exports.DEFAULT_STROKE_DASH_ARRAY = DEFAULT_STROKE_DASH_ARRAY;
var RENDER_TYPE_STYLES = (_RENDER_TYPE_STYLES = {}, (0, _defineProperty2["default"])(_RENDER_TYPE_STYLES, _reactMapGlDraw.RenderTypes.POINT, function () {
  return {
    r: DEFAULT_RADIUS
  };
}), (0, _defineProperty2["default"])(_RENDER_TYPE_STYLES, _reactMapGlDraw.RenderTypes.LINE_STRING, function () {
  return {
    fill: 'none'
  };
}), _RENDER_TYPE_STYLES);
exports.RENDER_TYPE_STYLES = RENDER_TYPE_STYLES;

function noOp() {}

function getStyle(_ref) {
  var feature = _ref.feature,
      state = _ref.state;
  var isVisible = (0, _lodash["default"])(feature, ['properties', 'isVisible'], true);

  var style = _objectSpread({
    stroke: STATE_STYLES_STROKE[state] || DEFAULT_STATE_STYLE_STROKE,
    strokeWidth: isVisible ? STATE_STYLES_STROKE_WIDTH : 0,
    fill: STATE_STYLES_FILL[state] || DEFAULT_STATE_STYLE_FILL,
    fillOpacity: DEFAULT_STATE_STYLE_OPACITY
  }, state !== _reactMapGlDraw.RenderStates.SELECTED ? {
    strokeDasharray: DEFAULT_STROKE_DASH_ARRAY
  } : null);

  var renderType = feature.properties ? feature.properties.renderType : feature.renderType;
  return _objectSpread(_objectSpread({}, style), (RENDER_TYPE_STYLES[renderType] || noOp)());
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lZGl0b3IvZmVhdHVyZS1zdHlsZXMudHMiXSwibmFtZXMiOlsiREVGQVVMVF9SQURJVVMiLCJERUZBVUxUX1NUQVRFX1NUWUxFX1NUUk9LRSIsIkNPTE9SUyIsIlBSSU1BUlkiLCJTVEFURV9TVFlMRVNfU1RST0tFIiwiUmVuZGVyU3RhdGVzIiwiSU5BQ1RJVkUiLCJVTkNPTU1JVFRFRCIsIkNMT1NJTkciLCJTRUxFQ1RFRCIsIkhPVkVSRUQiLCJERUZBVUxUX1NUQVRFX1NUWUxFX0ZJTEwiLCJTVEFURV9TVFlMRVNfRklMTCIsIkRFRkFVTFRfU1RBVEVfU1RZTEVfT1BBQ0lUWSIsIlNUQVRFX1NUWUxFU19TVFJPS0VfV0lEVEgiLCJERUZBVUxUX1NUUk9LRV9EQVNIX0FSUkFZIiwiUkVOREVSX1RZUEVfU1RZTEVTIiwiUmVuZGVyVHlwZXMiLCJQT0lOVCIsInIiLCJMSU5FX1NUUklORyIsImZpbGwiLCJub09wIiwiZ2V0U3R5bGUiLCJmZWF0dXJlIiwic3RhdGUiLCJpc1Zpc2libGUiLCJzdHlsZSIsInN0cm9rZSIsInN0cm9rZVdpZHRoIiwiZmlsbE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJyZW5kZXJUeXBlIiwicHJvcGVydGllcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQW9CQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFTyxJQUFNQSxjQUFjLEdBQUcsQ0FBdkI7O0FBQ0EsSUFBTUMsMEJBQTBCLEdBQUdDLGtCQUFPQyxPQUExQzs7QUFFQSxJQUFNQyxtQkFBbUIsc0ZBQzdCQyw2QkFBYUMsUUFEZ0IsRUFDTCxTQURLLDBEQUU3QkQsNkJBQWFFLFdBRmdCLEVBRUYsU0FGRSwwREFHN0JGLDZCQUFhRyxPQUhnQixFQUdOLFNBSE0sMERBSTdCSCw2QkFBYUksUUFKZ0IsRUFJTCxTQUpLLDBEQUs3QkosNkJBQWFLLE9BTGdCLEVBS04sU0FMTSx3QkFBekI7O0FBUUEsSUFBTUMsd0JBQXdCLEdBQUcsTUFBakM7O0FBRUEsSUFBTUMsaUJBQWlCLGtGQUMzQlAsNkJBQWFDLFFBRGMsRUFDSCxTQURHLHdEQUUzQkQsNkJBQWFLLE9BRmMsRUFFSixTQUZJLHdEQUczQkwsNkJBQWFJLFFBSGMsRUFHSCxTQUhHLHdEQUkzQkosNkJBQWFFLFdBSmMsRUFJQSxTQUpBLHdEQUszQkYsNkJBQWFHLE9BTGMsRUFLSixTQUxJLHNCQUF2Qjs7QUFRQSxJQUFNSywyQkFBMkIsR0FBRyxHQUFwQzs7QUFFQSxJQUFNQyx5QkFBeUIsR0FBRyxDQUFsQzs7QUFFQSxJQUFNQyx5QkFBeUIsR0FBRyxLQUFsQzs7QUFFQSxJQUFNQyxrQkFBa0Isb0ZBQzVCQyw0QkFBWUMsS0FEZ0IsRUFDUjtBQUFBLFNBQU87QUFBQ0MsSUFBQUEsQ0FBQyxFQUFFbkI7QUFBSixHQUFQO0FBQUEsQ0FEUSx5REFFNUJpQiw0QkFBWUcsV0FGZ0IsRUFFRjtBQUFBLFNBQU87QUFBQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQVAsR0FBUDtBQUFBLENBRkUsdUJBQXhCOzs7QUFLQSxTQUFTQyxJQUFULEdBQWdCLENBQUU7O0FBRWxCLFNBQVNDLFFBQVQsT0FBb0M7QUFBQSxNQUFqQkMsT0FBaUIsUUFBakJBLE9BQWlCO0FBQUEsTUFBUkMsS0FBUSxRQUFSQSxLQUFRO0FBQ3pDLE1BQU1DLFNBQVMsR0FBRyx3QkFBSUYsT0FBSixFQUFhLENBQUMsWUFBRCxFQUFlLFdBQWYsQ0FBYixFQUEwQyxJQUExQyxDQUFsQjs7QUFDQSxNQUFNRyxLQUFLO0FBQ1RDLElBQUFBLE1BQU0sRUFBRXhCLG1CQUFtQixDQUFDcUIsS0FBRCxDQUFuQixJQUE4QnhCLDBCQUQ3QjtBQUVUNEIsSUFBQUEsV0FBVyxFQUFFSCxTQUFTLEdBQUdaLHlCQUFILEdBQStCLENBRjVDO0FBR1RPLElBQUFBLElBQUksRUFBRVQsaUJBQWlCLENBQUNhLEtBQUQsQ0FBakIsSUFBNEJkLHdCQUh6QjtBQUlUbUIsSUFBQUEsV0FBVyxFQUFFakI7QUFKSixLQUtMWSxLQUFLLEtBQUtwQiw2QkFBYUksUUFBdkIsR0FBa0M7QUFBQ3NCLElBQUFBLGVBQWUsRUFBRWhCO0FBQWxCLEdBQWxDLEdBQWlGLElBTDVFLENBQVg7O0FBUUEsTUFBTWlCLFVBQVUsR0FBR1IsT0FBTyxDQUFDUyxVQUFSLEdBQXFCVCxPQUFPLENBQUNTLFVBQVIsQ0FBbUJELFVBQXhDLEdBQXFEUixPQUFPLENBQUNRLFVBQWhGO0FBRUEseUNBQ0tMLEtBREwsR0FFSyxDQUFDWCxrQkFBa0IsQ0FBQ2dCLFVBQUQsQ0FBbEIsSUFBa0NWLElBQW5DLEdBRkw7QUFJRCIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAyMiBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCB7UmVuZGVyU3RhdGVzLCBSZW5kZXJUeXBlc30gZnJvbSAncmVhY3QtbWFwLWdsLWRyYXcnO1xuaW1wb3J0IGdldCBmcm9tICdsb2Rhc2guZ2V0JztcbmltcG9ydCB7Q09MT1JTfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1JBRElVUyA9IDU7XG5leHBvcnQgY29uc3QgREVGQVVMVF9TVEFURV9TVFlMRV9TVFJPS0UgPSBDT0xPUlMuUFJJTUFSWTtcblxuZXhwb3J0IGNvbnN0IFNUQVRFX1NUWUxFU19TVFJPS0UgPSB7XG4gIFtSZW5kZXJTdGF0ZXMuSU5BQ1RJVkVdOiAnIzI2QjVGMicsXG4gIFtSZW5kZXJTdGF0ZXMuVU5DT01NSVRURURdOiAnI2E5YTlhOScsXG4gIFtSZW5kZXJTdGF0ZXMuQ0xPU0lOR106ICcjYTlhOWE5JyxcbiAgW1JlbmRlclN0YXRlcy5TRUxFQ1RFRF06ICcjMjZCNUYyJyxcbiAgW1JlbmRlclN0YXRlcy5IT1ZFUkVEXTogJyMyNkI1RjInXG59O1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9TVEFURV9TVFlMRV9GSUxMID0gJyMwMDAnO1xuXG5leHBvcnQgY29uc3QgU1RBVEVfU1RZTEVTX0ZJTEwgPSB7XG4gIFtSZW5kZXJTdGF0ZXMuSU5BQ1RJVkVdOiAnIzMzMzMzMycsXG4gIFtSZW5kZXJTdGF0ZXMuSE9WRVJFRF06ICcjN2FjOTQzJyxcbiAgW1JlbmRlclN0YXRlcy5TRUxFQ1RFRF06ICcjZmZmZjAwJyxcbiAgW1JlbmRlclN0YXRlcy5VTkNPTU1JVFRFRF06ICcjYTlhOWE5JyxcbiAgW1JlbmRlclN0YXRlcy5DTE9TSU5HXTogJyNhOWE5YTknXG59O1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9TVEFURV9TVFlMRV9PUEFDSVRZID0gMC4xO1xuXG5leHBvcnQgY29uc3QgU1RBVEVfU1RZTEVTX1NUUk9LRV9XSURUSCA9IDI7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1NUUk9LRV9EQVNIX0FSUkFZID0gJzQsMic7XG5cbmV4cG9ydCBjb25zdCBSRU5ERVJfVFlQRV9TVFlMRVMgPSB7XG4gIFtSZW5kZXJUeXBlcy5QT0lOVF06ICgpID0+ICh7cjogREVGQVVMVF9SQURJVVN9KSxcbiAgW1JlbmRlclR5cGVzLkxJTkVfU1RSSU5HXTogKCkgPT4gKHtmaWxsOiAnbm9uZSd9KVxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIG5vT3AoKSB7fVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3R5bGUoe2ZlYXR1cmUsIHN0YXRlfSkge1xuICBjb25zdCBpc1Zpc2libGUgPSBnZXQoZmVhdHVyZSwgWydwcm9wZXJ0aWVzJywgJ2lzVmlzaWJsZSddLCB0cnVlKTtcbiAgY29uc3Qgc3R5bGUgPSB7XG4gICAgc3Ryb2tlOiBTVEFURV9TVFlMRVNfU1RST0tFW3N0YXRlXSB8fCBERUZBVUxUX1NUQVRFX1NUWUxFX1NUUk9LRSxcbiAgICBzdHJva2VXaWR0aDogaXNWaXNpYmxlID8gU1RBVEVfU1RZTEVTX1NUUk9LRV9XSURUSCA6IDAsXG4gICAgZmlsbDogU1RBVEVfU1RZTEVTX0ZJTExbc3RhdGVdIHx8IERFRkFVTFRfU1RBVEVfU1RZTEVfRklMTCxcbiAgICBmaWxsT3BhY2l0eTogREVGQVVMVF9TVEFURV9TVFlMRV9PUEFDSVRZLFxuICAgIC4uLihzdGF0ZSAhPT0gUmVuZGVyU3RhdGVzLlNFTEVDVEVEID8ge3N0cm9rZURhc2hhcnJheTogREVGQVVMVF9TVFJPS0VfREFTSF9BUlJBWX0gOiBudWxsKVxuICB9O1xuXG4gIGNvbnN0IHJlbmRlclR5cGUgPSBmZWF0dXJlLnByb3BlcnRpZXMgPyBmZWF0dXJlLnByb3BlcnRpZXMucmVuZGVyVHlwZSA6IGZlYXR1cmUucmVuZGVyVHlwZTtcblxuICByZXR1cm4ge1xuICAgIC4uLnN0eWxlLFxuICAgIC4uLihSRU5ERVJfVFlQRV9TVFlMRVNbcmVuZGVyVHlwZV0gfHwgbm9PcCkoKVxuICB9O1xufVxuIl19