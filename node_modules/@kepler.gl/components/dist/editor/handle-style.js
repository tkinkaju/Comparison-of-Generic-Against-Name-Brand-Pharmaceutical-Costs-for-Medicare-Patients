// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStyle = getStyle;
exports.getEditHandleShape = getEditHandleShape;
exports.DEFAULT_RADIUS = exports.DEFAULT_STATE_STYLE_OPACITY = exports.RENDER_TYPE_STYLES = exports.STATE_STYLES_FILL = exports.DEFAULT_STATE_STYLE_FILL = exports.STATE_STYLES_STROKE = exports.DEFAULT_STATE_STYLE_STROKE = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reactMapGlDraw = require("react-map-gl-draw");

var _constants = require("./constants");

var _lodash = _interopRequireDefault(require("lodash.get"));

var _STATE_STYLES_STROKE, _STATE_STYLES_FILL, _RENDER_TYPE_STYLES;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var DEFAULT_EDIT_HANDLE_SHAPE = 'circle';
var rectStyle = {
  x: -6,
  y: -6,
  height: 12,
  width: 12
};
var DEFAULT_STATE_STYLE_STROKE = _constants.COLORS.PRIMARY;
exports.DEFAULT_STATE_STYLE_STROKE = DEFAULT_STATE_STYLE_STROKE;
var STATE_STYLES_STROKE = (_STATE_STYLES_STROKE = {}, (0, _defineProperty2["default"])(_STATE_STYLES_STROKE, _reactMapGlDraw.RenderStates.SELECTED, _constants.COLORS.PRIMARY), (0, _defineProperty2["default"])(_STATE_STYLES_STROKE, _reactMapGlDraw.RenderStates.HOVERED, _constants.COLORS.SECONDARY), _STATE_STYLES_STROKE);
exports.STATE_STYLES_STROKE = STATE_STYLES_STROKE;
var DEFAULT_STATE_STYLE_FILL = '#ffffff';
exports.DEFAULT_STATE_STYLE_FILL = DEFAULT_STATE_STYLE_FILL;
var STATE_STYLES_FILL = (_STATE_STYLES_FILL = {}, (0, _defineProperty2["default"])(_STATE_STYLES_FILL, _reactMapGlDraw.RenderStates.SELECTED, _constants.COLORS.SECONDARY), (0, _defineProperty2["default"])(_STATE_STYLES_FILL, _reactMapGlDraw.RenderStates.HOVERED, _constants.COLORS.SECONDARY), (0, _defineProperty2["default"])(_STATE_STYLES_FILL, _reactMapGlDraw.RenderStates.INACTIVE, _constants.COLORS.PRIMARY), (0, _defineProperty2["default"])(_STATE_STYLES_FILL, _reactMapGlDraw.RenderStates.UNCOMMITTED, _constants.COLORS.PRIMARY), _STATE_STYLES_FILL);
exports.STATE_STYLES_FILL = STATE_STYLES_FILL;
var STATE_STYLES_STROKE_WIDTH = 1;
var RENDER_TYPE_STYLES = (_RENDER_TYPE_STYLES = {}, (0, _defineProperty2["default"])(_RENDER_TYPE_STYLES, _reactMapGlDraw.RenderTypes.POINT, function (state) {
  return {
    fill: STATE_STYLES_FILL[state],
    stroke: state === _reactMapGlDraw.RenderStates.SELECTED ? _constants.COLORS.PRIMARY : DEFAULT_STATE_STYLE_STROKE
  };
}), (0, _defineProperty2["default"])(_RENDER_TYPE_STYLES, _reactMapGlDraw.RenderTypes.LINE_STRING, function () {
  return rectStyle;
}), (0, _defineProperty2["default"])(_RENDER_TYPE_STYLES, _reactMapGlDraw.RenderTypes.RECTANGLE, function () {
  return rectStyle;
}), (0, _defineProperty2["default"])(_RENDER_TYPE_STYLES, _reactMapGlDraw.RenderTypes.POLYGON, function () {
  return rectStyle;
}), _RENDER_TYPE_STYLES);
exports.RENDER_TYPE_STYLES = RENDER_TYPE_STYLES;
var DEFAULT_STATE_STYLE_OPACITY = 0;
exports.DEFAULT_STATE_STYLE_OPACITY = DEFAULT_STATE_STYLE_OPACITY;
var DEFAULT_RADIUS = 5;
exports.DEFAULT_RADIUS = DEFAULT_RADIUS;

function noOp() {}

function getStyle(_ref) {
  var feature = _ref.feature,
      state = _ref.state;
  var isVisible = (0, _lodash["default"])(feature, ['properties', 'isVisible'], true);
  var style = {
    stroke: STATE_STYLES_STROKE[state] || DEFAULT_STATE_STYLE_STROKE,
    strokeWidth: isVisible ? STATE_STYLES_STROKE_WIDTH : 0,
    fill: DEFAULT_STATE_STYLE_FILL,
    fillOpacity: DEFAULT_STATE_STYLE_OPACITY,
    r: DEFAULT_RADIUS
  };
  var renderType = feature.properties ? feature.properties.renderType : feature.renderType;
  return _objectSpread(_objectSpread({}, style), (RENDER_TYPE_STYLES[renderType] || noOp)(state));
}

function getEditHandleShape() {
  return DEFAULT_EDIT_HANDLE_SHAPE;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lZGl0b3IvaGFuZGxlLXN0eWxlLnRzIl0sIm5hbWVzIjpbIkRFRkFVTFRfRURJVF9IQU5ETEVfU0hBUEUiLCJyZWN0U3R5bGUiLCJ4IiwieSIsImhlaWdodCIsIndpZHRoIiwiREVGQVVMVF9TVEFURV9TVFlMRV9TVFJPS0UiLCJDT0xPUlMiLCJQUklNQVJZIiwiU1RBVEVfU1RZTEVTX1NUUk9LRSIsIlJlbmRlclN0YXRlcyIsIlNFTEVDVEVEIiwiSE9WRVJFRCIsIlNFQ09OREFSWSIsIkRFRkFVTFRfU1RBVEVfU1RZTEVfRklMTCIsIlNUQVRFX1NUWUxFU19GSUxMIiwiSU5BQ1RJVkUiLCJVTkNPTU1JVFRFRCIsIlNUQVRFX1NUWUxFU19TVFJPS0VfV0lEVEgiLCJSRU5ERVJfVFlQRV9TVFlMRVMiLCJSZW5kZXJUeXBlcyIsIlBPSU5UIiwic3RhdGUiLCJmaWxsIiwic3Ryb2tlIiwiTElORV9TVFJJTkciLCJSRUNUQU5HTEUiLCJQT0xZR09OIiwiREVGQVVMVF9TVEFURV9TVFlMRV9PUEFDSVRZIiwiREVGQVVMVF9SQURJVVMiLCJub09wIiwiZ2V0U3R5bGUiLCJmZWF0dXJlIiwiaXNWaXNpYmxlIiwic3R5bGUiLCJzdHJva2VXaWR0aCIsImZpbGxPcGFjaXR5IiwiciIsInJlbmRlclR5cGUiLCJwcm9wZXJ0aWVzIiwiZ2V0RWRpdEhhbmRsZVNoYXBlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBb0JBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLHlCQUF5QixHQUFHLFFBQWxDO0FBRUEsSUFBTUMsU0FBUyxHQUFHO0FBQ2hCQyxFQUFBQSxDQUFDLEVBQUUsQ0FBQyxDQURZO0FBRWhCQyxFQUFBQSxDQUFDLEVBQUUsQ0FBQyxDQUZZO0FBR2hCQyxFQUFBQSxNQUFNLEVBQUUsRUFIUTtBQUloQkMsRUFBQUEsS0FBSyxFQUFFO0FBSlMsQ0FBbEI7QUFPTyxJQUFNQywwQkFBMEIsR0FBR0Msa0JBQU9DLE9BQTFDOztBQUVBLElBQU1DLG1CQUFtQixzRkFDN0JDLDZCQUFhQyxRQURnQixFQUNMSixrQkFBT0MsT0FERiwwREFFN0JFLDZCQUFhRSxPQUZnQixFQUVOTCxrQkFBT00sU0FGRCx3QkFBekI7O0FBS0EsSUFBTUMsd0JBQXdCLEdBQUcsU0FBakM7O0FBRUEsSUFBTUMsaUJBQWlCLGtGQUMzQkwsNkJBQWFDLFFBRGMsRUFDSEosa0JBQU9NLFNBREosd0RBRTNCSCw2QkFBYUUsT0FGYyxFQUVKTCxrQkFBT00sU0FGSCx3REFHM0JILDZCQUFhTSxRQUhjLEVBR0hULGtCQUFPQyxPQUhKLHdEQUkzQkUsNkJBQWFPLFdBSmMsRUFJQVYsa0JBQU9DLE9BSlAsc0JBQXZCOztBQU9QLElBQU1VLHlCQUF5QixHQUFHLENBQWxDO0FBRU8sSUFBTUMsa0JBQWtCLG9GQUM1QkMsNEJBQVlDLEtBRGdCLEVBQ1IsVUFBQUMsS0FBSztBQUFBLFNBQUs7QUFDN0JDLElBQUFBLElBQUksRUFBRVIsaUJBQWlCLENBQUNPLEtBQUQsQ0FETTtBQUU3QkUsSUFBQUEsTUFBTSxFQUFFRixLQUFLLEtBQUtaLDZCQUFhQyxRQUF2QixHQUFrQ0osa0JBQU9DLE9BQXpDLEdBQW1ERjtBQUY5QixHQUFMO0FBQUEsQ0FERyx5REFLNUJjLDRCQUFZSyxXQUxnQixFQUtGO0FBQUEsU0FBTXhCLFNBQU47QUFBQSxDQUxFLHlEQU01Qm1CLDRCQUFZTSxTQU5nQixFQU1KO0FBQUEsU0FBTXpCLFNBQU47QUFBQSxDQU5JLHlEQU81Qm1CLDRCQUFZTyxPQVBnQixFQU9OO0FBQUEsU0FBTTFCLFNBQU47QUFBQSxDQVBNLHVCQUF4Qjs7QUFVQSxJQUFNMkIsMkJBQTJCLEdBQUcsQ0FBcEM7O0FBRUEsSUFBTUMsY0FBYyxHQUFHLENBQXZCOzs7QUFFUCxTQUFTQyxJQUFULEdBQWdCLENBQUU7O0FBRVgsU0FBU0MsUUFBVCxPQUFvQztBQUFBLE1BQWpCQyxPQUFpQixRQUFqQkEsT0FBaUI7QUFBQSxNQUFSVixLQUFRLFFBQVJBLEtBQVE7QUFDekMsTUFBTVcsU0FBUyxHQUFHLHdCQUFJRCxPQUFKLEVBQWEsQ0FBQyxZQUFELEVBQWUsV0FBZixDQUFiLEVBQTBDLElBQTFDLENBQWxCO0FBRUEsTUFBTUUsS0FBSyxHQUFHO0FBQ1pWLElBQUFBLE1BQU0sRUFBRWYsbUJBQW1CLENBQUNhLEtBQUQsQ0FBbkIsSUFBOEJoQiwwQkFEMUI7QUFFWjZCLElBQUFBLFdBQVcsRUFBRUYsU0FBUyxHQUFHZix5QkFBSCxHQUErQixDQUZ6QztBQUdaSyxJQUFBQSxJQUFJLEVBQUVULHdCQUhNO0FBSVpzQixJQUFBQSxXQUFXLEVBQUVSLDJCQUpEO0FBS1pTLElBQUFBLENBQUMsRUFBRVI7QUFMUyxHQUFkO0FBUUEsTUFBTVMsVUFBVSxHQUFHTixPQUFPLENBQUNPLFVBQVIsR0FBcUJQLE9BQU8sQ0FBQ08sVUFBUixDQUFtQkQsVUFBeEMsR0FBcUROLE9BQU8sQ0FBQ00sVUFBaEY7QUFFQSx5Q0FDS0osS0FETCxHQUVLLENBQUNmLGtCQUFrQixDQUFDbUIsVUFBRCxDQUFsQixJQUFrQ1IsSUFBbkMsRUFBeUNSLEtBQXpDLENBRkw7QUFJRDs7QUFFTSxTQUFTa0Isa0JBQVQsR0FBOEI7QUFDbkMsU0FBT3hDLHlCQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMjIgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQge1JlbmRlclN0YXRlcywgUmVuZGVyVHlwZXN9IGZyb20gJ3JlYWN0LW1hcC1nbC1kcmF3JztcbmltcG9ydCB7Q09MT1JTfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgZ2V0IGZyb20gJ2xvZGFzaC5nZXQnO1xuXG5jb25zdCBERUZBVUxUX0VESVRfSEFORExFX1NIQVBFID0gJ2NpcmNsZSc7XG5cbmNvbnN0IHJlY3RTdHlsZSA9IHtcbiAgeDogLTYsXG4gIHk6IC02LFxuICBoZWlnaHQ6IDEyLFxuICB3aWR0aDogMTJcbn07XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1NUQVRFX1NUWUxFX1NUUk9LRSA9IENPTE9SUy5QUklNQVJZO1xuXG5leHBvcnQgY29uc3QgU1RBVEVfU1RZTEVTX1NUUk9LRSA9IHtcbiAgW1JlbmRlclN0YXRlcy5TRUxFQ1RFRF06IENPTE9SUy5QUklNQVJZLFxuICBbUmVuZGVyU3RhdGVzLkhPVkVSRURdOiBDT0xPUlMuU0VDT05EQVJZXG59O1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9TVEFURV9TVFlMRV9GSUxMID0gJyNmZmZmZmYnO1xuXG5leHBvcnQgY29uc3QgU1RBVEVfU1RZTEVTX0ZJTEwgPSB7XG4gIFtSZW5kZXJTdGF0ZXMuU0VMRUNURURdOiBDT0xPUlMuU0VDT05EQVJZLFxuICBbUmVuZGVyU3RhdGVzLkhPVkVSRURdOiBDT0xPUlMuU0VDT05EQVJZLFxuICBbUmVuZGVyU3RhdGVzLklOQUNUSVZFXTogQ09MT1JTLlBSSU1BUlksXG4gIFtSZW5kZXJTdGF0ZXMuVU5DT01NSVRURURdOiBDT0xPUlMuUFJJTUFSWVxufTtcblxuY29uc3QgU1RBVEVfU1RZTEVTX1NUUk9LRV9XSURUSCA9IDE7XG5cbmV4cG9ydCBjb25zdCBSRU5ERVJfVFlQRV9TVFlMRVMgPSB7XG4gIFtSZW5kZXJUeXBlcy5QT0lOVF06IHN0YXRlID0+ICh7XG4gICAgZmlsbDogU1RBVEVfU1RZTEVTX0ZJTExbc3RhdGVdLFxuICAgIHN0cm9rZTogc3RhdGUgPT09IFJlbmRlclN0YXRlcy5TRUxFQ1RFRCA/IENPTE9SUy5QUklNQVJZIDogREVGQVVMVF9TVEFURV9TVFlMRV9TVFJPS0VcbiAgfSksXG4gIFtSZW5kZXJUeXBlcy5MSU5FX1NUUklOR106ICgpID0+IHJlY3RTdHlsZSxcbiAgW1JlbmRlclR5cGVzLlJFQ1RBTkdMRV06ICgpID0+IHJlY3RTdHlsZSxcbiAgW1JlbmRlclR5cGVzLlBPTFlHT05dOiAoKSA9PiByZWN0U3R5bGVcbn07XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1NUQVRFX1NUWUxFX09QQUNJVFkgPSAwO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9SQURJVVMgPSA1O1xuXG5mdW5jdGlvbiBub09wKCkge31cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0eWxlKHtmZWF0dXJlLCBzdGF0ZX0pIHtcbiAgY29uc3QgaXNWaXNpYmxlID0gZ2V0KGZlYXR1cmUsIFsncHJvcGVydGllcycsICdpc1Zpc2libGUnXSwgdHJ1ZSk7XG5cbiAgY29uc3Qgc3R5bGUgPSB7XG4gICAgc3Ryb2tlOiBTVEFURV9TVFlMRVNfU1RST0tFW3N0YXRlXSB8fCBERUZBVUxUX1NUQVRFX1NUWUxFX1NUUk9LRSxcbiAgICBzdHJva2VXaWR0aDogaXNWaXNpYmxlID8gU1RBVEVfU1RZTEVTX1NUUk9LRV9XSURUSCA6IDAsXG4gICAgZmlsbDogREVGQVVMVF9TVEFURV9TVFlMRV9GSUxMLFxuICAgIGZpbGxPcGFjaXR5OiBERUZBVUxUX1NUQVRFX1NUWUxFX09QQUNJVFksXG4gICAgcjogREVGQVVMVF9SQURJVVNcbiAgfTtcblxuICBjb25zdCByZW5kZXJUeXBlID0gZmVhdHVyZS5wcm9wZXJ0aWVzID8gZmVhdHVyZS5wcm9wZXJ0aWVzLnJlbmRlclR5cGUgOiBmZWF0dXJlLnJlbmRlclR5cGU7XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5zdHlsZSxcbiAgICAuLi4oUkVOREVSX1RZUEVfU1RZTEVTW3JlbmRlclR5cGVdIHx8IG5vT3ApKHN0YXRlKVxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RWRpdEhhbmRsZVNoYXBlKCkge1xuICByZXR1cm4gREVGQVVMVF9FRElUX0hBTkRMRV9TSEFQRTtcbn1cbiJdfQ==