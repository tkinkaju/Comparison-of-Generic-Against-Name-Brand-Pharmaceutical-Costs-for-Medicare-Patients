import React from 'react';
import MapboxGLMap, { MapRef } from 'react-map-gl';
import { VisStateActions, MapStateActions, UIStateActions } from '@kepler.gl/actions';
import MapPopoverFactory from './map/map-popover';
import MapControlFactory from './map/map-control';
import EditorFactory from './editor/editor';
import { MapState, MapControls, Viewport } from '@kepler.gl/types';
import { MapStyle } from '@kepler.gl/reducers';
import { VisState } from '@kepler.gl/schemas';
export declare const Attribution: ({ showMapboxLogo }: {
    showMapboxLogo?: boolean | undefined;
}) => JSX.Element;
declare type MapboxStyle = string | object | undefined;
interface MapContainerProps {
    visState: VisState;
    mapState: MapState;
    mapControls: MapControls;
    mapStyle: {
        bottomMapStyle?: MapboxStyle;
        topMapStyle?: MapboxStyle;
    } & MapStyle;
    mapboxApiAccessToken: string;
    mapboxApiUrl: string;
    visStateActions: typeof VisStateActions;
    mapStateActions: typeof MapStateActions;
    uiStateActions: typeof UIStateActions;
    primary?: boolean;
    readOnly?: boolean;
    isExport?: boolean;
    onMapToggleLayer?: Function;
    onMapStyleLoaded?: Function;
    onMapRender?: Function;
    getMapboxRef?: (mapbox?: MapRef | null, index?: number) => void;
    index?: number;
    locale?: any;
    editor?: any;
    MapComponent?: typeof MapboxGLMap;
    deckGlProps?: any;
    onDeckInitialized?: (a: any, b: any) => void;
    onViewStateChange?: (viewport: Viewport) => void;
    topMapContainerProps: any;
    bottomMapContainerProps: any;
}
declare function MapContainerFactory(MapPopover: any, MapControl: any, Editor: any): React.ComponentType<MapContainerProps>;
declare namespace MapContainerFactory {
    var deps: (typeof MapPopoverFactory | typeof MapControlFactory | typeof EditorFactory)[];
}
export default MapContainerFactory;
