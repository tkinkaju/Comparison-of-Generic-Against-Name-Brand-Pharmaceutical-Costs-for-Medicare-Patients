import React from 'react';
import NewFilterPanelFactory from '../../filters/filter-panels/new-filter-panel';
import TimeRangeFilterPanelFactory from '../../filters/filter-panels/time-range-filter-panel';
import SingleSelectFilterPanelFactory from '../../filters/filter-panels/single-select-filter-panel';
import MultiSelectFilterPanelFactory from '../../filters/filter-panels/multi-select-filter-panel';
import RangeFilterPanelFactory from '../../filters/filter-panels/range-filter-panel';
import PolygonFilterPanelFactory from '../../filters/filter-panels/polygon-filter-panel';
import { Filter } from '@kepler.gl/types';
import { FilterPanelProps } from '../../filters/filter-panels/types';
import { Layer } from '@kepler.gl/layers';
interface FilterPanelPropsImpl extends Omit<FilterPanelProps, 'allAvailableFields'> {
    filters: Filter[];
    layers: ReadonlyArray<Layer>;
    isAnyFilterAnimating: boolean;
    enlargeFilter: () => void;
    toggleAnimation: () => void;
    toggleFilterFeature: () => void;
}
declare function FilterPanelFactory(NewFilterPanel: ReturnType<typeof NewFilterPanelFactory>, TimeRangeFilterPanel: ReturnType<typeof TimeRangeFilterPanelFactory>, SingleSelectFilterPanel: ReturnType<typeof SingleSelectFilterPanelFactory>, MultiSelectFilterPanel: ReturnType<typeof MultiSelectFilterPanelFactory>, RangeFilterPanel: ReturnType<typeof RangeFilterPanelFactory>, PolygonFilterPanel: ReturnType<typeof PolygonFilterPanelFactory>): React.ComponentType<FilterPanelPropsImpl>;
declare namespace FilterPanelFactory {
    var deps: (typeof PolygonFilterPanelFactory | typeof NewFilterPanelFactory | typeof TimeRangeFilterPanelFactory | typeof SingleSelectFilterPanelFactory | typeof MultiSelectFilterPanelFactory | typeof RangeFilterPanelFactory)[];
}
export default FilterPanelFactory;
