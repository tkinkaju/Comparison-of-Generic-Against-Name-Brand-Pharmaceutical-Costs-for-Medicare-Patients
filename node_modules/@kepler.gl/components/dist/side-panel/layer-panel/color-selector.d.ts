import React, { Component, MouseEvent } from 'react';
import { ColorRange } from '@kepler.gl/constants';
import { NestedPartial, RGBColor, ColorUI } from '@kepler.gl/types';
declare type ColorSelectorInputProps = {
    active: boolean;
    disabled?: boolean;
    inputTheme?: string;
};
declare type ColorSelectorProps = {
    colorSets: {
        selectedColor: RGBColor | ColorRange;
        setColor: ((v: RGBColor) => void) | ((v: ColorRange) => void);
        isRange?: boolean;
        label?: string;
    }[];
    colorUI?: ColorUI;
    inputTheme?: string;
    disabled?: boolean;
    setColorUI?: (newConfig: NestedPartial<ColorUI>) => void;
};
export declare const ColorBlock: import("styled-components").StyledComponent<"div", any, {
    backgroundcolor: RGBColor;
}, never>;
export declare const ColorSelectorInput: import("styled-components").StyledComponent<"div", any, ColorSelectorInputProps, never>;
export declare const InputBoxContainer: import("styled-components").StyledComponent<"div", any, {}, never>;
declare class ColorSelector extends Component<ColorSelectorProps> {
    static defaultProps: {
        colorSets: never[];
    };
    state: {
        showDropdown: boolean;
    };
    node: React.RefObject<HTMLDivElement>;
    handleClickOutside: (e: any) => void;
    _getEditing: () => number | boolean;
    _closePanelDropdown: () => void;
    _onSelectColor: (color: RGBColor | ColorRange, e: MouseEvent) => void;
    _showDropdown: (e: any, i: any) => void;
    render(): JSX.Element;
}
declare const _default: import("react-onclickoutside").WrapperClass<ColorSelectorProps, typeof ColorSelector>;
export default _default;
