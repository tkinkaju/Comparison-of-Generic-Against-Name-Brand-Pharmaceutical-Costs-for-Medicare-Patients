import React from 'react';
import InfoHelperFactory from '../../common/info-helper';
import { Layer } from '@kepler.gl/layers';
import { LayerVisConfig } from '@kepler.gl/types';
declare type LayerConfigGroupLabelProps = {
    label?: string;
    description?: string;
};
declare type LayerConfigGroupProps = {
    layer?: Layer;
    label: string;
    property?: string;
    description?: string;
    collapsible?: boolean;
    expanded?: boolean;
    disabled?: boolean;
    onChange?: (newVisConfig: Partial<LayerVisConfig>) => void;
};
export declare const StyledLayerConfigGroupAction: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ConfigGroupCollapsibleContent: import("styled-components").StyledComponent<"div", any, {
    className: "layer-config-group__content__collapsible";
}, "className">;
export declare const ConfigGroupCollapsibleHeader: import("styled-components").StyledComponent<"div", any, {
    className: "layer-config-group__header__collapsible";
}, "className">;
export declare const StyledLayerConfigGroup: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare function LayerConfigGroupLabelFactory(InfoHelper: ReturnType<typeof InfoHelperFactory>): React.FC<LayerConfigGroupLabelProps>;
export declare namespace LayerConfigGroupLabelFactory {
    var deps: (typeof InfoHelperFactory)[];
}
declare function LayerConfigGroupFactory(LayerConfigGroupLabel: ReturnType<typeof LayerConfigGroupLabelFactory>): React.FC<LayerConfigGroupProps>;
declare namespace LayerConfigGroupFactory {
    var deps: (typeof LayerConfigGroupLabelFactory)[];
}
export default LayerConfigGroupFactory;
