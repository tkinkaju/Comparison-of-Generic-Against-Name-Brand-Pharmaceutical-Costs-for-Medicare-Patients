// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = DatasetTagFactory;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _localization = require("@kepler.gl/localization");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ = require("../..");

var _templateObject, _templateObject2;

var DatasetTagWrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  color: ", ";\n  font-size: 11px;\n  letter-spacing: 0.2px;\n  overflow: auto;\n\n  .dataset-color {\n    flex-shrink: 0;\n    margin-top: 3px;\n  }\n\n  .dataset-name {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n"])), function (props) {
  return props.theme.textColor;
});

var DatasetColorPicker = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n"])));

var UpdateTableColor = function UpdateTableColor(_ref) {
  var children = _ref.children,
      id = _ref.id;
  return /*#__PURE__*/_react["default"].createElement(DatasetColorPicker, {
    className: "dataset-action update-color",
    "data-tip": true,
    "data-for": "update-color-".concat(id)
  }, children);
};

function DatasetTagFactory() {
  var DatasetTag = function DatasetTag(_ref2) {
    var onClick = _ref2.onClick,
        onClickSquare = _ref2.onClickSquare,
        dataset = _ref2.dataset,
        updateTableColor = _ref2.updateTableColor,
        id = _ref2.id;
    return /*#__PURE__*/_react["default"].createElement(DatasetTagWrapper, {
      className: "source-data-tag"
    }, /*#__PURE__*/_react["default"].createElement(UpdateTableColor, {
      id: dataset.id
    }, /*#__PURE__*/_react["default"].createElement(_.DatasetSquare, {
      className: "dataset-color",
      backgroundColor: dataset.color,
      onClick: onClickSquare,
      "data-tip": true,
      "data-for": "update-color-".concat(id)
    }), updateTableColor ? /*#__PURE__*/_react["default"].createElement(_.Tooltip, {
      id: "update-color-".concat(id),
      effect: "solid"
    }, /*#__PURE__*/_react["default"].createElement("span", null, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'Update color'
    }))) : null), /*#__PURE__*/_react["default"].createElement("div", {
      className: "dataset-name",
      title: dataset.label,
      onClick: onClick
    }, dataset.label));
  };

  return DatasetTag;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaWRlLXBhbmVsL2NvbW1vbi9kYXRhc2V0LXRhZy50c3giXSwibmFtZXMiOlsiRGF0YXNldFRhZ1dyYXBwZXIiLCJzdHlsZWQiLCJkaXYiLCJwcm9wcyIsInRoZW1lIiwidGV4dENvbG9yIiwiRGF0YXNldENvbG9yUGlja2VyIiwiVXBkYXRlVGFibGVDb2xvciIsImNoaWxkcmVuIiwiaWQiLCJEYXRhc2V0VGFnRmFjdG9yeSIsIkRhdGFzZXRUYWciLCJvbkNsaWNrIiwib25DbGlja1NxdWFyZSIsImRhdGFzZXQiLCJ1cGRhdGVUYWJsZUNvbG9yIiwiY29sb3IiLCJsYWJlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFvQkE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFHQSxJQUFNQSxpQkFBaUIsR0FBR0MsNkJBQU9DLEdBQVYsMldBRVosVUFBQUMsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZQyxTQUFoQjtBQUFBLENBRk8sQ0FBdkI7O0FBbUJBLElBQU1DLGtCQUFrQixHQUFHTCw2QkFBT0MsR0FBViw0R0FBeEI7O0FBSUEsSUFBTUssZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQjtBQUFBLE1BQUVDLFFBQUYsUUFBRUEsUUFBRjtBQUFBLE1BQVlDLEVBQVosUUFBWUEsRUFBWjtBQUFBLHNCQUN2QixnQ0FBQyxrQkFBRDtBQUNFLElBQUEsU0FBUyxFQUFDLDZCQURaO0FBRUUsb0JBRkY7QUFHRSx1Q0FBMEJBLEVBQTFCO0FBSEYsS0FLR0QsUUFMSCxDQUR1QjtBQUFBLENBQXpCOztBQVVlLFNBQVNFLGlCQUFULEdBQXdEO0FBQ3JFLE1BQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFhO0FBQUEsUUFBRUMsT0FBRixTQUFFQSxPQUFGO0FBQUEsUUFBV0MsYUFBWCxTQUFXQSxhQUFYO0FBQUEsUUFBMEJDLE9BQTFCLFNBQTBCQSxPQUExQjtBQUFBLFFBQW1DQyxnQkFBbkMsU0FBbUNBLGdCQUFuQztBQUFBLFFBQXFETixFQUFyRCxTQUFxREEsRUFBckQ7QUFBQSx3QkFDakIsZ0NBQUMsaUJBQUQ7QUFBbUIsTUFBQSxTQUFTLEVBQUM7QUFBN0Isb0JBQ0UsZ0NBQUMsZ0JBQUQ7QUFBa0IsTUFBQSxFQUFFLEVBQUVLLE9BQU8sQ0FBQ0w7QUFBOUIsb0JBQ0UsZ0NBQUMsZUFBRDtBQUNFLE1BQUEsU0FBUyxFQUFDLGVBRFo7QUFFRSxNQUFBLGVBQWUsRUFBRUssT0FBTyxDQUFDRSxLQUYzQjtBQUdFLE1BQUEsT0FBTyxFQUFFSCxhQUhYO0FBSUUsc0JBSkY7QUFLRSx5Q0FBMEJKLEVBQTFCO0FBTEYsTUFERixFQVFHTSxnQkFBZ0IsZ0JBQ2YsZ0NBQUMsU0FBRDtBQUFTLE1BQUEsRUFBRSx5QkFBa0JOLEVBQWxCLENBQVg7QUFBbUMsTUFBQSxNQUFNLEVBQUM7QUFBMUMsb0JBQ0UsMkRBQ0UsZ0NBQUMsOEJBQUQ7QUFBa0IsTUFBQSxFQUFFLEVBQUU7QUFBdEIsTUFERixDQURGLENBRGUsR0FNYixJQWROLENBREYsZUFpQkU7QUFBSyxNQUFBLFNBQVMsRUFBQyxjQUFmO0FBQThCLE1BQUEsS0FBSyxFQUFFSyxPQUFPLENBQUNHLEtBQTdDO0FBQW9ELE1BQUEsT0FBTyxFQUFFTDtBQUE3RCxPQUNHRSxPQUFPLENBQUNHLEtBRFgsQ0FqQkYsQ0FEaUI7QUFBQSxHQUFuQjs7QUF3QkEsU0FBT04sVUFBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIyIFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Rm9ybWF0dGVkTWVzc2FnZX0gZnJvbSAnQGtlcGxlci5nbC9sb2NhbGl6YXRpb24nO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQge0RhdGFzZXRTcXVhcmUsIFRvb2x0aXB9IGZyb20gJy4uLy4uJztcbmltcG9ydCB7RGF0YXNldFRhZ1Byb3BzLCBVcGRhdGVUYWJsZUNvbG9yVHlwZXN9IGZyb20gJy4vdHlwZXMnO1xuXG5jb25zdCBEYXRhc2V0VGFnV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnRleHRDb2xvcn07XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMnB4O1xuICBvdmVyZmxvdzogYXV0bztcblxuICAuZGF0YXNldC1jb2xvciB7XG4gICAgZmxleC1zaHJpbms6IDA7XG4gICAgbWFyZ2luLXRvcDogM3B4O1xuICB9XG5cbiAgLmRhdGFzZXQtbmFtZSB7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB9XG5gO1xuXG5jb25zdCBEYXRhc2V0Q29sb3JQaWNrZXIgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuYDtcblxuY29uc3QgVXBkYXRlVGFibGVDb2xvciA9ICh7Y2hpbGRyZW4sIGlkfTogVXBkYXRlVGFibGVDb2xvclR5cGVzKSA9PiAoXG4gIDxEYXRhc2V0Q29sb3JQaWNrZXJcbiAgICBjbGFzc05hbWU9XCJkYXRhc2V0LWFjdGlvbiB1cGRhdGUtY29sb3JcIlxuICAgIGRhdGEtdGlwXG4gICAgZGF0YS1mb3I9e2B1cGRhdGUtY29sb3ItJHtpZH1gfVxuICA+XG4gICAge2NoaWxkcmVufVxuICA8L0RhdGFzZXRDb2xvclBpY2tlcj5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERhdGFzZXRUYWdGYWN0b3J5KCk6IFJlYWN0LkZDPERhdGFzZXRUYWdQcm9wcz4ge1xuICBjb25zdCBEYXRhc2V0VGFnID0gKHtvbkNsaWNrLCBvbkNsaWNrU3F1YXJlLCBkYXRhc2V0LCB1cGRhdGVUYWJsZUNvbG9yLCBpZH06IERhdGFzZXRUYWdQcm9wcykgPT4gKFxuICAgIDxEYXRhc2V0VGFnV3JhcHBlciBjbGFzc05hbWU9XCJzb3VyY2UtZGF0YS10YWdcIj5cbiAgICAgIDxVcGRhdGVUYWJsZUNvbG9yIGlkPXtkYXRhc2V0LmlkfT5cbiAgICAgICAgPERhdGFzZXRTcXVhcmVcbiAgICAgICAgICBjbGFzc05hbWU9XCJkYXRhc2V0LWNvbG9yXCJcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I9e2RhdGFzZXQuY29sb3J9XG4gICAgICAgICAgb25DbGljaz17b25DbGlja1NxdWFyZX1cbiAgICAgICAgICBkYXRhLXRpcFxuICAgICAgICAgIGRhdGEtZm9yPXtgdXBkYXRlLWNvbG9yLSR7aWR9YH1cbiAgICAgICAgLz5cbiAgICAgICAge3VwZGF0ZVRhYmxlQ29sb3IgPyAoXG4gICAgICAgICAgPFRvb2x0aXAgaWQ9e2B1cGRhdGUtY29sb3ItJHtpZH1gfSBlZmZlY3Q9XCJzb2xpZFwiPlxuICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgIDxGb3JtYXR0ZWRNZXNzYWdlIGlkPXsnVXBkYXRlIGNvbG9yJ30gLz5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICAgICkgOiBudWxsfVxuICAgICAgPC9VcGRhdGVUYWJsZUNvbG9yPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJkYXRhc2V0LW5hbWVcIiB0aXRsZT17ZGF0YXNldC5sYWJlbH0gb25DbGljaz17b25DbGlja30+XG4gICAgICAgIHtkYXRhc2V0LmxhYmVsfVxuICAgICAgPC9kaXY+XG4gICAgPC9EYXRhc2V0VGFnV3JhcHBlcj5cbiAgKTtcblxuICByZXR1cm4gRGF0YXNldFRhZztcbn1cbiJdfQ==