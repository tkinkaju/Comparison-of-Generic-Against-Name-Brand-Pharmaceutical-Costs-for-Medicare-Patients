import React from 'react';
import { IntlShape } from 'react-intl';
import { Viewport } from '@kepler.gl/types';
export declare const testForCoordinates: (query: string) => [true, number, number] | [false, string];
export interface Result {
    center: [number, number];
    place_name: string;
    bbox?: [number, number, number, number];
    text?: string;
}
export declare type Results = ReadonlyArray<Result>;
declare type GeocoderProps = {
    mapboxApiAccessToken: string;
    className?: string;
    limit?: number;
    timeout?: number;
    formatItem?: (item: Result) => string;
    viewport?: Viewport;
    onSelected: (viewport: Viewport | null, item: Result) => void;
    onDeleteMarker?: () => void;
    transitionDuration?: number;
    pointZoom?: number;
    width?: number;
};
declare type IntlProps = {
    intl: IntlShape;
};
declare const _default: React.ForwardRefExoticComponent<import("react-intl").Omit<GeocoderProps & IntlProps, "intl"> & {
    forwardedRef?: React.Ref<any> | undefined;
} & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<GeocoderProps & IntlProps>;
};
export default _default;
