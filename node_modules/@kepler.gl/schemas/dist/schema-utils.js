// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.savePropertiesOrApplySchema = savePropertiesOrApplySchema;
exports.loadPropertiesOrApplySchema = loadPropertiesOrApplySchema;
exports.getPropertyValueFromSchema = getPropertyValueFromSchema;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }/**
 * Recursively save / load value for state based on property keys,
 * if property[key] is another schema
 * Use is to get value to save
 * @param {Object} state - state to save
 * @param {Object} properties - properties schema
 * @returns {Object} - saved state
 */
function savePropertiesOrApplySchema(state, properties) {
  return getPropertyValueFromSchema('save', state, properties);
}

function loadPropertiesOrApplySchema(state, properties) {
  return getPropertyValueFromSchema('load', state, properties);
}

function getPropertyValueFromSchema(operation, state, properties) {
  return Object.keys(properties).reduce(function (accu, key) {
    return _objectSpread(_objectSpread({}, accu), key in state ? properties[key] ? // if it's another schema
    properties[key][operation] ? // call save or load
    properties[key][operation](state[key], state) : // if it's another property object
    getPropertyValueFromSchema(operation, state[key], properties[key]) : (0, _defineProperty2["default"])({}, key, state[key]) : {});
  }, {});
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zY2hlbWEtdXRpbHMudHMiXSwibmFtZXMiOlsic2F2ZVByb3BlcnRpZXNPckFwcGx5U2NoZW1hIiwic3RhdGUiLCJwcm9wZXJ0aWVzIiwiZ2V0UHJvcGVydHlWYWx1ZUZyb21TY2hlbWEiLCJsb2FkUHJvcGVydGllc09yQXBwbHlTY2hlbWEiLCJvcGVyYXRpb24iLCJPYmplY3QiLCJrZXlzIiwicmVkdWNlIiwiYWNjdSIsImtleSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sU0FBU0EsMkJBQVQsQ0FBcUNDLEtBQXJDLEVBQTRDQyxVQUE1QyxFQUF3RDtBQUM3RCxTQUFPQywwQkFBMEIsQ0FBQyxNQUFELEVBQVNGLEtBQVQsRUFBZ0JDLFVBQWhCLENBQWpDO0FBQ0Q7O0FBRU0sU0FBU0UsMkJBQVQsQ0FBcUNILEtBQXJDLEVBQTRDQyxVQUE1QyxFQUF3RDtBQUM3RCxTQUFPQywwQkFBMEIsQ0FBQyxNQUFELEVBQVNGLEtBQVQsRUFBZ0JDLFVBQWhCLENBQWpDO0FBQ0Q7O0FBRU0sU0FBU0MsMEJBQVQsQ0FBb0NFLFNBQXBDLEVBQStDSixLQUEvQyxFQUFzREMsVUFBdEQsRUFBa0U7QUFDdkUsU0FBT0ksTUFBTSxDQUFDQyxJQUFQLENBQVlMLFVBQVosRUFBd0JNLE1BQXhCLENBQ0wsVUFBQ0MsSUFBRCxFQUFPQyxHQUFQO0FBQUEsMkNBQ0tELElBREwsR0FFTUMsR0FBRyxJQUFJVCxLQUFQLEdBQ0FDLFVBQVUsQ0FBQ1EsR0FBRCxDQUFWLEdBQ0U7QUFDQVIsSUFBQUEsVUFBVSxDQUFDUSxHQUFELENBQVYsQ0FBZ0JMLFNBQWhCLElBQ0U7QUFDQUgsSUFBQUEsVUFBVSxDQUFDUSxHQUFELENBQVYsQ0FBZ0JMLFNBQWhCLEVBQTJCSixLQUFLLENBQUNTLEdBQUQsQ0FBaEMsRUFBdUNULEtBQXZDLENBRkYsR0FHRTtBQUNBRSxJQUFBQSwwQkFBMEIsQ0FBQ0UsU0FBRCxFQUFZSixLQUFLLENBQUNTLEdBQUQsQ0FBakIsRUFBd0JSLFVBQVUsQ0FBQ1EsR0FBRCxDQUFsQyxDQU45Qix3Q0FPSUEsR0FQSixFQU9VVCxLQUFLLENBQUNTLEdBQUQsQ0FQZixDQURBLEdBU0EsRUFYTjtBQUFBLEdBREssRUFjTCxFQWRLLENBQVA7QUFnQkQiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMjIgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG4vKipcbiAqIFJlY3Vyc2l2ZWx5IHNhdmUgLyBsb2FkIHZhbHVlIGZvciBzdGF0ZSBiYXNlZCBvbiBwcm9wZXJ0eSBrZXlzLFxuICogaWYgcHJvcGVydHlba2V5XSBpcyBhbm90aGVyIHNjaGVtYVxuICogVXNlIGlzIHRvIGdldCB2YWx1ZSB0byBzYXZlXG4gKiBAcGFyYW0ge09iamVjdH0gc3RhdGUgLSBzdGF0ZSB0byBzYXZlXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvcGVydGllcyAtIHByb3BlcnRpZXMgc2NoZW1hXG4gKiBAcmV0dXJucyB7T2JqZWN0fSAtIHNhdmVkIHN0YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYXZlUHJvcGVydGllc09yQXBwbHlTY2hlbWEoc3RhdGUsIHByb3BlcnRpZXMpIHtcbiAgcmV0dXJuIGdldFByb3BlcnR5VmFsdWVGcm9tU2NoZW1hKCdzYXZlJywgc3RhdGUsIHByb3BlcnRpZXMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbG9hZFByb3BlcnRpZXNPckFwcGx5U2NoZW1hKHN0YXRlLCBwcm9wZXJ0aWVzKSB7XG4gIHJldHVybiBnZXRQcm9wZXJ0eVZhbHVlRnJvbVNjaGVtYSgnbG9hZCcsIHN0YXRlLCBwcm9wZXJ0aWVzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFByb3BlcnR5VmFsdWVGcm9tU2NoZW1hKG9wZXJhdGlvbiwgc3RhdGUsIHByb3BlcnRpZXMpIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKHByb3BlcnRpZXMpLnJlZHVjZShcbiAgICAoYWNjdSwga2V5KSA9PiAoe1xuICAgICAgLi4uYWNjdSxcbiAgICAgIC4uLihrZXkgaW4gc3RhdGVcbiAgICAgICAgPyBwcm9wZXJ0aWVzW2tleV1cbiAgICAgICAgICA/IC8vIGlmIGl0J3MgYW5vdGhlciBzY2hlbWFcbiAgICAgICAgICAgIHByb3BlcnRpZXNba2V5XVtvcGVyYXRpb25dXG4gICAgICAgICAgICA/IC8vIGNhbGwgc2F2ZSBvciBsb2FkXG4gICAgICAgICAgICAgIHByb3BlcnRpZXNba2V5XVtvcGVyYXRpb25dKHN0YXRlW2tleV0sIHN0YXRlKVxuICAgICAgICAgICAgOiAvLyBpZiBpdCdzIGFub3RoZXIgcHJvcGVydHkgb2JqZWN0XG4gICAgICAgICAgICAgIGdldFByb3BlcnR5VmFsdWVGcm9tU2NoZW1hKG9wZXJhdGlvbiwgc3RhdGVba2V5XSwgcHJvcGVydGllc1trZXldKVxuICAgICAgICAgIDoge1trZXldOiBzdGF0ZVtrZXldfVxuICAgICAgICA6IHt9KVxuICAgIH0pLFxuICAgIHt9XG4gICk7XG59XG4iXX0=