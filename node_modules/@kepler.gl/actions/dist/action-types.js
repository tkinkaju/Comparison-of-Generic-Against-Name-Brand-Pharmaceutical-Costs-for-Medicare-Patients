// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ACTION_PREFIX = void 0;var ACTION_PREFIX = '@@kepler.gl/';
/**
 * Kepler.gl action types, can be listened by reducers to perform additional tasks whenever an action is called in kepler.gl
 * @constant
 * @type {Object}
 * @public
 *
 * @example
 * // store.js
 * import {handleActions} from 'redux-actions';
 * import {createStore, combineReducers, applyMiddleware} from 'redux';
 * import {taskMiddleware} from 'react-palm/tasks';
 *
 * import keplerGlReducer from 'kepler.gl/reducers';
 * import {ActionTypes} from 'kepler.gl/actions';
 *
 * const appReducer = handleActions({
 *   // listen on kepler.gl map update action to store a copy of viewport in app state
 *   [ActionTypes.UPDATE_MAP]: (state, action) => ({
 *     ...state,
 *     viewport: action.payload
 *   }),
 * }, {});
 *
 * const reducers = combineReducers({
 *   app: appReducer,
 *   keplerGl: keplerGlReducer
 * });
 *
 * export default createStore(reducers, {}, applyMiddleware(taskMiddleware))
 */

exports.ACTION_PREFIX = ACTION_PREFIX;
var ActionTypes = {
  // identity action
  REGISTER_ENTRY: "".concat(ACTION_PREFIX, "REGISTER_ENTRY"),
  DELETE_ENTRY: "".concat(ACTION_PREFIX, "DELETE_ENTRY"),
  RENAME_ENTRY: "".concat(ACTION_PREFIX, "RENAME_ENTRY"),
  // visState
  ADD_DATA: "".concat(ACTION_PREFIX, "ADD_DATA"),
  ADD_FILTER: "".concat(ACTION_PREFIX, "ADD_FILTER"),
  ADD_LAYER: "".concat(ACTION_PREFIX, "ADD_LAYER"),
  DUPLICATE_LAYER: "".concat(ACTION_PREFIX, "DUPLICATE_LAYER"),
  INTERACTION_CONFIG_CHANGE: "".concat(ACTION_PREFIX, "INTERACTION_CONFIG_CHANGE"),
  LAYER_CONFIG_CHANGE: "".concat(ACTION_PREFIX, "LAYER_CONFIG_CHANGE"),
  LAYER_VISUAL_CHANNEL_CHANGE: "".concat(ACTION_PREFIX, "LAYER_VISUAL_CHANNEL_CHANGE"),
  LAYER_TYPE_CHANGE: "".concat(ACTION_PREFIX, "LAYER_TYPE_CHANGE"),
  LAYER_VIS_CONFIG_CHANGE: "".concat(ACTION_PREFIX, "LAYER_VIS_CONFIG_CHANGE"),
  LAYER_TEXT_LABEL_CHANGE: "".concat(ACTION_PREFIX, "LAYER_TEXT_LABEL_CHANGE"),
  LAYER_HOVER: "".concat(ACTION_PREFIX, "LAYER_HOVER"),
  LAYER_CLICK: "".concat(ACTION_PREFIX, "LAYER_CLICK"),
  MAP_CLICK: "".concat(ACTION_PREFIX, "MAP_CLICK"),
  MOUSE_MOVE: "".concat(ACTION_PREFIX, "MOUSE_MOVE"),
  REMOVE_FILTER: "".concat(ACTION_PREFIX, "REMOVE_FILTER"),
  REMOVE_LAYER: "".concat(ACTION_PREFIX, "REMOVE_LAYER"),
  REMOVE_DATASET: "".concat(ACTION_PREFIX, "REMOVE_DATASET"),
  REORDER_LAYER: "".concat(ACTION_PREFIX, "REORDER_LAYER"),
  SET_FILTER: "".concat(ACTION_PREFIX, "SET_FILTER"),
  SET_FILTER_ANIMATION_TIME: "".concat(ACTION_PREFIX, "SET_FILTER_ANIMATION_TIME"),
  SET_FILTER_ANIMATION_TIME_CONFIG: "".concat(ACTION_PREFIX, "SET_FILTER_ANIMATION_TIME_CONFIG"),
  SET_FILTER_ANIMATION_WINDOW: "".concat(ACTION_PREFIX, "SET_FILTER_ANIMATION_WINDOW"),
  SHOW_DATASET_TABLE: "".concat(ACTION_PREFIX, "SHOW_DATASET_TABLE"),
  UPDATE_LAYER_BLENDING: "".concat(ACTION_PREFIX, "UPDATE_LAYER_BLENDING"),
  UPDATE_VIS_DATA: "".concat(ACTION_PREFIX, "UPDATE_VIS_DATA"),
  RENAME_DATASET: "".concat(ACTION_PREFIX, "RENAME_DATASET"),
  TOGGLE_FILTER_ANIMATION: "".concat(ACTION_PREFIX, "TOGGLE_FILTER_ANIMATION"),
  UPDATE_FILTER_ANIMATION_SPEED: "".concat(ACTION_PREFIX, "UPDATE_FILTER_ANIMATION_SPEED"),
  PLAY_ANIMATION: "".concat(ACTION_PREFIX, "PLAY_ANIMATION"),
  SET_LAYER_ANIMATION_TIME: "".concat(ACTION_PREFIX, "SET_LAYER_ANIMATION_TIME"),
  SET_LAYER_ANIMATION_TIME_CONFIG: "".concat(ACTION_PREFIX, "SET_LAYER_ANIMATION_TIME_CONFIG"),
  UPDATE_ANIMATION_SPEED: "".concat(ACTION_PREFIX, "UPDATE_ANIMATION_SPEED"),
  UPDATE_LAYER_ANIMATION_SPEED: "".concat(ACTION_PREFIX, "UPDATE_LAYER_ANIMATION_SPEED"),
  TOGGLE_LAYER_ANIMATION: "".concat(ACTION_PREFIX, "TOGGLE_LAYER_ANIMATION"),
  TOGGLE_LAYER_ANIMATION_CONTROL: "".concat(ACTION_PREFIX, "TOGGLE_LAYER_ANIMATION_CONTROL"),
  TOGGLE_LAYER_CONFIG_ACTIVE: "".concat(ACTION_PREFIX, "TOGGLE_LAYER_CONFIG_ACTIVE"),
  ENLARGE_FILTER: "".concat(ACTION_PREFIX, "ENLARGE_FILTER"),
  TOGGLE_FILTER_FEATURE: "".concat(ACTION_PREFIX, "TOGGLE_FILTER_FEATURE"),
  TOGGLE_LAYER_FOR_MAP: "".concat(ACTION_PREFIX, "TOGGLE_LAYER_FOR_MAP"),
  SET_FILTER_PLOT: "".concat(ACTION_PREFIX, "SET_FILTER_PLOT"),
  LOAD_FILES: "".concat(ACTION_PREFIX, "LOAD_FILES"),
  LOAD_NEXT_FILE: "".concat(ACTION_PREFIX, "LOAD_NEXT_FILE"),
  LOAD_FILE_STEP_SUCCESS: "".concat(ACTION_PREFIX, "LOAD_FILE_STEP_SUCCESS"),
  LOAD_FILES_ERR: "".concat(ACTION_PREFIX, "LOAD_FILES_ERR"),
  LOAD_FILES_SUCCESS: "".concat(ACTION_PREFIX, "LOAD_FILES_SUCCESS"),
  LAYER_COLOR_UI_CHANGE: "".concat(ACTION_PREFIX, "LAYER_COLOR_UI_CHANGE"),
  TOGGLE_FEATURE_LAYER: "".concat(ACTION_PREFIX, "TOGGLE_FEATURE_LAYER"),
  APPLY_CPU_FILTER: "".concat(ACTION_PREFIX, "APPLY_CPU_FILTER"),
  SET_MAP_INFO: "".concat(ACTION_PREFIX, "SET_MAP_INFO"),
  SORT_TABLE_COLUMN: "".concat(ACTION_PREFIX, "SORT_TABLE_COLUMN"),
  PIN_TABLE_COLUMN: "".concat(ACTION_PREFIX, "PIN_TABLE_COLUMN"),
  COPY_TABLE_COLUMN: "".concat(ACTION_PREFIX, "COPY_TABLE_COLUMN"),
  NEXT_FILE_BATCH: "".concat(ACTION_PREFIX, "NEXT_FILE_BATCH"),
  PROCESS_FILE_CONTENT: "".concat(ACTION_PREFIX, "PROCESS_FILE_CONTENT"),
  UPDATE_TABLE_COLOR: "".concat(ACTION_PREFIX, "UPDATE_TABLE_COLOR"),
  // mapState
  UPDATE_MAP: "".concat(ACTION_PREFIX, "UPDATE_MAP"),
  FIT_BOUNDS: "".concat(ACTION_PREFIX, "FIT_BOUNDS"),
  TOGGLE_PERSPECTIVE: "".concat(ACTION_PREFIX, "TOGGLE_PERSPECTIVE"),
  TOGGLE_SPLIT_MAP: "".concat(ACTION_PREFIX, "TOGGLE_SPLIT_MAP"),
  TOGGLE_FULLSCREEN: "".concat(ACTION_PREFIX, "TOGGLE_FULLSCREEN"),
  // mapStyle
  MAP_CONFIG_CHANGE: "".concat(ACTION_PREFIX, "MAP_CONFIG_CHANGE"),
  SET_DEFAULT_MAP_STYLE: "".concat(ACTION_PREFIX, "SET_DEFAULT_MAP_STYLE"),
  MAP_STYLE_CHANGE: "".concat(ACTION_PREFIX, "MAP_STYLE_CHANGE"),
  LOAD_MAP_STYLES: "".concat(ACTION_PREFIX, "LOAD_MAP_STYLES"),
  LOAD_MAP_STYLE_ERR: "".concat(ACTION_PREFIX, "LOAD_MAP_STYLE_ERR"),
  INPUT_MAP_STYLE: "".concat(ACTION_PREFIX, "INPUT_MAP_STYLE"),
  LOAD_CUSTOM_MAP_STYLE: "".concat(ACTION_PREFIX, "LOAD_CUSTOM_MAP_STYLE"),
  ADD_CUSTOM_MAP_STYLE: "".concat(ACTION_PREFIX, "ADD_CUSTOM_MAP_STYLE"),
  REQUEST_MAP_STYLES: "".concat(ACTION_PREFIX, "REQUEST_MAP_STYLES"),
  SET_3D_BUILDING_COLOR: "".concat(ACTION_PREFIX, "SET_3D_BUILDING_COLOR"),
  // uiState
  TOGGLE_SIDE_PANEL: "".concat(ACTION_PREFIX, "TOGGLE_SIDE_PANEL"),
  TOGGLE_MODAL: "".concat(ACTION_PREFIX, "TOGGLE_MODAL"),
  SHOW_EXPORT_DROPDOWN: "".concat(ACTION_PREFIX, "SHOW_EXPORT_DROPDOWN"),
  HIDE_EXPORT_DROPDOWN: "".concat(ACTION_PREFIX, "HIDE_EXPORT_DROPDOWN"),
  OPEN_DELETE_MODAL: "".concat(ACTION_PREFIX, "OPEN_DELETE_MODAL"),
  TOGGLE_MAP_CONTROL: "".concat(ACTION_PREFIX, "TOGGLE_MAP_CONTROL"),
  SET_MAP_CONTROL_VISIBILITY: "".concat(ACTION_PREFIX, "SET_MAP_CONTROL_VISIBILITY"),
  ADD_NOTIFICATION: "".concat(ACTION_PREFIX, "ADD_NOTIFICATION"),
  REMOVE_NOTIFICATION: "".concat(ACTION_PREFIX, "REMOVE_NOTIFICATION"),
  SET_LOCALE: "".concat(ACTION_PREFIX, "SET_LOCALE"),
  TOGGLE_LAYER_PANEL_LIST_VIEW: "".concat(ACTION_PREFIX, "TOGGLE_LAYER_PANEL_LIST_VIEW"),
  // uiState > export image
  SET_EXPORT_IMAGE_SETTING: "".concat(ACTION_PREFIX, "SET_EXPORT_IMAGE_SETTING"),
  START_EXPORTING_IMAGE: "".concat(ACTION_PREFIX, "START_EXPORTING_IMAGE"),
  SET_EXPORT_IMAGE_DATA_URI: "".concat(ACTION_PREFIX, "SET_EXPORT_IMAGE_DATA_URI"),
  SET_EXPORT_IMAGE_ERROR: "".concat(ACTION_PREFIX, "SET_EXPORT_IMAGE_ERROR"),
  CLEANUP_EXPORT_IMAGE: "".concat(ACTION_PREFIX, "CLEANUP_EXPORT_IMAGE"),
  // uiState > export video (state only, via hubble.gl)
  SET_EXPORT_VIDEO_SETTING: "".concat(ACTION_PREFIX, "SET_EXPORT_VIDEO_SETTING"),
  // uiState > export data
  SET_EXPORT_SELECTED_DATASET: "".concat(ACTION_PREFIX, "SET_EXPORT_SELECTED_DATASET"),
  SET_EXPORT_DATA_TYPE: "".concat(ACTION_PREFIX, "SET_EXPORT_DATA_TYPE"),
  SET_EXPORT_FILTERED: "".concat(ACTION_PREFIX, "SET_EXPORT_FILTERED"),
  SET_EXPORT_DATA: "".concat(ACTION_PREFIX, "SET_EXPORT_DATA"),
  // uiState > export map
  SET_EXPORT_MAP_FORMAT: "".concat(ACTION_PREFIX, "SET_EXPORT_MAP_FORMAT"),
  SET_USER_MAPBOX_ACCESS_TOKEN: "".concat(ACTION_PREFIX, "SET_USER_MAPBOX_ACCESS_TOKEN"),
  SET_EXPORT_MAP_HTML_MODE: "".concat(ACTION_PREFIX, "SET_EXPORT_MAP_HTML_MODE"),
  // uiState > editor
  SET_EDITOR_MODE: "".concat(ACTION_PREFIX, "SET_EDITOR_MODE"),
  SET_SELECTED_FEATURE: "".concat(ACTION_PREFIX, "SET_SELECTED_FEATURE"),
  // all
  INIT: "".concat(ACTION_PREFIX, "INIT"),
  ADD_DATA_TO_MAP: "".concat(ACTION_PREFIX, "ADD_DATA_TO_MAP"),
  RECEIVE_MAP_CONFIG: "".concat(ACTION_PREFIX, "RECEIVE_MAP_CONFIG"),
  RESET_MAP_CONFIG: "".concat(ACTION_PREFIX, "RESET_MAP_CONFIG"),
  // geo-operations
  SET_FEATURES: "".concat(ACTION_PREFIX, "SET_FEATURES"),
  SET_POLYGON_FILTER_LAYER: "".concat(ACTION_PREFIX, "SET_POLYGON_FILTER_LAYER"),
  DELETE_FEATURE: "".concat(ACTION_PREFIX, "DELETE_FEATURE"),
  TOGGLE_EDITOR_VISIBILITY: "".concat(ACTION_PREFIX, "TOGGLE_EDITOR_VISIBILITY"),
  // storage
  START_SAVE_STORAGE: "".concat(ACTION_PREFIX, "START_SAVE_STORAGE")
}; // eslint-disable-next-line prettier/prettier

var assignType = function assignType(obj) {
  return obj;
};

var _default = assignType(ActionTypes);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,