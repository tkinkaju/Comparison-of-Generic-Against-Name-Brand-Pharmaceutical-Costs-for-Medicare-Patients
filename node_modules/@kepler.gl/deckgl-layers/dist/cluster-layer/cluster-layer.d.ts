/// <reference types="deck.gl" />
/// <reference types="@deck.gl/core" />
/// <reference types="@danmarshall/deckgl-typings/deck.gl__core" />
import { ScatterplotLayer } from '@deck.gl/layers';
import { _AggregationLayer as AggregationLayer } from '@deck.gl/aggregation-layers';
import { AggregationType } from '../layer-utils/cpu-aggregator';
import { AggregationLayerProps } from '@deck.gl/aggregation-layers/aggregation-layer';
export declare const clusterAggregation: AggregationType;
export default class ClusterLayer extends AggregationLayer<any, AggregationLayerProps<any> & {
    radiusScale: number;
}> {
    initializeState(): void;
    updateState({ oldProps, props, changeFlags }: {
        oldProps: any;
        props: any;
        changeFlags: any;
    }): void;
    getPickingInfo({ info }: {
        info: any;
    }): any;
    _getSublayerUpdateTriggers(): any;
    _getSubLayerAccessors(): {
        getRadius: any;
        getFillColor: any;
    };
    renderLayers(): ScatterplotLayer<unknown, {
        getRadius: any;
        getFillColor: any;
        id: string;
        data: any;
        radiusScale: number;
        visible: boolean | undefined;
        opacity: number | undefined;
        pickable: boolean | undefined;
        autoHighlight: boolean | undefined;
        highlightColor: import("@deck.gl/core/utils/color").RGBAColor | ((pickInfo: import("@deck.gl/core/lib/deck").PickInfo<any>) => import("@deck.gl/core/utils/color").RGBAColor) | undefined;
        updateTriggers: any;
        parameters: {
            depthMask: boolean;
        };
    }>;
}
