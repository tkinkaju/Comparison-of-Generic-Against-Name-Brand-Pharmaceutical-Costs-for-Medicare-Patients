import { RefObject } from 'react';
export interface Dimensions {
    readonly height: number;
    readonly width: number;
}
export declare function observeDimensions(target: Element, handleResize: (size: Dimensions | null) => void, throttleDelay?: number): void;
export declare function unobserveDimensions(target: Element): void;
/**
 * Usage example:
 * const [ref, dimensions] = useDimensions<HTMLDivElement>();
 *
 * @param throttleDelay
 * @returns
 */
export default function useDimensions<T extends Element>(throttleDelay?: number): [RefObject<T>, Dimensions | null];
