// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getQuantileDomain = getQuantileDomain;
exports.getOrdinalDomain = getOrdinalDomain;
exports.getLinearDomain = getLinearDomain;
exports.getLogDomain = getLogDomain;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _dataUtils = require("./data-utils");

var _d3Array = require("d3-array");/**
 * return quantile domain for an array of data
 */
function getQuantileDomain(data, valueAccessor, sortFunc) {
  var values = typeof valueAccessor === 'function' ? data.map(valueAccessor) : data;
  return values.filter(_dataUtils.notNullorUndefined).sort(sortFunc);
}
/**
 * return ordinal domain for a data container
 */


function getOrdinalDomain(dataContainer, valueAccessor) {
  var values = dataContainer.mapIndex(valueAccessor);
  return (0, _dataUtils.unique)(values).filter(_dataUtils.notNullorUndefined).sort();
}
/**
 * return linear domain for an array of data
 */


function getLinearDomain(data, valueAccessor) {
  var range = typeof valueAccessor === 'function' ? (0, _d3Array.extent)(data, valueAccessor) : (0, _d3Array.extent)(data);
  return range.map(function (d, i) {
    return d === undefined ? i : d;
  });
}
/**
 * return linear domain for an array of data. A log scale domain cannot contain 0
 */


function getLogDomain(data, valueAccessor) {
  var _getLinearDomain = getLinearDomain(data, valueAccessor),
      _getLinearDomain2 = (0, _slicedToArray2["default"])(_getLinearDomain, 2),
      d0 = _getLinearDomain2[0],
      d1 = _getLinearDomain2[1];

  return [d0 === 0 ? 1e-5 : d0, d1];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kYXRhLXNjYWxlLXV0aWxzLnRzIl0sIm5hbWVzIjpbImdldFF1YW50aWxlRG9tYWluIiwiZGF0YSIsInZhbHVlQWNjZXNzb3IiLCJzb3J0RnVuYyIsInZhbHVlcyIsIm1hcCIsImZpbHRlciIsIm5vdE51bGxvclVuZGVmaW5lZCIsInNvcnQiLCJnZXRPcmRpbmFsRG9tYWluIiwiZGF0YUNvbnRhaW5lciIsIm1hcEluZGV4IiwiZ2V0TGluZWFyRG9tYWluIiwicmFuZ2UiLCJkIiwiaSIsInVuZGVmaW5lZCIsImdldExvZ0RvbWFpbiIsImQwIiwiZDEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBb0JBOztBQUNBOztBQXJCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFTQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQSxpQkFBVCxDQUNMQyxJQURLLEVBRUxDLGFBRkssRUFHTEMsUUFISyxFQUlLO0FBQ1YsTUFBTUMsTUFBTSxHQUFHLE9BQU9GLGFBQVAsS0FBeUIsVUFBekIsR0FBc0NELElBQUksQ0FBQ0ksR0FBTCxDQUFTSCxhQUFULENBQXRDLEdBQWdFRCxJQUEvRTtBQUVBLFNBQU9HLE1BQU0sQ0FBQ0UsTUFBUCxDQUFjQyw2QkFBZCxFQUFrQ0MsSUFBbEMsQ0FBdUNMLFFBQXZDLENBQVA7QUFDRDtBQUVEO0FBQ0E7QUFDQTs7O0FBQ08sU0FBU00sZ0JBQVQsQ0FDTEMsYUFESyxFQUVMUixhQUZLLEVBR0s7QUFDVixNQUFNRSxNQUFNLEdBQUdNLGFBQWEsQ0FBQ0MsUUFBZCxDQUF1QlQsYUFBdkIsQ0FBZjtBQUVBLFNBQU8sdUJBQU9FLE1BQVAsRUFDSkUsTUFESSxDQUNHQyw2QkFESCxFQUVKQyxJQUZJLEVBQVA7QUFHRDtBQUVEO0FBQ0E7QUFDQTs7O0FBQ08sU0FBU0ksZUFBVCxDQUNMWCxJQURLLEVBRUxDLGFBRkssRUFHYTtBQUNsQixNQUFNVyxLQUFLLEdBQUcsT0FBT1gsYUFBUCxLQUF5QixVQUF6QixHQUFzQyxxQkFBT0QsSUFBUCxFQUFhQyxhQUFiLENBQXRDLEdBQW9FLHFCQUFPRCxJQUFQLENBQWxGO0FBQ0EsU0FBT1ksS0FBSyxDQUFDUixHQUFOLENBQVUsVUFBQ1MsQ0FBRCxFQUF3QkMsQ0FBeEI7QUFBQSxXQUF1Q0QsQ0FBQyxLQUFLRSxTQUFOLEdBQWtCRCxDQUFsQixHQUFzQkQsQ0FBN0Q7QUFBQSxHQUFWLENBQVA7QUFJRDtBQUVEO0FBQ0E7QUFDQTs7O0FBQ08sU0FBU0csWUFBVCxDQUFzQmhCLElBQXRCLEVBQW1DQyxhQUFuQyxFQUF1RjtBQUFBLHlCQUMzRVUsZUFBZSxDQUFDWCxJQUFELEVBQU9DLGFBQVAsQ0FENEQ7QUFBQTtBQUFBLE1BQ3JGZ0IsRUFEcUY7QUFBQSxNQUNqRkMsRUFEaUY7O0FBRTVGLFNBQU8sQ0FBQ0QsRUFBRSxLQUFLLENBQVAsR0FBVyxJQUFYLEdBQWtCQSxFQUFuQixFQUF1QkMsRUFBdkIsQ0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIyIFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHtub3ROdWxsb3JVbmRlZmluZWQsIHVuaXF1ZX0gZnJvbSAnLi9kYXRhLXV0aWxzJztcbmltcG9ydCB7ZXh0ZW50fSBmcm9tICdkMy1hcnJheSc7XG5pbXBvcnQge0RhdGFDb250YWluZXJJbnRlcmZhY2V9IGZyb20gJy4vZGF0YS1jb250YWluZXItaW50ZXJmYWNlJztcblxudHlwZSBkYXRhVmFsdWVBY2Nlc3NvciA9IDxUPihwYXJhbTogVCkgPT4gVDtcbnR5cGUgZGF0YUNvbnRhaW5lclZhbHVlQWNjZXNzb3IgPSAoZDoge2luZGV4OiBudW1iZXJ9LCBkYzogRGF0YUNvbnRhaW5lckludGVyZmFjZSkgPT4gYW55O1xudHlwZSBzb3J0ID0gKGE6IGFueSwgYjogYW55KSA9PiBhbnk7XG4vKipcbiAqIHJldHVybiBxdWFudGlsZSBkb21haW4gZm9yIGFuIGFycmF5IG9mIGRhdGFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFF1YW50aWxlRG9tYWluKFxuICBkYXRhOiBhbnlbXSxcbiAgdmFsdWVBY2Nlc3Nvcj86IGRhdGFWYWx1ZUFjY2Vzc29yLFxuICBzb3J0RnVuYz86IHNvcnRcbik6IG51bWJlcltdIHtcbiAgY29uc3QgdmFsdWVzID0gdHlwZW9mIHZhbHVlQWNjZXNzb3IgPT09ICdmdW5jdGlvbicgPyBkYXRhLm1hcCh2YWx1ZUFjY2Vzc29yKSA6IGRhdGE7XG5cbiAgcmV0dXJuIHZhbHVlcy5maWx0ZXIobm90TnVsbG9yVW5kZWZpbmVkKS5zb3J0KHNvcnRGdW5jKTtcbn1cblxuLyoqXG4gKiByZXR1cm4gb3JkaW5hbCBkb21haW4gZm9yIGEgZGF0YSBjb250YWluZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE9yZGluYWxEb21haW4oXG4gIGRhdGFDb250YWluZXI6IERhdGFDb250YWluZXJJbnRlcmZhY2UsXG4gIHZhbHVlQWNjZXNzb3I6IGRhdGFDb250YWluZXJWYWx1ZUFjY2Vzc29yXG4pOiBzdHJpbmdbXSB7XG4gIGNvbnN0IHZhbHVlcyA9IGRhdGFDb250YWluZXIubWFwSW5kZXgodmFsdWVBY2Nlc3Nvcik7XG5cbiAgcmV0dXJuIHVuaXF1ZSh2YWx1ZXMpXG4gICAgLmZpbHRlcihub3ROdWxsb3JVbmRlZmluZWQpXG4gICAgLnNvcnQoKTtcbn1cblxuLyoqXG4gKiByZXR1cm4gbGluZWFyIGRvbWFpbiBmb3IgYW4gYXJyYXkgb2YgZGF0YVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGluZWFyRG9tYWluKFxuICBkYXRhOiBudW1iZXJbXSxcbiAgdmFsdWVBY2Nlc3Nvcj86IGRhdGFWYWx1ZUFjY2Vzc29yXG4pOiBbbnVtYmVyLCBudW1iZXJdIHtcbiAgY29uc3QgcmFuZ2UgPSB0eXBlb2YgdmFsdWVBY2Nlc3NvciA9PT0gJ2Z1bmN0aW9uJyA/IGV4dGVudChkYXRhLCB2YWx1ZUFjY2Vzc29yKSA6IGV4dGVudChkYXRhKTtcbiAgcmV0dXJuIHJhbmdlLm1hcCgoZDogdW5kZWZpbmVkIHwgbnVtYmVyLCBpOiBudW1iZXIpID0+IChkID09PSB1bmRlZmluZWQgPyBpIDogZCkpIGFzIFtcbiAgICBudW1iZXIsXG4gICAgbnVtYmVyXG4gIF07XG59XG5cbi8qKlxuICogcmV0dXJuIGxpbmVhciBkb21haW4gZm9yIGFuIGFycmF5IG9mIGRhdGEuIEEgbG9nIHNjYWxlIGRvbWFpbiBjYW5ub3QgY29udGFpbiAwXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRMb2dEb21haW4oZGF0YTogYW55W10sIHZhbHVlQWNjZXNzb3I6IGRhdGFWYWx1ZUFjY2Vzc29yKTogW251bWJlciwgbnVtYmVyXSB7XG4gIGNvbnN0IFtkMCwgZDFdID0gZ2V0TGluZWFyRG9tYWluKGRhdGEsIHZhbHVlQWNjZXNzb3IpO1xuICByZXR1cm4gW2QwID09PSAwID8gMWUtNSA6IGQwLCBkMV07XG59XG4iXX0=