// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "hexToRgb", {
  enumerable: true,
  get: function get() {
    return _colorUtils.hexToRgb;
  }
});
Object.defineProperty(exports, "isHexColor", {
  enumerable: true,
  get: function get() {
    return _colorUtils.isHexColor;
  }
});
Object.defineProperty(exports, "rgbToHex", {
  enumerable: true,
  get: function get() {
    return _colorUtils.rgbToHex;
  }
});
Object.defineProperty(exports, "getColorGroupByName", {
  enumerable: true,
  get: function get() {
    return _colorUtils.getColorGroupByName;
  }
});
Object.defineProperty(exports, "reverseColorRange", {
  enumerable: true,
  get: function get() {
    return _colorUtils.reverseColorRange;
  }
});
Object.defineProperty(exports, "createLinearGradient", {
  enumerable: true,
  get: function get() {
    return _colorUtils.createLinearGradient;
  }
});
Object.defineProperty(exports, "isRgbColor", {
  enumerable: true,
  get: function get() {
    return _colorUtils.isRgbColor;
  }
});
Object.defineProperty(exports, "errorNotification", {
  enumerable: true,
  get: function get() {
    return _notificationsUtils.errorNotification;
  }
});
Object.defineProperty(exports, "createNotification", {
  enumerable: true,
  get: function get() {
    return _notificationsUtils.createNotification;
  }
});
Object.defineProperty(exports, "exportImageError", {
  enumerable: true,
  get: function get() {
    return _notificationsUtils.exportImageError;
  }
});
Object.defineProperty(exports, "successNotification", {
  enumerable: true,
  get: function get() {
    return _notificationsUtils.successNotification;
  }
});
Object.defineProperty(exports, "domtoimage", {
  enumerable: true,
  get: function get() {
    return _domToImage["default"];
  }
});
Object.defineProperty(exports, "getFrequency", {
  enumerable: true,
  get: function get() {
    return _aggregateUtils.getFrequency;
  }
});
Object.defineProperty(exports, "getMode", {
  enumerable: true,
  get: function get() {
    return _aggregateUtils.getMode;
  }
});
Object.defineProperty(exports, "aggregate", {
  enumerable: true,
  get: function get() {
    return _aggregateUtils.aggregate;
  }
});
Object.defineProperty(exports, "unique", {
  enumerable: true,
  get: function get() {
    return _dataUtils.unique;
  }
});
Object.defineProperty(exports, "getLatLngBounds", {
  enumerable: true,
  get: function get() {
    return _dataUtils.getLatLngBounds;
  }
});
Object.defineProperty(exports, "clamp", {
  enumerable: true,
  get: function get() {
    return _dataUtils.clamp;
  }
});
Object.defineProperty(exports, "getSampleData", {
  enumerable: true,
  get: function get() {
    return _dataUtils.getSampleData;
  }
});
Object.defineProperty(exports, "timeToUnixMilli", {
  enumerable: true,
  get: function get() {
    return _dataUtils.timeToUnixMilli;
  }
});
Object.defineProperty(exports, "notNullorUndefined", {
  enumerable: true,
  get: function get() {
    return _dataUtils.notNullorUndefined;
  }
});
Object.defineProperty(exports, "isNumber", {
  enumerable: true,
  get: function get() {
    return _dataUtils.isNumber;
  }
});
Object.defineProperty(exports, "isPlainObject", {
  enumerable: true,
  get: function get() {
    return _dataUtils.isPlainObject;
  }
});
Object.defineProperty(exports, "hasOwnProperty", {
  enumerable: true,
  get: function get() {
    return _dataUtils.hasOwnProperty;
  }
});
Object.defineProperty(exports, "numberSort", {
  enumerable: true,
  get: function get() {
    return _dataUtils.numberSort;
  }
});
Object.defineProperty(exports, "getSortingFunction", {
  enumerable: true,
  get: function get() {
    return _dataUtils.getSortingFunction;
  }
});
Object.defineProperty(exports, "preciseRound", {
  enumerable: true,
  get: function get() {
    return _dataUtils.preciseRound;
  }
});
Object.defineProperty(exports, "getRoundingDecimalFromStep", {
  enumerable: true,
  get: function get() {
    return _dataUtils.getRoundingDecimalFromStep;
  }
});
Object.defineProperty(exports, "snapToMarks", {
  enumerable: true,
  get: function get() {
    return _dataUtils.snapToMarks;
  }
});
Object.defineProperty(exports, "normalizeSliderValue", {
  enumerable: true,
  get: function get() {
    return _dataUtils.normalizeSliderValue;
  }
});
Object.defineProperty(exports, "roundValToStep", {
  enumerable: true,
  get: function get() {
    return _dataUtils.roundValToStep;
  }
});
Object.defineProperty(exports, "defaultFormatter", {
  enumerable: true,
  get: function get() {
    return _dataUtils.defaultFormatter;
  }
});
Object.defineProperty(exports, "FIELD_DISPLAY_FORMAT", {
  enumerable: true,
  get: function get() {
    return _dataUtils.FIELD_DISPLAY_FORMAT;
  }
});
Object.defineProperty(exports, "parseFieldValue", {
  enumerable: true,
  get: function get() {
    return _dataUtils.parseFieldValue;
  }
});
Object.defineProperty(exports, "arrayMove", {
  enumerable: true,
  get: function get() {
    return _dataUtils.arrayMove;
  }
});
Object.defineProperty(exports, "getFormatter", {
  enumerable: true,
  get: function get() {
    return _dataUtils.getFormatter;
  }
});
Object.defineProperty(exports, "applyDefaultFormat", {
  enumerable: true,
  get: function get() {
    return _dataUtils.applyDefaultFormat;
  }
});
Object.defineProperty(exports, "getBooleanFormatter", {
  enumerable: true,
  get: function get() {
    return _dataUtils.getBooleanFormatter;
  }
});
Object.defineProperty(exports, "applyCustomFormat", {
  enumerable: true,
  get: function get() {
    return _dataUtils.applyCustomFormat;
  }
});
Object.defineProperty(exports, "datetimeFormatter", {
  enumerable: true,
  get: function get() {
    return _dataUtils.datetimeFormatter;
  }
});
Object.defineProperty(exports, "datasetColorMaker", {
  enumerable: true,
  get: function get() {
    return _datasetUtils.datasetColorMaker;
  }
});
Object.defineProperty(exports, "findDefaultColorField", {
  enumerable: true,
  get: function get() {
    return _datasetUtils.findDefaultColorField;
  }
});
Object.defineProperty(exports, "ACCEPTED_ANALYZER_TYPES", {
  enumerable: true,
  get: function get() {
    return _datasetUtils.ACCEPTED_ANALYZER_TYPES;
  }
});
Object.defineProperty(exports, "validateInputData", {
  enumerable: true,
  get: function get() {
    return _datasetUtils.validateInputData;
  }
});
Object.defineProperty(exports, "getSampleForTypeAnalyze", {
  enumerable: true,
  get: function get() {
    return _datasetUtils.getSampleForTypeAnalyze;
  }
});
Object.defineProperty(exports, "getFieldsFromData", {
  enumerable: true,
  get: function get() {
    return _datasetUtils.getFieldsFromData;
  }
});
Object.defineProperty(exports, "renameDuplicateFields", {
  enumerable: true,
  get: function get() {
    return _datasetUtils.renameDuplicateFields;
  }
});
Object.defineProperty(exports, "analyzerTypeToFieldType", {
  enumerable: true,
  get: function get() {
    return _datasetUtils.analyzerTypeToFieldType;
  }
});
Object.defineProperty(exports, "exportMapToHTML", {
  enumerable: true,
  get: function get() {
    return _exportMapHtml.exportMapToHTML;
  }
});
Object.defineProperty(exports, "DEFAULT_IMAGE_NAME", {
  enumerable: true,
  get: function get() {
    return _exportUtils.DEFAULT_IMAGE_NAME;
  }
});
Object.defineProperty(exports, "DEFAULT_HTML_NAME", {
  enumerable: true,
  get: function get() {
    return _exportUtils.DEFAULT_HTML_NAME;
  }
});
Object.defineProperty(exports, "DEFAULT_JSON_NAME", {
  enumerable: true,
  get: function get() {
    return _exportUtils.DEFAULT_JSON_NAME;
  }
});
Object.defineProperty(exports, "DEFAULT_DATA_NAME", {
  enumerable: true,
  get: function get() {
    return _exportUtils.DEFAULT_DATA_NAME;
  }
});
Object.defineProperty(exports, "DEFAULT_EXPORT_JSON_SETTINGS", {
  enumerable: true,
  get: function get() {
    return _exportUtils.DEFAULT_EXPORT_JSON_SETTINGS;
  }
});
Object.defineProperty(exports, "isMSEdge", {
  enumerable: true,
  get: function get() {
    return _exportUtils.isMSEdge;
  }
});
Object.defineProperty(exports, "getScaleFromImageSize", {
  enumerable: true,
  get: function get() {
    return _exportUtils.getScaleFromImageSize;
  }
});
Object.defineProperty(exports, "calculateExportImageSize", {
  enumerable: true,
  get: function get() {
    return _exportUtils.calculateExportImageSize;
  }
});
Object.defineProperty(exports, "convertToPng", {
  enumerable: true,
  get: function get() {
    return _exportUtils.convertToPng;
  }
});
Object.defineProperty(exports, "dataURItoBlob", {
  enumerable: true,
  get: function get() {
    return _exportUtils.dataURItoBlob;
  }
});
Object.defineProperty(exports, "downloadFile", {
  enumerable: true,
  get: function get() {
    return _exportUtils.downloadFile;
  }
});
Object.defineProperty(exports, "exportImage", {
  enumerable: true,
  get: function get() {
    return _exportUtils.exportImage;
  }
});
Object.defineProperty(exports, "exportToJsonString", {
  enumerable: true,
  get: function get() {
    return _exportUtils.exportToJsonString;
  }
});
Object.defineProperty(exports, "getMapJSON", {
  enumerable: true,
  get: function get() {
    return _exportUtils.getMapJSON;
  }
});
Object.defineProperty(exports, "exportJson", {
  enumerable: true,
  get: function get() {
    return _exportUtils.exportJson;
  }
});
Object.defineProperty(exports, "exportHtml", {
  enumerable: true,
  get: function get() {
    return _exportUtils.exportHtml;
  }
});
Object.defineProperty(exports, "exportMap", {
  enumerable: true,
  get: function get() {
    return _exportUtils.exportMap;
  }
});
Object.defineProperty(exports, "exporters", {
  enumerable: true,
  get: function get() {
    return _exportUtils["default"];
  }
});
Object.defineProperty(exports, "setLayerBlending", {
  enumerable: true,
  get: function get() {
    return _glUtils.setLayerBlending;
  }
});
Object.defineProperty(exports, "flattenMessages", {
  enumerable: true,
  get: function get() {
    return _localeUtils.flattenMessages;
  }
});
Object.defineProperty(exports, "mergeMessages", {
  enumerable: true,
  get: function get() {
    return _localeUtils.mergeMessages;
  }
});
Object.defineProperty(exports, "observeDimensions", {
  enumerable: true,
  get: function get() {
    return _observeDimensions.observeDimensions;
  }
});
Object.defineProperty(exports, "unobserveDimensions", {
  enumerable: true,
  get: function get() {
    return _observeDimensions.unobserveDimensions;
  }
});
Object.defineProperty(exports, "useDimensions", {
  enumerable: true,
  get: function get() {
    return _observeDimensions["default"];
  }
});
Object.defineProperty(exports, "validateBounds", {
  enumerable: true,
  get: function get() {
    return _projectionUtils.validateBounds;
  }
});
Object.defineProperty(exports, "getCenterAndZoomFromBounds", {
  enumerable: true,
  get: function get() {
    return _projectionUtils.getCenterAndZoomFromBounds;
  }
});
Object.defineProperty(exports, "validateToken", {
  enumerable: true,
  get: function get() {
    return _mapboxUtils.validateToken;
  }
});
Object.defineProperty(exports, "getDefaultLayerGroupVisibility", {
  enumerable: true,
  get: function get() {
    return _mapboxGlStyleEditor.getDefaultLayerGroupVisibility;
  }
});
Object.defineProperty(exports, "editTopMapStyle", {
  enumerable: true,
  get: function get() {
    return _mapboxGlStyleEditor.editTopMapStyle;
  }
});
Object.defineProperty(exports, "editBottomMapStyle", {
  enumerable: true,
  get: function get() {
    return _mapboxGlStyleEditor.editBottomMapStyle;
  }
});
Object.defineProperty(exports, "isValidStyleUrl", {
  enumerable: true,
  get: function get() {
    return _mapboxGlStyleEditor.isValidStyleUrl;
  }
});
Object.defineProperty(exports, "getStyleDownloadUrl", {
  enumerable: true,
  get: function get() {
    return _mapboxGlStyleEditor.getStyleDownloadUrl;
  }
});
Object.defineProperty(exports, "getStyleImageIcon", {
  enumerable: true,
  get: function get() {
    return _mapboxGlStyleEditor.getStyleImageIcon;
  }
});
Object.defineProperty(exports, "scaleMapStyleByResolution", {
  enumerable: true,
  get: function get() {
    return _mapboxGlStyleEditor.scaleMapStyleByResolution;
  }
});
Object.defineProperty(exports, "mergeLayerGroupVisibility", {
  enumerable: true,
  get: function get() {
    return _mapboxGlStyleEditor.mergeLayerGroupVisibility;
  }
});
Object.defineProperty(exports, "isValidMapInfo", {
  enumerable: true,
  get: function get() {
    return _mapInfoUtils.isValidMapInfo;
  }
});
Object.defineProperty(exports, "generateHashId", {
  enumerable: true,
  get: function get() {
    return _utils.generateHashId;
  }
});
Object.defineProperty(exports, "isChrome", {
  enumerable: true,
  get: function get() {
    return _utils.isChrome;
  }
});
Object.defineProperty(exports, "capitalizeFirstLetter", {
  enumerable: true,
  get: function get() {
    return _utils.capitalizeFirstLetter;
  }
});
Object.defineProperty(exports, "camelToTitle", {
  enumerable: true,
  get: function get() {
    return _utils.camelToTitle;
  }
});
Object.defineProperty(exports, "camelize", {
  enumerable: true,
  get: function get() {
    return _utils.camelize;
  }
});
Object.defineProperty(exports, "toArray", {
  enumerable: true,
  get: function get() {
    return _utils.toArray;
  }
});
Object.defineProperty(exports, "insertValue", {
  enumerable: true,
  get: function get() {
    return _utils.insertValue;
  }
});
Object.defineProperty(exports, "isObject", {
  enumerable: true,
  get: function get() {
    return _utils.isObject;
  }
});
Object.defineProperty(exports, "set", {
  enumerable: true,
  get: function get() {
    return _utils.set;
  }
});
Object.defineProperty(exports, "getError", {
  enumerable: true,
  get: function get() {
    return _utils.getError;
  }
});
Object.defineProperty(exports, "arrayInsert", {
  enumerable: true,
  get: function get() {
    return _utils.arrayInsert;
  }
});
Object.defineProperty(exports, "isTest", {
  enumerable: true,
  get: function get() {
    return _utils.isTest;
  }
});
Object.defineProperty(exports, "filterObjectByPredicate", {
  enumerable: true,
  get: function get() {
    return _utils.filterObjectByPredicate;
  }
});
Object.defineProperty(exports, "isFunction", {
  enumerable: true,
  get: function get() {
    return _utils.isFunction;
  }
});
Object.defineProperty(exports, "hasMobileWidth", {
  enumerable: true,
  get: function get() {
    return _utils.hasMobileWidth;
  }
});
Object.defineProperty(exports, "hasPortableWidth", {
  enumerable: true,
  get: function get() {
    return _utils.hasPortableWidth;
  }
});
Object.defineProperty(exports, "addNewLayersToSplitMap", {
  enumerable: true,
  get: function get() {
    return _splitMapUtils.addNewLayersToSplitMap;
  }
});
Object.defineProperty(exports, "removeLayerFromSplitMaps", {
  enumerable: true,
  get: function get() {
    return _splitMapUtils.removeLayerFromSplitMaps;
  }
});
Object.defineProperty(exports, "getInitialMapLayersForSplitMap", {
  enumerable: true,
  get: function get() {
    return _splitMapUtils.getInitialMapLayersForSplitMap;
  }
});
Object.defineProperty(exports, "computeSplitMapLayers", {
  enumerable: true,
  get: function get() {
    return _splitMapUtils.computeSplitMapLayers;
  }
});
Object.defineProperty(exports, "transformRequest", {
  enumerable: true,
  get: function get() {
    return _mapboxUtils2.transformRequest;
  }
});
Object.defineProperty(exports, "isStyleUsingMapboxTiles", {
  enumerable: true,
  get: function get() {
    return _mapboxUtils2.isStyleUsingMapboxTiles;
  }
});
Object.defineProperty(exports, "onViewPortChange", {
  enumerable: true,
  get: function get() {
    return _mapUtils.onViewPortChange;
  }
});
Object.defineProperty(exports, "getMapLayersFromSplitMaps", {
  enumerable: true,
  get: function get() {
    return _mapUtils.getMapLayersFromSplitMaps;
  }
});
Object.defineProperty(exports, "createDataContainer", {
  enumerable: true,
  get: function get() {
    return _dataContainerUtils.createDataContainer;
  }
});
Object.defineProperty(exports, "createIndexedDataContainer", {
  enumerable: true,
  get: function get() {
    return _dataContainerUtils.createIndexedDataContainer;
  }
});
Object.defineProperty(exports, "getSampleContainerData", {
  enumerable: true,
  get: function get() {
    return _dataContainerUtils.getSampleData;
  }
});
Object.defineProperty(exports, "TimestampStepMap", {
  enumerable: true,
  get: function get() {
    return _filterUtils.TimestampStepMap;
  }
});
Object.defineProperty(exports, "histogramBins", {
  enumerable: true,
  get: function get() {
    return _filterUtils.histogramBins;
  }
});
Object.defineProperty(exports, "enlargedHistogramBins", {
  enumerable: true,
  get: function get() {
    return _filterUtils.enlargedHistogramBins;
  }
});
Object.defineProperty(exports, "FILTER_UPDATER_PROPS", {
  enumerable: true,
  get: function get() {
    return _filterUtils.FILTER_UPDATER_PROPS;
  }
});
Object.defineProperty(exports, "LIMITED_FILTER_EFFECT_PROPS", {
  enumerable: true,
  get: function get() {
    return _filterUtils.LIMITED_FILTER_EFFECT_PROPS;
  }
});
Object.defineProperty(exports, "FILTER_COMPONENTS", {
  enumerable: true,
  get: function get() {
    return _filterUtils.FILTER_COMPONENTS;
  }
});
Object.defineProperty(exports, "DEFAULT_FILTER_STRUCTURE", {
  enumerable: true,
  get: function get() {
    return _filterUtils.DEFAULT_FILTER_STRUCTURE;
  }
});
Object.defineProperty(exports, "FILTER_ID_LENGTH", {
  enumerable: true,
  get: function get() {
    return _filterUtils.FILTER_ID_LENGTH;
  }
});
Object.defineProperty(exports, "LAYER_FILTERS", {
  enumerable: true,
  get: function get() {
    return _filterUtils.LAYER_FILTERS;
  }
});
Object.defineProperty(exports, "getDefaultFilter", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getDefaultFilter;
  }
});
Object.defineProperty(exports, "shouldApplyFilter", {
  enumerable: true,
  get: function get() {
    return _filterUtils.shouldApplyFilter;
  }
});
Object.defineProperty(exports, "validatePolygonFilter", {
  enumerable: true,
  get: function get() {
    return _filterUtils.validatePolygonFilter;
  }
});
Object.defineProperty(exports, "validateFilter", {
  enumerable: true,
  get: function get() {
    return _filterUtils.validateFilter;
  }
});
Object.defineProperty(exports, "validateFilterWithData", {
  enumerable: true,
  get: function get() {
    return _filterUtils.validateFilterWithData;
  }
});
Object.defineProperty(exports, "getFilterProps", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getFilterProps;
  }
});
Object.defineProperty(exports, "getPolygonFilterFunctor", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getPolygonFilterFunctor;
  }
});
Object.defineProperty(exports, "getFilterFunction", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getFilterFunction;
  }
});
Object.defineProperty(exports, "updateFilterDataId", {
  enumerable: true,
  get: function get() {
    return _filterUtils.updateFilterDataId;
  }
});
Object.defineProperty(exports, "filterDataByFilterTypes", {
  enumerable: true,
  get: function get() {
    return _filterUtils.filterDataByFilterTypes;
  }
});
Object.defineProperty(exports, "getFilterRecord", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getFilterRecord;
  }
});
Object.defineProperty(exports, "diffFilters", {
  enumerable: true,
  get: function get() {
    return _filterUtils.diffFilters;
  }
});
Object.defineProperty(exports, "adjustValueToFilterDomain", {
  enumerable: true,
  get: function get() {
    return _filterUtils.adjustValueToFilterDomain;
  }
});
Object.defineProperty(exports, "getNumericFieldDomain", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getNumericFieldDomain;
  }
});
Object.defineProperty(exports, "getNumericStepSize", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getNumericStepSize;
  }
});
Object.defineProperty(exports, "getTimestampFieldDomain", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getTimestampFieldDomain;
  }
});
Object.defineProperty(exports, "histogramConstruct", {
  enumerable: true,
  get: function get() {
    return _filterUtils.histogramConstruct;
  }
});
Object.defineProperty(exports, "getHistogram", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getHistogram;
  }
});
Object.defineProperty(exports, "formatNumberByStep", {
  enumerable: true,
  get: function get() {
    return _filterUtils.formatNumberByStep;
  }
});
Object.defineProperty(exports, "isInRange", {
  enumerable: true,
  get: function get() {
    return _filterUtils.isInRange;
  }
});
Object.defineProperty(exports, "isInPolygon", {
  enumerable: true,
  get: function get() {
    return _filterUtils.isInPolygon;
  }
});
Object.defineProperty(exports, "isValidTimeDomain", {
  enumerable: true,
  get: function get() {
    return _filterUtils.isValidTimeDomain;
  }
});
Object.defineProperty(exports, "getTimeWidgetTitleFormatter", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getTimeWidgetTitleFormatter;
  }
});
Object.defineProperty(exports, "getTimeWidgetHintFormatter", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getTimeWidgetHintFormatter;
  }
});
Object.defineProperty(exports, "isFilterValidToSave", {
  enumerable: true,
  get: function get() {
    return _filterUtils.isFilterValidToSave;
  }
});
Object.defineProperty(exports, "isValidFilterValue", {
  enumerable: true,
  get: function get() {
    return _filterUtils.isValidFilterValue;
  }
});
Object.defineProperty(exports, "getFilterPlot", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getFilterPlot;
  }
});
Object.defineProperty(exports, "getDefaultFilterPlotType", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getDefaultFilterPlotType;
  }
});
Object.defineProperty(exports, "applyFiltersToDatasets", {
  enumerable: true,
  get: function get() {
    return _filterUtils.applyFiltersToDatasets;
  }
});
Object.defineProperty(exports, "applyFilterFieldName", {
  enumerable: true,
  get: function get() {
    return _filterUtils.applyFilterFieldName;
  }
});
Object.defineProperty(exports, "mergeFilterDomainStep", {
  enumerable: true,
  get: function get() {
    return _filterUtils.mergeFilterDomainStep;
  }
});
Object.defineProperty(exports, "featureToFilterValue", {
  enumerable: true,
  get: function get() {
    return _filterUtils.featureToFilterValue;
  }
});
Object.defineProperty(exports, "getFilterIdInFeature", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getFilterIdInFeature;
  }
});
Object.defineProperty(exports, "generatePolygonFilter", {
  enumerable: true,
  get: function get() {
    return _filterUtils.generatePolygonFilter;
  }
});
Object.defineProperty(exports, "filterDatasetCPU", {
  enumerable: true,
  get: function get() {
    return _filterUtils.filterDatasetCPU;
  }
});
Object.defineProperty(exports, "validateFiltersUpdateDatasets", {
  enumerable: true,
  get: function get() {
    return _filterUtils.validateFiltersUpdateDatasets;
  }
});
Object.defineProperty(exports, "getIntervalBins", {
  enumerable: true,
  get: function get() {
    return _filterUtils.getIntervalBins;
  }
});
Object.defineProperty(exports, "getQuantileDomain", {
  enumerable: true,
  get: function get() {
    return _dataScaleUtils.getQuantileDomain;
  }
});
Object.defineProperty(exports, "getOrdinalDomain", {
  enumerable: true,
  get: function get() {
    return _dataScaleUtils.getOrdinalDomain;
  }
});
Object.defineProperty(exports, "getLinearDomain", {
  enumerable: true,
  get: function get() {
    return _dataScaleUtils.getLinearDomain;
  }
});
Object.defineProperty(exports, "getLogDomain", {
  enumerable: true,
  get: function get() {
    return _dataScaleUtils.getLogDomain;
  }
});
Object.defineProperty(exports, "DataRow", {
  enumerable: true,
  get: function get() {
    return _dataRow.DataRow;
  }
});
Object.defineProperty(exports, "getCentroid", {
  enumerable: true,
  get: function get() {
    return _h3Utils.getCentroid;
  }
});
Object.defineProperty(exports, "idToPolygonGeo", {
  enumerable: true,
  get: function get() {
    return _h3Utils.idToPolygonGeo;
  }
});
Object.defineProperty(exports, "h3IsValid", {
  enumerable: true,
  get: function get() {
    return _h3Utils.h3IsValid;
  }
});
Object.defineProperty(exports, "getHexFields", {
  enumerable: true,
  get: function get() {
    return _h3Utils.getHexFields;
  }
});

var _colorUtils = require("./color-utils");

var _notificationsUtils = require("./notifications-utils");

var _domToImage = _interopRequireDefault(require("./dom-to-image"));

var _aggregateUtils = require("./aggregate-utils");

var _dataUtils = require("./data-utils");

var _datasetUtils = require("./dataset-utils");

var _exportMapHtml = require("./export-map-html");

var _exportUtils = _interopRequireWildcard(require("./export-utils"));

var _glUtils = require("./gl-utils");

var _localeUtils = require("./locale-utils");

var _observeDimensions = _interopRequireWildcard(require("./observe-dimensions"));

var _projectionUtils = require("./projection-utils");

var _mapboxUtils = require("./mapbox-utils");

var _mapboxGlStyleEditor = require("./map-style-utils/mapbox-gl-style-editor");

var _mapInfoUtils = require("./map-info-utils");

var _utils = require("./utils");

var _splitMapUtils = require("./split-map-utils");

var _mapboxUtils2 = require("./map-style-utils/mapbox-utils");

var _mapUtils = require("./map-utils");

var _dataContainerUtils = require("./data-container-utils");

var _filterUtils = require("./filter-utils");

var _dataScaleUtils = require("./data-scale-utils");

var _dataRow = require("./data-row");

var _h3Utils = require("./h3-utils");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,