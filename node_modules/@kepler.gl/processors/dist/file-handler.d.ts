import { Loader } from '@loaders.gl/loader-utils';
import { FileCacheItem, ValidKeplerGlMap } from './types';
import { Feature, AddDataToMapPayload } from '@kepler.gl/types';
import { FeatureCollection } from '@turf/helpers';
export declare function isGeoJson(json: unknown): json is Feature | FeatureCollection;
export declare function isFeature(json: unknown): json is Feature;
export declare function isFeatureCollection(json: unknown): json is FeatureCollection;
export declare function isRowObject(json: any): boolean;
export declare function isKeplerGlMap(json: unknown): json is ValidKeplerGlMap;
export declare function makeProgressIterator(asyncIterator: AsyncIterable<any>, info: {
    size: number;
}): AsyncGenerator;
export declare function readBatch(asyncIterator: AsyncIterable<any>, fileName: string): AsyncGenerator;
export declare function readFileInBatches({ file, loaders, loadOptions }: {
    file: File;
    fileCache: FileCacheItem[];
    loaders: Loader[];
    loadOptions: any;
}): Promise<AsyncGenerator>;
export declare function processFileData({ content, fileCache }: {
    content: {
        data: unknown;
        fileName: string;
    };
    fileCache: FileCacheItem[];
}): Promise<FileCacheItem[]>;
export declare function filesToDataPayload(fileCache: FileCacheItem[]): AddDataToMapPayload[];
