// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assignPointPairToLayerColumn = assignPointPairToLayerColumn;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }function assignPointPairToLayerColumn(pair, hasAlt) {
  var _pair$pair = pair.pair,
      lat = _pair$pair.lat,
      lng = _pair$pair.lng,
      alt = _pair$pair.alt;

  if (!hasAlt) {
    return {
      lat: lat,
      lng: lng
    };
  }

  var defaultAltColumn = {
    value: null,
    fieldIdx: -1,
    optional: true
  };
  return {
    lat: lat,
    lng: lng,
    altitude: alt ? _objectSpread(_objectSpread({}, defaultAltColumn), alt) : defaultAltColumn
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9sYXllci11dGlscy50cyJdLCJuYW1lcyI6WyJhc3NpZ25Qb2ludFBhaXJUb0xheWVyQ29sdW1uIiwicGFpciIsImhhc0FsdCIsImxhdCIsImxuZyIsImFsdCIsImRlZmF1bHRBbHRDb2x1bW4iLCJ2YWx1ZSIsImZpZWxkSWR4Iiwib3B0aW9uYWwiLCJhbHRpdHVkZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJTyxTQUFTQSw0QkFBVCxDQUFzQ0MsSUFBdEMsRUFBdURDLE1BQXZELEVBQXdFO0FBQUEsbUJBQ3JERCxJQUFJLENBQUNBLElBRGdEO0FBQUEsTUFDdEVFLEdBRHNFLGNBQ3RFQSxHQURzRTtBQUFBLE1BQ2pFQyxHQURpRSxjQUNqRUEsR0FEaUU7QUFBQSxNQUM1REMsR0FENEQsY0FDNURBLEdBRDREOztBQUU3RSxNQUFJLENBQUNILE1BQUwsRUFBYTtBQUNYLFdBQU87QUFBQ0MsTUFBQUEsR0FBRyxFQUFIQSxHQUFEO0FBQU1DLE1BQUFBLEdBQUcsRUFBSEE7QUFBTixLQUFQO0FBQ0Q7O0FBRUQsTUFBTUUsZ0JBQWdCLEdBQUc7QUFBQ0MsSUFBQUEsS0FBSyxFQUFFLElBQVI7QUFBY0MsSUFBQUEsUUFBUSxFQUFFLENBQUMsQ0FBekI7QUFBNEJDLElBQUFBLFFBQVEsRUFBRTtBQUF0QyxHQUF6QjtBQUVBLFNBQU87QUFDTE4sSUFBQUEsR0FBRyxFQUFIQSxHQURLO0FBRUxDLElBQUFBLEdBQUcsRUFBSEEsR0FGSztBQUdMTSxJQUFBQSxRQUFRLEVBQUVMLEdBQUcsbUNBQU9DLGdCQUFQLEdBQTRCRCxHQUE1QixJQUFtQ0M7QUFIM0MsR0FBUDtBQUtEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIyIFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHtGaWVsZFBhaXJ9IGZyb20gJ0BrZXBsZXIuZ2wvdHlwZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gYXNzaWduUG9pbnRQYWlyVG9MYXllckNvbHVtbihwYWlyOiBGaWVsZFBhaXIsIGhhc0FsdDogYm9vbGVhbikge1xuICBjb25zdCB7bGF0LCBsbmcsIGFsdH0gPSBwYWlyLnBhaXI7XG4gIGlmICghaGFzQWx0KSB7XG4gICAgcmV0dXJuIHtsYXQsIGxuZ307XG4gIH1cblxuICBjb25zdCBkZWZhdWx0QWx0Q29sdW1uID0ge3ZhbHVlOiBudWxsLCBmaWVsZElkeDogLTEsIG9wdGlvbmFsOiB0cnVlfTtcblxuICByZXR1cm4ge1xuICAgIGxhdCxcbiAgICBsbmcsXG4gICAgYWx0aXR1ZGU6IGFsdCA/IHsuLi5kZWZhdWx0QWx0Q29sdW1uLCAuLi5hbHR9IDogZGVmYXVsdEFsdENvbHVtblxuICB9O1xufVxuIl19