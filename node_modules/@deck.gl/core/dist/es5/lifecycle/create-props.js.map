{"version":3,"sources":["../../../src/lifecycle/create-props.ts"],"names":["createProps","component","propObjects","extensions","i","length","props","propsPrototype","getPropsPrototype","constructor","propsInstance","Object","create","COMPONENT_SYMBOL","ASYNC_ORIGINAL_SYMBOL","ASYNC_RESOLVED_SYMBOL","key","freeze","MergedDefaultPropsCacheKey","componentClass","cacheKey","extension","ExtensionClass","extensionName","name","defaultProps","getOwnProperty","createPropsPrototypeAndTypes","parent","prototype","parentClass","getPrototypeOf","parentDefaultProps","componentDefaultProps","componentPropDefs","assign","propTypes","PROP_TYPES_SYMBOL","deprecatedProps","DEPRECATED_PROPS_SYMBOL","extensionDefaultProps","createPropsPrototype","addAsyncPropsToPropPrototype","addDeprecatedPropsToPropPrototype","hasOwnProperty","_propTypes","id","getComponentName","defineProperties","writable","value","propName","defineProperty","enumerable","set","newValue","nameStr","newPropName","log","deprecated","join","defaultValues","descriptors","propType","async","getDescriptorForAsyncProp","ASYNC_DEFAULTS_SYMBOL","Promise","get","state","internalState","hasAsyncProp","getAsyncProp","object","prop","call","componentName","warn"],"mappings":"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","sourcesContent":["import log from '../utils/log';\nimport {isAsyncIterable} from '../utils/iterable-utils';\nimport {parsePropTypes} from './prop-types';\nimport {\n  COMPONENT_SYMBOL,\n  PROP_TYPES_SYMBOL,\n  DEPRECATED_PROPS_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport {StatefulComponentProps} from './component';\nimport type Component from './component';\n\n// Create a property object\nexport function createProps<PropsT extends {}>(\n  component: Component<PropsT>,\n  propObjects: Partial<PropsT>[]\n): StatefulComponentProps<PropsT> {\n  // Resolve extension value\n  let extensions: any[] | undefined;\n  for (let i = propObjects.length - 1; i >= 0; i--) {\n    const props = propObjects[i];\n    if ('extensions' in props) {\n      // @ts-expect-error TS(2339) extensions not defined\n      extensions = props.extensions;\n    }\n  }\n\n  // Create a new prop object with empty default props object\n  const propsPrototype = getPropsPrototype(component.constructor, extensions);\n  // The true default props object will be found later\n  const propsInstance = Object.create(propsPrototype);\n\n  // Props need a back pointer to the owning component\n  propsInstance[COMPONENT_SYMBOL] = component;\n  // The supplied (original) values for those async props that are set to url strings or Promises.\n  // In this case, the actual (i.e. resolved) values are looked up from component.internalState\n  propsInstance[ASYNC_ORIGINAL_SYMBOL] = {};\n  // Note: the actual (resolved) values for props that are NOT set to urls or Promises.\n  // in this case the values are served directly from this map\n  propsInstance[ASYNC_RESOLVED_SYMBOL] = {};\n\n  // \"Copy\" all sync props\n  for (let i = 0; i < propObjects.length; ++i) {\n    const props = propObjects[i];\n    // Do not use Object.assign here to avoid Symbols in props overwriting our private fields\n    // This might happen if one of the arguments is another props instance\n    for (const key in props) {\n      propsInstance[key] = props[key];\n    }\n  }\n\n  // Props must be immutable\n  Object.freeze(propsInstance);\n\n  return propsInstance;\n}\n\nconst MergedDefaultPropsCacheKey = '_mergedDefaultProps';\n\n// Return precalculated defaultProps and propType objects if available\n// build them if needed\nfunction getPropsPrototype(componentClass, extensions?: any[]) {\n  // A string that uniquely identifies the extensions involved\n  let cacheKey = MergedDefaultPropsCacheKey;\n  if (extensions) {\n    for (const extension of extensions) {\n      const ExtensionClass = extension.constructor;\n      if (ExtensionClass) {\n        cacheKey += `:${ExtensionClass.extensionName || ExtensionClass.name}`;\n      }\n    }\n  }\n\n  const defaultProps = getOwnProperty(componentClass, cacheKey);\n  if (!defaultProps) {\n    return (componentClass[cacheKey] = createPropsPrototypeAndTypes(\n      componentClass,\n      extensions || []\n    ));\n  }\n  return defaultProps;\n}\n\n// Build defaultProps and propType objects by walking component prototype chain\nfunction createPropsPrototypeAndTypes(\n  componentClass,\n  extensions: any[]\n): Record<string, any> | null {\n  const parent = componentClass.prototype;\n  if (!parent) {\n    return null;\n  }\n\n  const parentClass = Object.getPrototypeOf(componentClass);\n  const parentDefaultProps = getPropsPrototype(parentClass);\n\n  // Parse propTypes from Component.defaultProps\n  const componentDefaultProps = getOwnProperty(componentClass, 'defaultProps') || {};\n  const componentPropDefs = parsePropTypes(componentDefaultProps);\n\n  // Merged default props object. Order: parent, self, extensions\n  const defaultProps: any = Object.assign(\n    Object.create(null),\n    parentDefaultProps,\n    componentPropDefs.defaultProps\n  );\n  // Merged prop type definitions. Order: parent, self, extensions\n  const propTypes = Object.assign(\n    Object.create(null),\n    parentDefaultProps?.[PROP_TYPES_SYMBOL],\n    componentPropDefs.propTypes\n  );\n  // Merged deprecation list. Order: parent, self, extensions\n  const deprecatedProps = Object.assign(\n    Object.create(null),\n    parentDefaultProps?.[DEPRECATED_PROPS_SYMBOL],\n    componentPropDefs.deprecatedProps\n  );\n\n  for (const extension of extensions) {\n    const extensionDefaultProps = getPropsPrototype(extension.constructor);\n    if (extensionDefaultProps) {\n      Object.assign(defaultProps, extensionDefaultProps);\n      Object.assign(propTypes, extensionDefaultProps[PROP_TYPES_SYMBOL]);\n      Object.assign(deprecatedProps, extensionDefaultProps[DEPRECATED_PROPS_SYMBOL]);\n    }\n  }\n\n  // Create any necessary property descriptors and create the default prop object\n  // Assign merged default props\n  createPropsPrototype(defaultProps, componentClass);\n\n  // Add getters/setters for async props\n  addAsyncPropsToPropPrototype(defaultProps, propTypes);\n\n  // Add setters for deprecated props\n  addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps);\n\n  // Store the precalculated props\n  defaultProps[PROP_TYPES_SYMBOL] = propTypes;\n  defaultProps[DEPRECATED_PROPS_SYMBOL] = deprecatedProps;\n\n  // Backwards compatibility\n  // TODO: remove access of hidden property from the rest of the code base\n  if (extensions.length === 0 && !hasOwnProperty(componentClass, '_propTypes')) {\n    componentClass._propTypes = propTypes;\n  }\n  return defaultProps;\n}\n\n// Builds a pre-merged default props object that component props can inherit from\nfunction createPropsPrototype(defaultProps, componentClass) {\n  // Avoid freezing `id` prop\n  const id = getComponentName(componentClass);\n\n  Object.defineProperties(defaultProps, {\n    // `id` is treated specially because layer might need to override it\n    id: {\n      writable: true,\n      value: id\n    }\n  });\n}\n\nfunction addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps) {\n  for (const propName in deprecatedProps) {\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(defaultProps, propName, {\n      enumerable: false,\n      set(newValue) {\n        const nameStr = `${this.id}: ${propName}`;\n\n        for (const newPropName of deprecatedProps[propName]) {\n          if (!hasOwnProperty(this, newPropName)) {\n            this[newPropName] = newValue;\n          }\n        }\n\n        log.deprecated(nameStr, deprecatedProps[propName].join('/'))();\n      }\n    });\n    /* eslint-enable accessor-pairs */\n  }\n}\n\n// Create descriptors for overridable props\nfunction addAsyncPropsToPropPrototype(defaultProps, propTypes) {\n  const defaultValues = {};\n\n  const descriptors = {};\n\n  // Move async props into shadow values\n  for (const propName in propTypes) {\n    const propType = propTypes[propName];\n    const {name, value} = propType;\n\n    // Note: async is ES7 keyword, can't destructure\n    if (propType.async) {\n      defaultValues[name] = value;\n      descriptors[name] = getDescriptorForAsyncProp(name);\n    }\n  }\n\n  // Default \"resolved\" values for async props, returned if value not yet resolved/set.\n  defaultProps[ASYNC_DEFAULTS_SYMBOL] = defaultValues;\n  // Shadowed object, just to make sure \"early indexing\" into the instance does not fail\n  defaultProps[ASYNC_ORIGINAL_SYMBOL] = {};\n\n  Object.defineProperties(defaultProps, descriptors);\n}\n\n// Helper: Configures getter and setter for one async prop\nfunction getDescriptorForAsyncProp(name) {\n  return {\n    enumerable: true,\n    // Save the provided value for async props in a special map\n    set(newValue) {\n      if (\n        typeof newValue === 'string' ||\n        newValue instanceof Promise ||\n        isAsyncIterable(newValue)\n      ) {\n        this[ASYNC_ORIGINAL_SYMBOL][name] = newValue;\n      } else {\n        this[ASYNC_RESOLVED_SYMBOL][name] = newValue;\n      }\n    },\n    // Only the component's state knows the true value of async prop\n    get() {\n      if (this[ASYNC_RESOLVED_SYMBOL]) {\n        // Prop value isn't async, so just return it\n        if (name in this[ASYNC_RESOLVED_SYMBOL]) {\n          const value = this[ASYNC_RESOLVED_SYMBOL][name];\n\n          return value || this[ASYNC_DEFAULTS_SYMBOL][name];\n        }\n\n        if (name in this[ASYNC_ORIGINAL_SYMBOL]) {\n          // It's an async prop value: look into component state\n          const state = this[COMPONENT_SYMBOL] && this[COMPONENT_SYMBOL].internalState;\n          if (state && state.hasAsyncProp(name)) {\n            return state.getAsyncProp(name) || this[ASYNC_DEFAULTS_SYMBOL][name];\n          }\n        }\n      }\n\n      // the prop is not supplied, or\n      // component not yet initialized/matched, return the component's default value for the prop\n      return this[ASYNC_DEFAULTS_SYMBOL][name];\n    }\n  };\n}\n\n// HELPER METHODS\n\nfunction hasOwnProperty(object, prop) {\n  return Object.prototype.hasOwnProperty.call(object, prop);\n}\n\n// Constructors have their super class constructors as prototypes\nfunction getOwnProperty(object, prop) {\n  return hasOwnProperty(object, prop) && object[prop];\n}\n\nfunction getComponentName(componentClass) {\n  const componentName = componentClass.componentName;\n  if (!componentName) {\n    log.warn(`${componentClass.name}.componentName not specified`)();\n  }\n  return componentName || componentClass.name;\n}\n"],"file":"create-props.js"}