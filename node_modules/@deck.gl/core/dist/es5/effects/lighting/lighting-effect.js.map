{"version":3,"sources":["../../../../src/effects/lighting/lighting-effect.ts"],"names":["DEFAULT_AMBIENT_LIGHT_PROPS","color","intensity","DEFAULT_DIRECTIONAL_LIGHT_PROPS","direction","DEFAULT_SHADOW_COLOR","LightingEffect","props","setProps","ambientLight","directionalLights","pointLights","key","lightSource","type","push","_applyDefaultLights","shadow","some","light","gl","layers","layerFilter","viewports","onViewportActive","views","shadowMatrices","_calculateMatrices","shadowPasses","length","_createShadowPasses","programManager","ProgramManager","getDefaultProgramManager","addDefaultModule","dummyShadowMap","Texture2D","width","height","i","shadowPass","render","moduleParameters","shadowLightId","layer","parameters","shadowMaps","shadowColor","lightSources","map","directionalLight","getProjectedLight","pointLight","delete","removeDefaultModule","lightMatrices","viewMatrix","Matrix4","lookAt","eye","Vector3","negate","ShadowPass","shadowMap","AmbientLight","DirectionalLight"],"mappings":"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","sourcesContent":["import {Texture2D, ProgramManager} from '@luma.gl/core';\nimport {AmbientLight} from './ambient-light';\nimport {DirectionalLight} from './directional-light';\nimport {PointLight} from './point-light';\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport ShadowPass from '../../passes/shadow-pass';\nimport shadow from '../../shaderlib/shadow/shadow';\n\nimport type Layer from '../../lib/layer';\nimport type {Effect, PreRenderOptions} from '../../lib/effect';\n\nconst DEFAULT_AMBIENT_LIGHT_PROPS = {color: [255, 255, 255], intensity: 1.0};\nconst DEFAULT_DIRECTIONAL_LIGHT_PROPS = [\n  {\n    color: [255, 255, 255],\n    intensity: 1.0,\n    direction: [-1, 3, -1]\n  },\n  {\n    color: [255, 255, 255],\n    intensity: 0.9,\n    direction: [1, -8, -2.5]\n  }\n];\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 200 / 255];\n\ntype LightingEffectProps = Record<string, PointLight | DirectionalLight | AmbientLight>;\n\n// Class to manage ambient, point and directional light sources in deck\nexport default class LightingEffect implements Effect {\n  id = 'lighting-effect';\n  props!: LightingEffectProps;\n  shadowColor: number[] = DEFAULT_SHADOW_COLOR;\n\n  private shadow!: boolean;\n  private ambientLight!: AmbientLight | null;\n  private directionalLights!: DirectionalLight[];\n  private pointLights!: PointLight[];\n  private shadowPasses: ShadowPass[] = [];\n  private shadowMaps: Texture2D[] = [];\n  private dummyShadowMap: Texture2D | null = null;\n  private programManager?: ProgramManager;\n  private shadowMatrices?: Matrix4[];\n\n  constructor(props: LightingEffectProps = {}) {\n    this.setProps(props);\n  }\n\n  setProps(props: LightingEffectProps) {\n    this.ambientLight = null;\n    this.directionalLights = [];\n    this.pointLights = [];\n\n    for (const key in props) {\n      const lightSource = props[key];\n\n      switch (lightSource.type) {\n        case 'ambient':\n          this.ambientLight = lightSource;\n          break;\n\n        case 'directional':\n          this.directionalLights.push(lightSource as DirectionalLight);\n          break;\n\n        case 'point':\n          this.pointLights.push(lightSource as PointLight);\n          break;\n        default:\n      }\n    }\n    this._applyDefaultLights();\n\n    this.shadow = this.directionalLights.some(light => light.shadow);\n    this.props = props;\n  }\n\n  preRender(\n    gl: WebGLRenderingContext,\n    {layers, layerFilter, viewports, onViewportActive, views}: PreRenderOptions\n  ) {\n    if (!this.shadow) return;\n\n    // create light matrix every frame to make sure always updated from light source\n    this.shadowMatrices = this._calculateMatrices();\n\n    if (this.shadowPasses.length === 0) {\n      this._createShadowPasses(gl);\n    }\n    if (!this.programManager) {\n      // TODO - support multiple contexts\n      this.programManager = ProgramManager.getDefaultProgramManager(gl);\n      if (shadow) {\n        this.programManager.addDefaultModule(shadow);\n      }\n    }\n\n    if (!this.dummyShadowMap) {\n      this.dummyShadowMap = new Texture2D(gl, {\n        width: 1,\n        height: 1\n      });\n    }\n\n    for (let i = 0; i < this.shadowPasses.length; i++) {\n      const shadowPass = this.shadowPasses[i];\n      shadowPass.render({\n        layers,\n        layerFilter,\n        viewports,\n        onViewportActive,\n        views,\n        moduleParameters: {\n          shadowLightId: i,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowMatrices: this.shadowMatrices\n        }\n      });\n    }\n  }\n\n  getModuleParameters(layer: Layer) {\n    const parameters: {\n      lightSources?: {\n        ambientLight: AmbientLight | null;\n        directionalLights: DirectionalLight[];\n        pointLights: PointLight[];\n      };\n      shadowMaps?: Texture2D[];\n      dummyShadowMap?: Texture2D;\n      shadowColor?: number[];\n      shadowMatrices?: Matrix4[];\n    } = this.shadow\n      ? {\n          shadowMaps: this.shadowMaps,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowColor: this.shadowColor,\n          shadowMatrices: this.shadowMatrices\n        }\n      : {};\n\n    // when not rendering to screen, turn off lighting by adding empty light source object\n    // lights shader module relies on the `lightSources` to turn on/off lighting\n    parameters.lightSources = {\n      ambientLight: this.ambientLight,\n      directionalLights: this.directionalLights.map(directionalLight =>\n        directionalLight.getProjectedLight({layer})\n      ),\n      pointLights: this.pointLights.map(pointLight => pointLight.getProjectedLight({layer}))\n    };\n\n    return parameters;\n  }\n\n  cleanup(): void {\n    for (const shadowPass of this.shadowPasses) {\n      shadowPass.delete();\n    }\n    this.shadowPasses.length = 0;\n    this.shadowMaps.length = 0;\n\n    if (this.dummyShadowMap) {\n      this.dummyShadowMap.delete();\n      this.dummyShadowMap = null;\n    }\n\n    if (this.shadow && this.programManager) {\n      this.programManager.removeDefaultModule(shadow);\n      this.programManager = null;\n    }\n  }\n\n  private _calculateMatrices(): Matrix4[] {\n    const lightMatrices: Matrix4[] = [];\n    for (const light of this.directionalLights) {\n      const viewMatrix = new Matrix4().lookAt({\n        eye: new Vector3(light.direction).negate()\n      });\n\n      lightMatrices.push(viewMatrix);\n    }\n    return lightMatrices;\n  }\n\n  private _createShadowPasses(gl: WebGLRenderingContext): void {\n    for (let i = 0; i < this.directionalLights.length; i++) {\n      const shadowPass = new ShadowPass(gl);\n      this.shadowPasses[i] = shadowPass;\n      this.shadowMaps[i] = shadowPass.shadowMap;\n    }\n  }\n\n  private _applyDefaultLights(): void {\n    const {ambientLight, pointLights, directionalLights} = this;\n    if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n      this.ambientLight = new AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS);\n      this.directionalLights.push(\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]),\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1])\n      );\n    }\n  }\n}\n"],"file":"lighting-effect.js"}