{"version":3,"sources":["../../../src/lib/init.ts"],"names":["checkVersion","version","globalThis","DECK_VERSION","existingVersion","deck","VERSION","Error","log","_registerLoggers","register","jsonLoader","ImageLoader","imagebitmap","premultiplyAlpha"],"mappings":";;;;;;;;;;;AAoBA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAMA,SAASA,YAAT,GAAwB;AAGtB,MAAMC,OAAO,GACX,oBAAuB,WAAvB,cAEIC,UAAU,CAACC,YAAX,IAA2B,qBAHjC;AAMA,MAAMC,eAAe,GAAGF,UAAU,CAACG,IAAX,IAAmBH,UAAU,CAACG,IAAX,CAAgBC,OAA3D;;AAEA,MAAIF,eAAe,IAAIA,eAAe,KAAKH,OAA3C,EAAoD;AAClD,UAAM,IAAIM,KAAJ,iDAAmDH,eAAnD,iBAAyEH,OAAzE,EAAN;AACD;;AAED,MAAI,CAACG,eAAL,EAAsB;AACpBI,iBAAIA,GAAJ,CAAQ,CAAR,oBAAsBP,OAAtB;;AAEAC,IAAAA,UAAU,CAACG,IAAX,mCACKH,UAAU,CAACG,IADhB;AAEEC,MAAAA,OAAO,EAAEL,OAFX;AAGEA,MAAAA,OAAO,EAAPA,OAHF;AAIEO,MAAAA,GAAG,EAAHA,YAJF;AAMEC,MAAAA,gBAAgB,EAAEC;AANpB;AASA,+BAAgB,CACdC,mBADc,EAGd,CAACC,mBAAD,EAAc;AAACC,MAAAA,WAAW,EAAE;AAACC,QAAAA,gBAAgB,EAAE;AAAnB;AAAd,KAAd,CAHc,CAAhB;AAKD;;AAED,SAAOb,OAAP;AACD;;AAEM,IAAMK,OAAO,GAAGN,YAAY,EAA5B","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {registerLoaders} from '@loaders.gl/core';\nimport {ImageLoader} from '@loaders.gl/images';\n\nimport log from '../utils/log';\nimport {register} from '../debug';\nimport jsonLoader from '../utils/json-loader';\n\ndeclare global {\n  const __VERSION__: string;\n}\n\nfunction checkVersion() {\n  // Version detection using babel plugin\n  // Fallback for tests and SSR since global variable is defined by Webpack.\n  const version =\n    typeof __VERSION__ !== 'undefined'\n      ? __VERSION__\n      : globalThis.DECK_VERSION || 'untranspiled source';\n\n  // Note: a `deck` object not created by deck.gl may exist in the global scope\n  const existingVersion = globalThis.deck && globalThis.deck.VERSION;\n\n  if (existingVersion && existingVersion !== version) {\n    throw new Error(`deck.gl - multiple versions detected: ${existingVersion} vs ${version}`);\n  }\n\n  if (!existingVersion) {\n    log.log(1, `deck.gl ${version}`)();\n\n    globalThis.deck = {\n      ...globalThis.deck,\n      VERSION: version,\n      version,\n      log,\n      // experimental\n      _registerLoggers: register\n    };\n\n    registerLoaders([\n      jsonLoader,\n      // @ts-expect-error non-standard Loader format\n      [ImageLoader, {imagebitmap: {premultiplyAlpha: 'none'}}]\n    ]);\n  }\n\n  return version;\n}\n\nexport const VERSION = checkVersion();\n"],"file":"init.js"}