{"version":3,"sources":["../../../src/lifecycle/create-props.ts"],"names":["log","isAsyncIterable","parsePropTypes","COMPONENT_SYMBOL","PROP_TYPES_SYMBOL","DEPRECATED_PROPS_SYMBOL","ASYNC_ORIGINAL_SYMBOL","ASYNC_RESOLVED_SYMBOL","ASYNC_DEFAULTS_SYMBOL","createProps","component","propObjects","extensions","i","length","props","propsPrototype","getPropsPrototype","constructor","propsInstance","Object","create","key","freeze","MergedDefaultPropsCacheKey","componentClass","cacheKey","extension","ExtensionClass","extensionName","name","defaultProps","getOwnProperty","createPropsPrototypeAndTypes","parent","prototype","parentClass","getPrototypeOf","parentDefaultProps","componentDefaultProps","componentPropDefs","assign","propTypes","deprecatedProps","extensionDefaultProps","createPropsPrototype","addAsyncPropsToPropPrototype","addDeprecatedPropsToPropPrototype","hasOwnProperty","_propTypes","id","getComponentName","defineProperties","writable","value","propName","defineProperty","enumerable","set","newValue","nameStr","newPropName","deprecated","join","defaultValues","descriptors","propType","async","getDescriptorForAsyncProp","Promise","get","state","internalState","hasAsyncProp","getAsyncProp","object","prop","call","componentName","warn"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAAQC,cAAR,QAA6B,cAA7B;AACA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,uBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,qBANF,QAOO,aAPP;AAYA,OAAO,SAASC,WAAT,CACLC,SADK,EAELC,WAFK,EAG2B;AAEhC,MAAIC,UAAJ;;AACA,OAAK,IAAIC,CAAC,GAAGF,WAAW,CAACG,MAAZ,GAAqB,CAAlC,EAAqCD,CAAC,IAAI,CAA1C,EAA6CA,CAAC,EAA9C,EAAkD;AAChD,UAAME,KAAK,GAAGJ,WAAW,CAACE,CAAD,CAAzB;;AACA,QAAI,gBAAgBE,KAApB,EAA2B;AAEzBH,MAAAA,UAAU,GAAGG,KAAK,CAACH,UAAnB;AACD;AACF;;AAGD,QAAMI,cAAc,GAAGC,iBAAiB,CAACP,SAAS,CAACQ,WAAX,EAAwBN,UAAxB,CAAxC;AAEA,QAAMO,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcL,cAAd,CAAtB;AAGAG,EAAAA,aAAa,CAAChB,gBAAD,CAAb,GAAkCO,SAAlC;AAGAS,EAAAA,aAAa,CAACb,qBAAD,CAAb,GAAuC,EAAvC;AAGAa,EAAAA,aAAa,CAACZ,qBAAD,CAAb,GAAuC,EAAvC;;AAGA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwC,EAAED,CAA1C,EAA6C;AAC3C,UAAME,KAAK,GAAGJ,WAAW,CAACE,CAAD,CAAzB;;AAGA,SAAK,MAAMS,GAAX,IAAkBP,KAAlB,EAAyB;AACvBI,MAAAA,aAAa,CAACG,GAAD,CAAb,GAAqBP,KAAK,CAACO,GAAD,CAA1B;AACD;AACF;;AAGDF,EAAAA,MAAM,CAACG,MAAP,CAAcJ,aAAd;AAEA,SAAOA,aAAP;AACD;AAED,MAAMK,0BAA0B,GAAG,qBAAnC;;AAIA,SAASP,iBAAT,CAA2BQ,cAA3B,EAA2Cb,UAA3C,EAA+D;AAE7D,MAAIc,QAAQ,GAAGF,0BAAf;;AACA,MAAIZ,UAAJ,EAAgB;AACd,SAAK,MAAMe,SAAX,IAAwBf,UAAxB,EAAoC;AAClC,YAAMgB,cAAc,GAAGD,SAAS,CAACT,WAAjC;;AACA,UAAIU,cAAJ,EAAoB;AAClBF,QAAAA,QAAQ,eAAQE,cAAc,CAACC,aAAf,IAAgCD,cAAc,CAACE,IAAvD,CAAR;AACD;AACF;AACF;;AAED,QAAMC,YAAY,GAAGC,cAAc,CAACP,cAAD,EAAiBC,QAAjB,CAAnC;;AACA,MAAI,CAACK,YAAL,EAAmB;AACjB,WAAQN,cAAc,CAACC,QAAD,CAAd,GAA2BO,4BAA4B,CAC7DR,cAD6D,EAE7Db,UAAU,IAAI,EAF+C,CAA/D;AAID;;AACD,SAAOmB,YAAP;AACD;;AAGD,SAASE,4BAAT,CACER,cADF,EAEEb,UAFF,EAG8B;AAC5B,QAAMsB,MAAM,GAAGT,cAAc,CAACU,SAA9B;;AACA,MAAI,CAACD,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,QAAME,WAAW,GAAGhB,MAAM,CAACiB,cAAP,CAAsBZ,cAAtB,CAApB;AACA,QAAMa,kBAAkB,GAAGrB,iBAAiB,CAACmB,WAAD,CAA5C;AAGA,QAAMG,qBAAqB,GAAGP,cAAc,CAACP,cAAD,EAAiB,cAAjB,CAAd,IAAkD,EAAhF;AACA,QAAMe,iBAAiB,GAAGtC,cAAc,CAACqC,qBAAD,CAAxC;AAGA,QAAMR,YAAiB,GAAGX,MAAM,CAACqB,MAAP,CACxBrB,MAAM,CAACC,MAAP,CAAc,IAAd,CADwB,EAExBiB,kBAFwB,EAGxBE,iBAAiB,CAACT,YAHM,CAA1B;AAMA,QAAMW,SAAS,GAAGtB,MAAM,CAACqB,MAAP,CAChBrB,MAAM,CAACC,MAAP,CAAc,IAAd,CADgB,EAEhBiB,kBAFgB,aAEhBA,kBAFgB,uBAEhBA,kBAAkB,CAAGlC,iBAAH,CAFF,EAGhBoC,iBAAiB,CAACE,SAHF,CAAlB;AAMA,QAAMC,eAAe,GAAGvB,MAAM,CAACqB,MAAP,CACtBrB,MAAM,CAACC,MAAP,CAAc,IAAd,CADsB,EAEtBiB,kBAFsB,aAEtBA,kBAFsB,uBAEtBA,kBAAkB,CAAGjC,uBAAH,CAFI,EAGtBmC,iBAAiB,CAACG,eAHI,CAAxB;;AAMA,OAAK,MAAMhB,SAAX,IAAwBf,UAAxB,EAAoC;AAClC,UAAMgC,qBAAqB,GAAG3B,iBAAiB,CAACU,SAAS,CAACT,WAAX,CAA/C;;AACA,QAAI0B,qBAAJ,EAA2B;AACzBxB,MAAAA,MAAM,CAACqB,MAAP,CAAcV,YAAd,EAA4Ba,qBAA5B;AACAxB,MAAAA,MAAM,CAACqB,MAAP,CAAcC,SAAd,EAAyBE,qBAAqB,CAACxC,iBAAD,CAA9C;AACAgB,MAAAA,MAAM,CAACqB,MAAP,CAAcE,eAAd,EAA+BC,qBAAqB,CAACvC,uBAAD,CAApD;AACD;AACF;;AAIDwC,EAAAA,oBAAoB,CAACd,YAAD,EAAeN,cAAf,CAApB;AAGAqB,EAAAA,4BAA4B,CAACf,YAAD,EAAeW,SAAf,CAA5B;AAGAK,EAAAA,iCAAiC,CAAChB,YAAD,EAAeY,eAAf,CAAjC;AAGAZ,EAAAA,YAAY,CAAC3B,iBAAD,CAAZ,GAAkCsC,SAAlC;AACAX,EAAAA,YAAY,CAAC1B,uBAAD,CAAZ,GAAwCsC,eAAxC;;AAIA,MAAI/B,UAAU,CAACE,MAAX,KAAsB,CAAtB,IAA2B,CAACkC,cAAc,CAACvB,cAAD,EAAiB,YAAjB,CAA9C,EAA8E;AAC5EA,IAAAA,cAAc,CAACwB,UAAf,GAA4BP,SAA5B;AACD;;AACD,SAAOX,YAAP;AACD;;AAGD,SAASc,oBAAT,CAA8Bd,YAA9B,EAA4CN,cAA5C,EAA4D;AAE1D,QAAMyB,EAAE,GAAGC,gBAAgB,CAAC1B,cAAD,CAA3B;AAEAL,EAAAA,MAAM,CAACgC,gBAAP,CAAwBrB,YAAxB,EAAsC;AAEpCmB,IAAAA,EAAE,EAAE;AACFG,MAAAA,QAAQ,EAAE,IADR;AAEFC,MAAAA,KAAK,EAAEJ;AAFL;AAFgC,GAAtC;AAOD;;AAED,SAASH,iCAAT,CAA2ChB,YAA3C,EAAyDY,eAAzD,EAA0E;AACxE,OAAK,MAAMY,QAAX,IAAuBZ,eAAvB,EAAwC;AAEtCvB,IAAAA,MAAM,CAACoC,cAAP,CAAsBzB,YAAtB,EAAoCwB,QAApC,EAA8C;AAC5CE,MAAAA,UAAU,EAAE,KADgC;;AAE5CC,MAAAA,GAAG,CAACC,QAAD,EAAW;AACZ,cAAMC,OAAO,aAAM,KAAKV,EAAX,eAAkBK,QAAlB,CAAb;;AAEA,aAAK,MAAMM,WAAX,IAA0BlB,eAAe,CAACY,QAAD,CAAzC,EAAqD;AACnD,cAAI,CAACP,cAAc,CAAC,IAAD,EAAOa,WAAP,CAAnB,EAAwC;AACtC,iBAAKA,WAAL,IAAoBF,QAApB;AACD;AACF;;AAED3D,QAAAA,GAAG,CAAC8D,UAAJ,CAAeF,OAAf,EAAwBjB,eAAe,CAACY,QAAD,CAAf,CAA0BQ,IAA1B,CAA+B,GAA/B,CAAxB;AACD;;AAZ2C,KAA9C;AAeD;AACF;;AAGD,SAASjB,4BAAT,CAAsCf,YAAtC,EAAoDW,SAApD,EAA+D;AAC7D,QAAMsB,aAAa,GAAG,EAAtB;AAEA,QAAMC,WAAW,GAAG,EAApB;;AAGA,OAAK,MAAMV,QAAX,IAAuBb,SAAvB,EAAkC;AAChC,UAAMwB,QAAQ,GAAGxB,SAAS,CAACa,QAAD,CAA1B;AACA,UAAM;AAACzB,MAAAA,IAAD;AAAOwB,MAAAA;AAAP,QAAgBY,QAAtB;;AAGA,QAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBH,MAAAA,aAAa,CAAClC,IAAD,CAAb,GAAsBwB,KAAtB;AACAW,MAAAA,WAAW,CAACnC,IAAD,CAAX,GAAoBsC,yBAAyB,CAACtC,IAAD,CAA7C;AACD;AACF;;AAGDC,EAAAA,YAAY,CAACvB,qBAAD,CAAZ,GAAsCwD,aAAtC;AAEAjC,EAAAA,YAAY,CAACzB,qBAAD,CAAZ,GAAsC,EAAtC;AAEAc,EAAAA,MAAM,CAACgC,gBAAP,CAAwBrB,YAAxB,EAAsCkC,WAAtC;AACD;;AAGD,SAASG,yBAAT,CAAmCtC,IAAnC,EAAyC;AACvC,SAAO;AACL2B,IAAAA,UAAU,EAAE,IADP;;AAGLC,IAAAA,GAAG,CAACC,QAAD,EAAW;AACZ,UACE,OAAOA,QAAP,KAAoB,QAApB,IACAA,QAAQ,YAAYU,OADpB,IAEApE,eAAe,CAAC0D,QAAD,CAHjB,EAIE;AACA,aAAKrD,qBAAL,EAA4BwB,IAA5B,IAAoC6B,QAApC;AACD,OAND,MAMO;AACL,aAAKpD,qBAAL,EAA4BuB,IAA5B,IAAoC6B,QAApC;AACD;AACF,KAbI;;AAeLW,IAAAA,GAAG,GAAG;AACJ,UAAI,KAAK/D,qBAAL,CAAJ,EAAiC;AAE/B,YAAIuB,IAAI,IAAI,KAAKvB,qBAAL,CAAZ,EAAyC;AACvC,gBAAM+C,KAAK,GAAG,KAAK/C,qBAAL,EAA4BuB,IAA5B,CAAd;AAEA,iBAAOwB,KAAK,IAAI,KAAK9C,qBAAL,EAA4BsB,IAA5B,CAAhB;AACD;;AAED,YAAIA,IAAI,IAAI,KAAKxB,qBAAL,CAAZ,EAAyC;AAEvC,gBAAMiE,KAAK,GAAG,KAAKpE,gBAAL,KAA0B,KAAKA,gBAAL,EAAuBqE,aAA/D;;AACA,cAAID,KAAK,IAAIA,KAAK,CAACE,YAAN,CAAmB3C,IAAnB,CAAb,EAAuC;AACrC,mBAAOyC,KAAK,CAACG,YAAN,CAAmB5C,IAAnB,KAA4B,KAAKtB,qBAAL,EAA4BsB,IAA5B,CAAnC;AACD;AACF;AACF;;AAID,aAAO,KAAKtB,qBAAL,EAA4BsB,IAA5B,CAAP;AACD;;AApCI,GAAP;AAsCD;;AAID,SAASkB,cAAT,CAAwB2B,MAAxB,EAAgCC,IAAhC,EAAsC;AACpC,SAAOxD,MAAM,CAACe,SAAP,CAAiBa,cAAjB,CAAgC6B,IAAhC,CAAqCF,MAArC,EAA6CC,IAA7C,CAAP;AACD;;AAGD,SAAS5C,cAAT,CAAwB2C,MAAxB,EAAgCC,IAAhC,EAAsC;AACpC,SAAO5B,cAAc,CAAC2B,MAAD,EAASC,IAAT,CAAd,IAAgCD,MAAM,CAACC,IAAD,CAA7C;AACD;;AAED,SAASzB,gBAAT,CAA0B1B,cAA1B,EAA0C;AACxC,QAAMqD,aAAa,GAAGrD,cAAc,CAACqD,aAArC;;AACA,MAAI,CAACA,aAAL,EAAoB;AAClB9E,IAAAA,GAAG,CAAC+E,IAAJ,WAAYtD,cAAc,CAACK,IAA3B;AACD;;AACD,SAAOgD,aAAa,IAAIrD,cAAc,CAACK,IAAvC;AACD","sourcesContent":["import log from '../utils/log';\nimport {isAsyncIterable} from '../utils/iterable-utils';\nimport {parsePropTypes} from './prop-types';\nimport {\n  COMPONENT_SYMBOL,\n  PROP_TYPES_SYMBOL,\n  DEPRECATED_PROPS_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport {StatefulComponentProps} from './component';\nimport type Component from './component';\n\n// Create a property object\nexport function createProps<PropsT extends {}>(\n  component: Component<PropsT>,\n  propObjects: Partial<PropsT>[]\n): StatefulComponentProps<PropsT> {\n  // Resolve extension value\n  let extensions: any[] | undefined;\n  for (let i = propObjects.length - 1; i >= 0; i--) {\n    const props = propObjects[i];\n    if ('extensions' in props) {\n      // @ts-expect-error TS(2339) extensions not defined\n      extensions = props.extensions;\n    }\n  }\n\n  // Create a new prop object with empty default props object\n  const propsPrototype = getPropsPrototype(component.constructor, extensions);\n  // The true default props object will be found later\n  const propsInstance = Object.create(propsPrototype);\n\n  // Props need a back pointer to the owning component\n  propsInstance[COMPONENT_SYMBOL] = component;\n  // The supplied (original) values for those async props that are set to url strings or Promises.\n  // In this case, the actual (i.e. resolved) values are looked up from component.internalState\n  propsInstance[ASYNC_ORIGINAL_SYMBOL] = {};\n  // Note: the actual (resolved) values for props that are NOT set to urls or Promises.\n  // in this case the values are served directly from this map\n  propsInstance[ASYNC_RESOLVED_SYMBOL] = {};\n\n  // \"Copy\" all sync props\n  for (let i = 0; i < propObjects.length; ++i) {\n    const props = propObjects[i];\n    // Do not use Object.assign here to avoid Symbols in props overwriting our private fields\n    // This might happen if one of the arguments is another props instance\n    for (const key in props) {\n      propsInstance[key] = props[key];\n    }\n  }\n\n  // Props must be immutable\n  Object.freeze(propsInstance);\n\n  return propsInstance;\n}\n\nconst MergedDefaultPropsCacheKey = '_mergedDefaultProps';\n\n// Return precalculated defaultProps and propType objects if available\n// build them if needed\nfunction getPropsPrototype(componentClass, extensions?: any[]) {\n  // A string that uniquely identifies the extensions involved\n  let cacheKey = MergedDefaultPropsCacheKey;\n  if (extensions) {\n    for (const extension of extensions) {\n      const ExtensionClass = extension.constructor;\n      if (ExtensionClass) {\n        cacheKey += `:${ExtensionClass.extensionName || ExtensionClass.name}`;\n      }\n    }\n  }\n\n  const defaultProps = getOwnProperty(componentClass, cacheKey);\n  if (!defaultProps) {\n    return (componentClass[cacheKey] = createPropsPrototypeAndTypes(\n      componentClass,\n      extensions || []\n    ));\n  }\n  return defaultProps;\n}\n\n// Build defaultProps and propType objects by walking component prototype chain\nfunction createPropsPrototypeAndTypes(\n  componentClass,\n  extensions: any[]\n): Record<string, any> | null {\n  const parent = componentClass.prototype;\n  if (!parent) {\n    return null;\n  }\n\n  const parentClass = Object.getPrototypeOf(componentClass);\n  const parentDefaultProps = getPropsPrototype(parentClass);\n\n  // Parse propTypes from Component.defaultProps\n  const componentDefaultProps = getOwnProperty(componentClass, 'defaultProps') || {};\n  const componentPropDefs = parsePropTypes(componentDefaultProps);\n\n  // Merged default props object. Order: parent, self, extensions\n  const defaultProps: any = Object.assign(\n    Object.create(null),\n    parentDefaultProps,\n    componentPropDefs.defaultProps\n  );\n  // Merged prop type definitions. Order: parent, self, extensions\n  const propTypes = Object.assign(\n    Object.create(null),\n    parentDefaultProps?.[PROP_TYPES_SYMBOL],\n    componentPropDefs.propTypes\n  );\n  // Merged deprecation list. Order: parent, self, extensions\n  const deprecatedProps = Object.assign(\n    Object.create(null),\n    parentDefaultProps?.[DEPRECATED_PROPS_SYMBOL],\n    componentPropDefs.deprecatedProps\n  );\n\n  for (const extension of extensions) {\n    const extensionDefaultProps = getPropsPrototype(extension.constructor);\n    if (extensionDefaultProps) {\n      Object.assign(defaultProps, extensionDefaultProps);\n      Object.assign(propTypes, extensionDefaultProps[PROP_TYPES_SYMBOL]);\n      Object.assign(deprecatedProps, extensionDefaultProps[DEPRECATED_PROPS_SYMBOL]);\n    }\n  }\n\n  // Create any necessary property descriptors and create the default prop object\n  // Assign merged default props\n  createPropsPrototype(defaultProps, componentClass);\n\n  // Add getters/setters for async props\n  addAsyncPropsToPropPrototype(defaultProps, propTypes);\n\n  // Add setters for deprecated props\n  addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps);\n\n  // Store the precalculated props\n  defaultProps[PROP_TYPES_SYMBOL] = propTypes;\n  defaultProps[DEPRECATED_PROPS_SYMBOL] = deprecatedProps;\n\n  // Backwards compatibility\n  // TODO: remove access of hidden property from the rest of the code base\n  if (extensions.length === 0 && !hasOwnProperty(componentClass, '_propTypes')) {\n    componentClass._propTypes = propTypes;\n  }\n  return defaultProps;\n}\n\n// Builds a pre-merged default props object that component props can inherit from\nfunction createPropsPrototype(defaultProps, componentClass) {\n  // Avoid freezing `id` prop\n  const id = getComponentName(componentClass);\n\n  Object.defineProperties(defaultProps, {\n    // `id` is treated specially because layer might need to override it\n    id: {\n      writable: true,\n      value: id\n    }\n  });\n}\n\nfunction addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps) {\n  for (const propName in deprecatedProps) {\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(defaultProps, propName, {\n      enumerable: false,\n      set(newValue) {\n        const nameStr = `${this.id}: ${propName}`;\n\n        for (const newPropName of deprecatedProps[propName]) {\n          if (!hasOwnProperty(this, newPropName)) {\n            this[newPropName] = newValue;\n          }\n        }\n\n        log.deprecated(nameStr, deprecatedProps[propName].join('/'))();\n      }\n    });\n    /* eslint-enable accessor-pairs */\n  }\n}\n\n// Create descriptors for overridable props\nfunction addAsyncPropsToPropPrototype(defaultProps, propTypes) {\n  const defaultValues = {};\n\n  const descriptors = {};\n\n  // Move async props into shadow values\n  for (const propName in propTypes) {\n    const propType = propTypes[propName];\n    const {name, value} = propType;\n\n    // Note: async is ES7 keyword, can't destructure\n    if (propType.async) {\n      defaultValues[name] = value;\n      descriptors[name] = getDescriptorForAsyncProp(name);\n    }\n  }\n\n  // Default \"resolved\" values for async props, returned if value not yet resolved/set.\n  defaultProps[ASYNC_DEFAULTS_SYMBOL] = defaultValues;\n  // Shadowed object, just to make sure \"early indexing\" into the instance does not fail\n  defaultProps[ASYNC_ORIGINAL_SYMBOL] = {};\n\n  Object.defineProperties(defaultProps, descriptors);\n}\n\n// Helper: Configures getter and setter for one async prop\nfunction getDescriptorForAsyncProp(name) {\n  return {\n    enumerable: true,\n    // Save the provided value for async props in a special map\n    set(newValue) {\n      if (\n        typeof newValue === 'string' ||\n        newValue instanceof Promise ||\n        isAsyncIterable(newValue)\n      ) {\n        this[ASYNC_ORIGINAL_SYMBOL][name] = newValue;\n      } else {\n        this[ASYNC_RESOLVED_SYMBOL][name] = newValue;\n      }\n    },\n    // Only the component's state knows the true value of async prop\n    get() {\n      if (this[ASYNC_RESOLVED_SYMBOL]) {\n        // Prop value isn't async, so just return it\n        if (name in this[ASYNC_RESOLVED_SYMBOL]) {\n          const value = this[ASYNC_RESOLVED_SYMBOL][name];\n\n          return value || this[ASYNC_DEFAULTS_SYMBOL][name];\n        }\n\n        if (name in this[ASYNC_ORIGINAL_SYMBOL]) {\n          // It's an async prop value: look into component state\n          const state = this[COMPONENT_SYMBOL] && this[COMPONENT_SYMBOL].internalState;\n          if (state && state.hasAsyncProp(name)) {\n            return state.getAsyncProp(name) || this[ASYNC_DEFAULTS_SYMBOL][name];\n          }\n        }\n      }\n\n      // the prop is not supplied, or\n      // component not yet initialized/matched, return the component's default value for the prop\n      return this[ASYNC_DEFAULTS_SYMBOL][name];\n    }\n  };\n}\n\n// HELPER METHODS\n\nfunction hasOwnProperty(object, prop) {\n  return Object.prototype.hasOwnProperty.call(object, prop);\n}\n\n// Constructors have their super class constructors as prototypes\nfunction getOwnProperty(object, prop) {\n  return hasOwnProperty(object, prop) && object[prop];\n}\n\nfunction getComponentName(componentClass) {\n  const componentName = componentClass.componentName;\n  if (!componentName) {\n    log.warn(`${componentClass.name}.componentName not specified`)();\n  }\n  return componentName || componentClass.name;\n}\n"],"file":"create-props.js"}