{"version":3,"sources":["../../../src/lifecycle/component.ts"],"names":["COMPONENT_SYMBOL","PROP_TYPES_SYMBOL","ASYNC_ORIGINAL_SYMBOL","ASYNC_RESOLVED_SYMBOL","ASYNC_DEFAULTS_SYMBOL","createProps","counter","Component","constructor","propObjects","props","id","count","clone","newProps","asyncProps","key"],"mappings":";AAAA,SACEA,gBADF,EAEEC,iBAFF,EAGEC,qBAHF,EAIEC,qBAJF,EAKEC,qBALF,QAMO,aANP;AAQA,SAAQC,WAAR,QAA0B,gBAA1B;AAEA,IAAIC,OAAO,GAAG,CAAd;AAWA,eAAe,MAAMC,SAAN,CAAwC;AAQrDC,EAAAA,WAAW,CAAC,GAAGC,WAAJ,EAAoC;AAAA;;AAAA;;AAAA;;AAG7C,SAAKC,KAAL,GAAaL,WAAW,CAAS,IAAT,EAAeI,WAAf,CAAxB;AAGA,SAAKE,EAAL,GAAU,KAAKD,KAAL,CAAWC,EAArB;AACA,SAAKC,KAAL,GAAaN,OAAO,EAApB;AACD;;AAGDO,EAAAA,KAAK,CAACC,QAAD,EAA4B;AAC/B,UAAM;AAACJ,MAAAA;AAAD,QAAU,IAAhB;AAGA,UAAMK,UAA2B,GAAG,EAApC;;AAGA,SAAK,MAAMC,GAAX,IAAkBN,KAAK,CAACN,qBAAD,CAAvB,EAAgD;AAC9C,UAAIY,GAAG,IAAIN,KAAK,CAACP,qBAAD,CAAhB,EAAyC;AACvCY,QAAAA,UAAU,CAACC,GAAD,CAAV,GAAkBN,KAAK,CAACP,qBAAD,CAAL,CAA6Ba,GAA7B,CAAlB;AACD,OAFD,MAEO,IAAIA,GAAG,IAAIN,KAAK,CAACR,qBAAD,CAAhB,EAAyC;AAC9Ca,QAAAA,UAAU,CAACC,GAAD,CAAV,GAAkBN,KAAK,CAACR,qBAAD,CAAL,CAA6Bc,GAA7B,CAAlB;AACD;AACF;;AAID,WAAO,IAAI,KAAKR,WAAT,CAAqB,EAAC,GAAGE,KAAJ;AAAW,SAAGK,UAAd;AAA0B,SAAGD;AAA7B,KAArB,CAAP;AACD;;AArCoD;;gBAAlCP,S,mBACY,W;;gBADZA,S,kBAEiB,E","sourcesContent":["import {\n  COMPONENT_SYMBOL,\n  PROP_TYPES_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport {PropType} from './prop-types';\nimport {createProps} from './create-props';\n\nlet counter = 0;\n\nexport type StatefulComponentProps<PropsT extends {}> = PropsT & {\n  id: string;\n  [COMPONENT_SYMBOL]: Component<PropsT>;\n  [PROP_TYPES_SYMBOL]: Record<string, PropType>;\n  [ASYNC_DEFAULTS_SYMBOL]: Partial<PropsT>;\n  [ASYNC_ORIGINAL_SYMBOL]: Partial<PropsT>;\n  [ASYNC_RESOLVED_SYMBOL]: Partial<PropsT>;\n};\n\nexport default class Component<PropsT extends {} = {}> {\n  static componentName: string = 'Component';\n  static defaultProps: Readonly<{}> = {};\n\n  id: string;\n  props: StatefulComponentProps<PropsT>;\n  count: number;\n\n  constructor(...propObjects: Partial<PropsT>[]) {\n    // Merge supplied props with default props and freeze them.\n    /* eslint-disable prefer-spread */\n    this.props = createProps<PropsT>(this, propObjects);\n    /* eslint-enable prefer-spread */\n\n    this.id = this.props.id; // The layer's id, used for matching with layers from last render cycle\n    this.count = counter++; // Keep track of how many layer instances you are generating\n  }\n\n  // clone this layer with modified props\n  clone(newProps: Partial<PropsT>) {\n    const {props} = this;\n\n    // Async props cannot be copied with Object.assign, copy them separately\n    const asyncProps: Partial<PropsT> = {};\n\n    // See async props definition in create-props.js\n    for (const key in props[ASYNC_DEFAULTS_SYMBOL]) {\n      if (key in props[ASYNC_RESOLVED_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_RESOLVED_SYMBOL][key];\n      } else if (key in props[ASYNC_ORIGINAL_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_ORIGINAL_SYMBOL][key];\n      }\n    }\n\n    // Some custom layer implementation may not support multiple arguments in the constructor\n    // @ts-ignore\n    return new this.constructor({...props, ...asyncProps, ...newProps});\n  }\n}\n"],"file":"component.js"}