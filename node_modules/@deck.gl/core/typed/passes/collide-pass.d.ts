import { Framebuffer, Renderbuffer, Texture2D } from '@luma.gl/core';
import LayersPass from './layers-pass';
import type { LayersPassRenderOptions } from './layers-pass';
declare type CollidePassRenderOptions = LayersPassRenderOptions & {};
export default class CollidePass extends LayersPass {
    collideMap: Texture2D;
    depthBuffer: Renderbuffer;
    dummyCollideMap: Texture2D;
    fbo: Framebuffer;
    constructor(gl: any, props: {
        id: string;
        dummyCollideMap: Texture2D;
    });
    render(options: CollidePassRenderOptions): any;
    shouldDrawLayer(layer: any): boolean;
    getModuleParameters(): {
        drawToCollideMap: boolean;
        dummyCollideMap: any;
        pickingActive: number;
        pickingAttribute: boolean;
        lightSources: {};
    };
    delete(): void;
}
export {};
//# sourceMappingURL=collide-pass.d.ts.map