{"version":3,"sources":["../../../src/terrain/utils.ts"],"names":["Framebuffer","Texture2D","isWebGL2","createRenderTarget","gl","opts","id","attachments","float","format","type","mipmaps","parameters"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,eAA/C;AAGA,OAAO,SAASC,kBAAT,CACLC,EADK,EAELC,IAFK,EAML;AACA,SAAO,IAAIL,WAAJ,CAAgBI,EAAhB,EAAoB;AACzBE,IAAAA,EAAE,EAAED,IAAI,CAACC,EADgB;AAEzBC,IAAAA,WAAW,EAAE;AACX,eAAwB,IAAIN,SAAJ,CAAcG,EAAd,EAAkB,EACxC,IAAIC,IAAI,CAACG,KAAL,IAAc;AAChBC,UAAAA,MAAM,EAAEP,QAAQ,CAACE,EAAD,CAAR,eADQ;AAEhBM,UAAAA,IAAI;AAFY,SAAlB,CADwC;AAKxCC,QAAAA,OAAO,EAAE,KAL+B;AAMxCC,QAAAA,UAAU,EAAE;AACV,uBADU;AAEV,uBAFU;AAGV,wBAHU;AAIV;AAJU;AAN4B,OAAlB;AADb;AAFY,GAApB,CAAP;AAkBD","sourcesContent":["import {Framebuffer, Texture2D, isWebGL2} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nexport function createRenderTarget(\n  gl: WebGLRenderingContext,\n  opts: {\n    id: string;\n    float?: boolean;\n  }\n) {\n  return new Framebuffer(gl, {\n    id: opts.id,\n    attachments: {\n      [gl.COLOR_ATTACHMENT0]: new Texture2D(gl, {\n        ...(opts.float && {\n          format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n          type: GL.FLOAT\n        }),\n        mipmaps: false,\n        parameters: {\n          [gl.TEXTURE_MIN_FILTER]: gl.LINEAR,\n          [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n          [gl.TEXTURE_WRAP_S]: gl.CLAMP_TO_EDGE,\n          [gl.TEXTURE_WRAP_T]: gl.CLAMP_TO_EDGE\n        }\n      })\n    }\n  });\n}\n"],"file":"utils.js"}