{"version":3,"sources":["../../../src/terrain/utils.ts"],"names":["createRenderTarget","gl","opts","Framebuffer","id","attachments","Texture2D","float","format","type","mipmaps","parameters"],"mappings":";;;;;;;;;;;AAAA;;;;;;AAGO,SAASA,kBAAT,CACLC,EADK,EAELC,IAFK,EAML;AAAA;;AACA,SAAO,IAAIC,iBAAJ,CAAgBF,EAAhB,EAAoB;AACzBG,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADgB;AAEzBC,IAAAA,WAAW,2CACe,IAAIC,eAAJ,CAAcL,EAAd,kCAClBC,IAAI,CAACK,KAAL,IAAc;AAChBC,MAAAA,MAAM,EAAE,oBAASP,EAAT,gBADQ;AAEhBQ,MAAAA,IAAI;AAFY,KADI;AAKtBC,MAAAA,OAAO,EAAE,KALa;AAMtBC,MAAAA,UAAU;AANY,OADf;AAFc,GAApB,CAAP;AAkBD","sourcesContent":["import {Framebuffer, Texture2D, isWebGL2} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nexport function createRenderTarget(\n  gl: WebGLRenderingContext,\n  opts: {\n    id: string;\n    float?: boolean;\n  }\n) {\n  return new Framebuffer(gl, {\n    id: opts.id,\n    attachments: {\n      [gl.COLOR_ATTACHMENT0]: new Texture2D(gl, {\n        ...(opts.float && {\n          format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n          type: GL.FLOAT\n        }),\n        mipmaps: false,\n        parameters: {\n          [gl.TEXTURE_MIN_FILTER]: gl.LINEAR,\n          [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n          [gl.TEXTURE_WRAP_S]: gl.CLAMP_TO_EDGE,\n          [gl.TEXTURE_WRAP_T]: gl.CLAMP_TO_EDGE\n        }\n      })\n    }\n  });\n}\n"],"file":"utils.js"}