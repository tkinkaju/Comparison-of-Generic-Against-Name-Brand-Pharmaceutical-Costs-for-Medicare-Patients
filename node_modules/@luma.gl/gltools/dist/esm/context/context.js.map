{"version":3,"sources":["../../../src/context/context.js"],"names":["isBrowser","getIsBrowser","trackContextState","log","assert","getDevicePixelRatio","isWebGL2","isPage","document","CONTEXT_DEFAULTS","webgl2","webgl1","throwOnError","manageState","canvas","debug","width","height","createGLContext","options","Object","assign","onError","message","Error","console","error","gl","targetCanvas","getCanvas","createBrowserContext","instrumentGLContext","logInfo","_instrumented","_version","getVersion","luma","canvasSizeInfo","copyState","args","globalThis","makeDebugContext","warn","level","Math","max","getContextDebugInfo","vendorMasked","getParameter","rendererMasked","ext","getExtension","vendorUnmasked","UNMASKED_VENDOR_WEBGL","rendererUnmasked","UNMASKED_RENDERER_WEBGL","vendor","renderer","version","shadingLanguageVersion","resizeGLContext","devicePixelRatio","useDevicePixels","setDevicePixelRatio","resize","errorMessage","onCreateError","statusMessage","addEventListener","getContext","removeEventListener","onContextLost","onContextRestored","isPageLoaded","readyState","getElementById","createElement","id","style","Number","isFinite","body","insertBefore","firstChild","webGL","info","driver","WebGL2RenderingContext","clientWidth","clientHeight","cachedSize","clampedPixelRatio","canvasWidth","floor","canvasHeight","drawingBufferWidth","drawingBufferHeight","min"],"mappings":"AAMA,SAAQA,SAAS,IAAIC,YAArB,QAAwC,eAAxC;AACA,SAAQC,iBAAR,QAAgC,sCAAhC;AAEA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAAQC,mBAAR,QAAkC,wBAAlC;AACA,SAAQC,QAAR,QAAuB,uBAAvB;AAEA,MAAMN,SAAS,GAAGC,YAAY,EAA9B;AACA,MAAMM,MAAM,GAAGP,SAAS,IAAI,OAAOQ,QAAP,KAAoB,WAAhD;AAEA,MAAMC,gBAAgB,GAAG;AAGvBC,EAAAA,MAAM,EAAE,IAHe;AAIvBC,EAAAA,MAAM,EAAE,IAJe;AAKvBC,EAAAA,YAAY,EAAE,IALS;AAMvBC,EAAAA,WAAW,EAAE,IANU;AAQvBC,EAAAA,MAAM,EAAE,IARe;AASvBC,EAAAA,KAAK,EAAE,KATgB;AAWvBC,EAAAA,KAAK,EAAE,GAXgB;AAYvBC,EAAAA,MAAM,EAAE;AAZe,CAAzB;AAsBA,OAAO,SAASC,eAAT,GAAuC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAC5Cf,EAAAA,MAAM,CACJJ,SADI,EAEJ,0IAFI,CAAN;AAKAmB,EAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,gBAAlB,EAAoCU,OAApC,CAAV;AACA,QAAM;AAACH,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAkBE,OAAxB;;AAGA,WAASG,OAAT,CAAiBC,OAAjB,EAA0B;AACxB,QAAIJ,OAAO,CAACP,YAAZ,EAA0B;AACxB,YAAM,IAAIY,KAAJ,CAAUD,OAAV,CAAN;AACD;;AAEDE,IAAAA,OAAO,CAACC,KAAR,CAAcH,OAAd;AACA,WAAO,IAAP;AACD;;AACDJ,EAAAA,OAAO,CAACG,OAAR,GAAkBA,OAAlB;AAEA,MAAIK,EAAJ;AAEA,QAAM;AAACb,IAAAA;AAAD,MAAWK,OAAjB;AACA,QAAMS,YAAY,GAAGC,SAAS,CAAC;AAACf,IAAAA,MAAD;AAASE,IAAAA,KAAT;AAAgBC,IAAAA,MAAhB;AAAwBK,IAAAA;AAAxB,GAAD,CAA9B;AAEAK,EAAAA,EAAE,GAAGG,oBAAoB,CAACF,YAAD,EAAeT,OAAf,CAAzB;;AAEA,MAAI,CAACQ,EAAL,EAAS;AACP,WAAO,IAAP;AACD;;AAEDA,EAAAA,EAAE,GAAGI,mBAAmB,CAACJ,EAAD,EAAKR,OAAL,CAAxB;AAGAa,EAAAA,OAAO,CAACL,EAAD,CAAP;AAGA,SAAOA,EAAP;AACD;AAMD,OAAO,SAASI,mBAAT,CAA6BJ,EAA7B,EAA+C;AAAA,MAAdR,OAAc,uEAAJ,EAAI;;AAGpD,MAAI,CAACQ,EAAD,IAAOA,EAAE,CAACM,aAAd,EAA6B;AAC3B,WAAON,EAAP;AACD;;AAGDA,EAAAA,EAAE,CAACO,QAAH,GAAcP,EAAE,CAACO,QAAH,IAAeC,UAAU,CAACR,EAAD,CAAvC;AAIAA,EAAAA,EAAE,CAACS,IAAH,GAAUT,EAAE,CAACS,IAAH,IAAW,EAArB;AAEAT,EAAAA,EAAE,CAACS,IAAH,CAAQC,cAAR,GAAyBV,EAAE,CAACS,IAAH,CAAQC,cAAR,IAA0B,EAAnD;AAEAlB,EAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,gBAAlB,EAAoCU,OAApC,CAAV;AACA,QAAM;AAACN,IAAAA,WAAD;AAAcE,IAAAA;AAAd,MAAuBI,OAA7B;;AAGA,MAAIN,WAAJ,EAAiB;AACfX,IAAAA,iBAAiB,CAACyB,EAAD,EAAK;AACpBW,MAAAA,SAAS,EAAE,KADS;AAEpBnC,MAAAA,GAAG,EAAE;AAAA,0CAAIoC,IAAJ;AAAIA,UAAAA,IAAJ;AAAA;;AAAA,eAAapC,GAAG,CAACA,GAAJ,CAAQ,CAAR,EAAW,GAAGoC,IAAd,GAAb;AAAA;AAFe,KAAL,CAAjB;AAID;;AAGD,MAAIvC,SAAS,IAAIe,KAAjB,EAAwB;AAEtB,QAAI,CAACyB,UAAU,CAACC,gBAAhB,EAAkC;AAChCtC,MAAAA,GAAG,CAACuC,IAAJ,CAAS,oEAAT;AACD,KAFD,MAEO;AAELf,MAAAA,EAAE,GAAGa,UAAU,CAACC,gBAAX,CAA4Bd,EAA5B,EAAgCR,OAAhC,CAAL;AAEAhB,MAAAA,GAAG,CAACwC,KAAJ,GAAYC,IAAI,CAACC,GAAL,CAAS1C,GAAG,CAACwC,KAAb,EAAoB,CAApB,CAAZ;AACD;AACF;;AAGDhB,EAAAA,EAAE,CAACM,aAAH,GAAmB,IAAnB;AAEA,SAAON,EAAP;AACD;AAMD,OAAO,SAASmB,mBAAT,CAA6BnB,EAA7B,EAAiC;AACtC,QAAMoB,YAAY,GAAGpB,EAAE,CAACqB,YAAH,MAArB;AACA,QAAMC,cAAc,GAAGtB,EAAE,CAACqB,YAAH,MAAvB;AACA,QAAME,GAAG,GAAGvB,EAAE,CAACwB,YAAH,CAAgB,2BAAhB,CAAZ;AACA,QAAMC,cAAc,GAAGF,GAAG,IAAIvB,EAAE,CAACqB,YAAH,CAAgBE,GAAG,CAACG,qBAAJ,QAAhB,CAA9B;AACA,QAAMC,gBAAgB,GAAGJ,GAAG,IAAIvB,EAAE,CAACqB,YAAH,CAAgBE,GAAG,CAACK,uBAAJ,QAAhB,CAAhC;AACA,SAAO;AACLC,IAAAA,MAAM,EAAEJ,cAAc,IAAIL,YADrB;AAELU,IAAAA,QAAQ,EAAEH,gBAAgB,IAAIL,cAFzB;AAGLF,IAAAA,YAHK;AAILE,IAAAA,cAJK;AAKLS,IAAAA,OAAO,EAAE/B,EAAE,CAACqB,YAAH,MALJ;AAMLW,IAAAA,sBAAsB,EAAEhC,EAAE,CAACqB,YAAH;AANnB,GAAP;AAQD;AAMD,OAAO,SAASY,eAAT,CAAyBjC,EAAzB,EAA2C;AAAA,MAAdR,OAAc,uEAAJ,EAAI;;AAEhD,MAAIQ,EAAE,CAACb,MAAP,EAAe;AACb,UAAM+C,gBAAgB,GAAGxD,mBAAmB,CAACc,OAAO,CAAC2C,eAAT,CAA5C;AACAC,IAAAA,mBAAmB,CAACpC,EAAD,EAAKkC,gBAAL,EAAuB1C,OAAvB,CAAnB;AACA;AACD;;AAGD,QAAM+B,GAAG,GAAGvB,EAAE,CAACwB,YAAH,CAAgB,8BAAhB,CAAZ;;AACA,MAAID,GAAG,IAAI,WAAW/B,OAAlB,IAA6B,YAAYA,OAA7C,EAAsD;AACpD+B,IAAAA,GAAG,CAACc,MAAJ,CAAW7C,OAAO,CAACH,KAAnB,EAA0BG,OAAO,CAACF,MAAlC;AACD;AACF;;AASD,SAASa,oBAAT,CAA8BhB,MAA9B,EAAsCK,OAAtC,EAA+C;AAC7C,QAAM;AAACG,IAAAA;AAAD,MAAYH,OAAlB;AAGA,MAAI8C,YAAY,GAAG,IAAnB;;AACA,QAAMC,aAAa,GAAGxC,KAAK,IAAKuC,YAAY,GAAGvC,KAAK,CAACyC,aAAN,IAAuBF,YAAtE;;AACAnD,EAAAA,MAAM,CAACsD,gBAAP,CAAwB,2BAAxB,EAAqDF,aAArD,EAAoE,KAApE;AAEA,QAAM;AAACvD,IAAAA,MAAM,GAAG,IAAV;AAAgBD,IAAAA,MAAM,GAAG;AAAzB,MAAiCS,OAAvC;AACA,MAAIQ,EAAE,GAAG,IAAT;;AAEA,MAAIjB,MAAJ,EAAY;AACViB,IAAAA,EAAE,GAAGA,EAAE,IAAIb,MAAM,CAACuD,UAAP,CAAkB,QAAlB,EAA4BlD,OAA5B,CAAX;AACAQ,IAAAA,EAAE,GAAGA,EAAE,IAAIb,MAAM,CAACuD,UAAP,CAAkB,qBAAlB,EAAyClD,OAAzC,CAAX;AACD;;AACD,MAAIR,MAAJ,EAAY;AACVgB,IAAAA,EAAE,GAAGA,EAAE,IAAIb,MAAM,CAACuD,UAAP,CAAkB,OAAlB,EAA2BlD,OAA3B,CAAX;AACAQ,IAAAA,EAAE,GAAGA,EAAE,IAAIb,MAAM,CAACuD,UAAP,CAAkB,oBAAlB,EAAwClD,OAAxC,CAAX;AACD;;AAEDL,EAAAA,MAAM,CAACwD,mBAAP,CAA2B,2BAA3B,EAAwDJ,aAAxD,EAAuE,KAAvE;;AAEA,MAAI,CAACvC,EAAL,EAAS;AACP,WAAOL,OAAO,4BACQZ,MAAM,IAAI,CAACC,MAAX,GAAoB,QAApB,GAA+B,OADvC,uBAC2DsD,YAAY,IACjF,eAFU,EAAd;AAID;;AAED,MAAI9C,OAAO,CAACoD,aAAZ,EAA2B;AACzBzD,IAAAA,MAAM,CAACsD,gBAAP,CAAwB,kBAAxB,EAA4CjD,OAAO,CAACoD,aAApD,EAAmE,KAAnE;AACD;;AAED,MAAIpD,OAAO,CAACqD,iBAAZ,EAA+B;AAC7B1D,IAAAA,MAAM,CAACsD,gBAAP,CAAwB,sBAAxB,EAAgDjD,OAAO,CAACqD,iBAAxD,EAA2E,KAA3E;AACD;;AAED,SAAO7C,EAAP;AACD;;AAED,SAASE,SAAT,OAAiE;AAAA,MAA9C;AAACf,IAAAA,MAAD;AAASE,IAAAA,KAAK,GAAG,GAAjB;AAAsBC,IAAAA,MAAM,GAAG,GAA/B;AAAoCK,IAAAA;AAApC,GAA8C;AAC/D,MAAIM,YAAJ;;AACA,MAAI,OAAOd,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,UAAM2D,YAAY,GAAGlE,MAAM,IAAIC,QAAQ,CAACkE,UAAT,KAAwB,UAAvD;;AACA,QAAI,CAACD,YAAL,EAAmB;AACjBnD,MAAAA,OAAO,6CAAsCR,MAAtC,8BAAP;AACD;;AACDc,IAAAA,YAAY,GAAGpB,QAAQ,CAACmE,cAAT,CAAwB7D,MAAxB,CAAf;AACD,GAND,MAMO,IAAIA,MAAJ,EAAY;AACjBc,IAAAA,YAAY,GAAGd,MAAf;AACD,GAFM,MAEA;AACLc,IAAAA,YAAY,GAAGpB,QAAQ,CAACoE,aAAT,CAAuB,QAAvB,CAAf;AACAhD,IAAAA,YAAY,CAACiD,EAAb,GAAkB,eAAlB;AACAjD,IAAAA,YAAY,CAACkD,KAAb,CAAmB9D,KAAnB,GAA2B+D,MAAM,CAACC,QAAP,CAAgBhE,KAAhB,cAA4BA,KAA5B,UAAwC,MAAnE;AACAY,IAAAA,YAAY,CAACkD,KAAb,CAAmB7D,MAAnB,GAA4B8D,MAAM,CAACC,QAAP,CAAgB/D,MAAhB,cAA6BA,MAA7B,UAA0C,MAAtE;AACAT,IAAAA,QAAQ,CAACyE,IAAT,CAAcC,YAAd,CAA2BtD,YAA3B,EAAyCpB,QAAQ,CAACyE,IAAT,CAAcE,UAAvD;AACD;;AAED,SAAOvD,YAAP;AACD;;AAED,SAASI,OAAT,CAAiBL,EAAjB,EAAqB;AACnB,QAAMyD,KAAK,GAAG9E,QAAQ,CAACqB,EAAD,CAAR,GAAe,QAAf,GAA0B,QAAxC;AACA,QAAM0D,IAAI,GAAGvC,mBAAmB,CAACnB,EAAD,CAAhC;AACA,QAAM2D,MAAM,GAAGD,IAAI,cAAOA,IAAI,CAAC7B,MAAZ,cAAsB6B,IAAI,CAAC5B,QAA3B,SAAyC,EAA5D;AACA,QAAM1C,KAAK,GAAGY,EAAE,CAACZ,KAAH,GAAW,QAAX,GAAsB,EAApC;AACAZ,EAAAA,GAAG,CAACkF,IAAJ,CAAS,CAAT,YAAeD,KAAf,SAAuBrE,KAAvB,sBAAwCuE,MAAxC;AACD;;AAED,SAASnD,UAAT,CAAoBR,EAApB,EAAwB;AACtB,MAAI,OAAO4D,sBAAP,KAAkC,WAAlC,IAAiD5D,EAAE,YAAY4D,sBAAnE,EAA2F;AAEzF,WAAO,CAAP;AACD;;AAED,SAAO,CAAP;AACD;;AAGD,SAASxB,mBAAT,CAA6BpC,EAA7B,EAAiCkC,gBAAjC,EAAmD1C,OAAnD,EAA4D;AAE1D,MAAIqE,WAAW,GAAG,WAAWrE,OAAX,GAAqBA,OAAO,CAACH,KAA7B,GAAqCW,EAAE,CAACb,MAAH,CAAU0E,WAAjE;AACA,MAAIC,YAAY,GAAG,YAAYtE,OAAZ,GAAsBA,OAAO,CAACF,MAA9B,GAAuCU,EAAE,CAACb,MAAH,CAAU2E,YAApE;;AAEA,MAAI,CAACD,WAAD,IAAgB,CAACC,YAArB,EAAmC;AACjCtF,IAAAA,GAAG,CAACA,GAAJ,CAAQ,CAAR,EAAW,sCAAX;AAEA0D,IAAAA,gBAAgB,GAAG,CAAnB;AACA2B,IAAAA,WAAW,GAAG7D,EAAE,CAACb,MAAH,CAAUE,KAAV,IAAmB,CAAjC;AACAyE,IAAAA,YAAY,GAAG9D,EAAE,CAACb,MAAH,CAAUG,MAAV,IAAoB,CAAnC;AACD;;AAEDU,EAAAA,EAAE,CAACS,IAAH,GAAUT,EAAE,CAACS,IAAH,IAAW,EAArB;AACAT,EAAAA,EAAE,CAACS,IAAH,CAAQC,cAAR,GAAyBV,EAAE,CAACS,IAAH,CAAQC,cAAR,IAA0B,EAAnD;AACA,QAAMqD,UAAU,GAAG/D,EAAE,CAACS,IAAH,CAAQC,cAA3B;;AAEA,MACEqD,UAAU,CAACF,WAAX,KAA2BA,WAA3B,IACAE,UAAU,CAACD,YAAX,KAA4BA,YAD5B,IAEAC,UAAU,CAAC7B,gBAAX,KAAgCA,gBAHlC,EAIE;AACA,QAAI8B,iBAAiB,GAAG9B,gBAAxB;AAEA,UAAM+B,WAAW,GAAGhD,IAAI,CAACiD,KAAL,CAAWL,WAAW,GAAGG,iBAAzB,CAApB;AACA,UAAMG,YAAY,GAAGlD,IAAI,CAACiD,KAAL,CAAWJ,YAAY,GAAGE,iBAA1B,CAArB;AACAhE,IAAAA,EAAE,CAACb,MAAH,CAAUE,KAAV,GAAkB4E,WAAlB;AACAjE,IAAAA,EAAE,CAACb,MAAH,CAAUG,MAAV,GAAmB6E,YAAnB;;AAKA,QAAInE,EAAE,CAACoE,kBAAH,KAA0BH,WAA1B,IAAyCjE,EAAE,CAACqE,mBAAH,KAA2BF,YAAxE,EAAsF;AACpF3F,MAAAA,GAAG,CAACuC,IAAJ;AACAiD,MAAAA,iBAAiB,GAAG/C,IAAI,CAACqD,GAAL,CAClBtE,EAAE,CAACoE,kBAAH,GAAwBP,WADN,EAElB7D,EAAE,CAACqE,mBAAH,GAAyBP,YAFP,CAApB;AAKA9D,MAAAA,EAAE,CAACb,MAAH,CAAUE,KAAV,GAAkB4B,IAAI,CAACiD,KAAL,CAAWL,WAAW,GAAGG,iBAAzB,CAAlB;AACAhE,MAAAA,EAAE,CAACb,MAAH,CAAUG,MAAV,GAAmB2B,IAAI,CAACiD,KAAL,CAAWJ,YAAY,GAAGE,iBAA1B,CAAnB;AACD;;AAEDvE,IAAAA,MAAM,CAACC,MAAP,CAAcM,EAAE,CAACS,IAAH,CAAQC,cAAtB,EAAsC;AAACmD,MAAAA,WAAD;AAAcC,MAAAA,YAAd;AAA4B5B,MAAAA;AAA5B,KAAtC;AACD;AACF","sourcesContent":["// WebGLRenderingContext related methods\n\n/** @typedef {import('./context')} types */\n\n/* eslint-disable quotes */\nimport GL from '@luma.gl/constants';\nimport {isBrowser as getIsBrowser} from '@probe.gl/env';\nimport {trackContextState} from '../state-tracker/track-context-state';\n\nimport {log} from '../utils/log';\nimport {assert} from '../utils/assert';\nimport {getDevicePixelRatio} from '../utils/device-pixels';\nimport {isWebGL2} from '../utils/webgl-checks';\n\nconst isBrowser = getIsBrowser();\nconst isPage = isBrowser && typeof document !== 'undefined';\n\nconst CONTEXT_DEFAULTS = {\n  // COMMON CONTEXT PARAMETERS\n  // Attempt to allocate WebGL2 context\n  webgl2: true, // Attempt to create a WebGL2 context (false to force webgl1)\n  webgl1: true, // Attempt to create a WebGL1 context (false to fail if webgl2 not available)\n  throwOnError: true,\n  manageState: true,\n  // BROWSER CONTEXT PARAMETERS\n  canvas: null, // A canvas element or a canvas string id\n  debug: false, // Instrument context (at the expense of performance)\n  // HEADLESS CONTEXT PARAMETERS\n  width: 800, // width are height are only used by headless gl\n  height: 600\n  // WEBGL/HEADLESS CONTEXT PARAMETERS\n  // Remaining options are passed through to context creator\n};\n\n/**\n * Creates a context giving access to the WebGL API\n * @type {types['createGLContext']}\n */\n/* eslint-disable complexity, max-statements */\nexport function createGLContext(options = {}) {\n  assert(\n    isBrowser,\n    \"createGLContext only available in the browser.\\nCreate your own headless context or use 'createHeadlessContext' from @luma.gl/test-utils\"\n  );\n\n  options = Object.assign({}, CONTEXT_DEFAULTS, options);\n  const {width, height} = options;\n\n  // Error reporting function, enables exceptions to be disabled\n  function onError(message) {\n    if (options.throwOnError) {\n      throw new Error(message);\n    }\n    // eslint-disable-next-line\n    console.error(message);\n    return null;\n  }\n  options.onError = onError;\n\n  let gl;\n  // Get or create a canvas\n  const {canvas} = options;\n  const targetCanvas = getCanvas({canvas, width, height, onError});\n  // Create a WebGL context in the canvas\n  gl = createBrowserContext(targetCanvas, options);\n\n  if (!gl) {\n    return null;\n  }\n\n  gl = instrumentGLContext(gl, options);\n\n  // Log some debug info about the newly created context\n  logInfo(gl);\n\n  // Add to seer integration\n  return gl;\n}\n\n/**\n * Creates a context giving access to the WebGL API\n * @type {types['instrumentGLContext']}\n */\nexport function instrumentGLContext(gl, options = {}) {\n  // Avoid multiple instrumentations\n  // @ts-ignore\n  if (!gl || gl._instrumented) {\n    return gl;\n  }\n\n  // @ts-ignore\n  gl._version = gl._version || getVersion(gl);\n\n  // Cache canvas size information to avoid setting it on every frame.\n  // @ts-ignore\n  gl.luma = gl.luma || {};\n  // @ts-ignore\n  gl.luma.canvasSizeInfo = gl.luma.canvasSizeInfo || {};\n\n  options = Object.assign({}, CONTEXT_DEFAULTS, options);\n  const {manageState, debug} = options;\n\n  // Install context state tracking\n  if (manageState) {\n    trackContextState(gl, {\n      copyState: false,\n      log: (...args) => log.log(1, ...args)()\n    });\n  }\n\n  // Add debug instrumentation to the context\n  if (isBrowser && debug) {\n    // @ts-ignore\n    if (!globalThis.makeDebugContext) {\n      log.warn('WebGL debug mode not activated. import \"@luma.gl/debug\" to enable.')();\n    } else {\n      // @ts-ignore\n      gl = globalThis.makeDebugContext(gl, options);\n      // Debug forces log level to at least 1\n      log.level = Math.max(log.level, 1);\n    }\n  }\n\n  // @ts-ignore\n  gl._instrumented = true;\n\n  return gl;\n}\n\n/**\n * Provides strings identifying the GPU vendor and driver.\n * @type {types['getContextDebugInfo']}\n */\nexport function getContextDebugInfo(gl) {\n  const vendorMasked = gl.getParameter(GL.VENDOR);\n  const rendererMasked = gl.getParameter(GL.RENDERER);\n  const ext = gl.getExtension('WEBGL_debug_renderer_info');\n  const vendorUnmasked = ext && gl.getParameter(ext.UNMASKED_VENDOR_WEBGL || GL.VENDOR);\n  const rendererUnmasked = ext && gl.getParameter(ext.UNMASKED_RENDERER_WEBGL || GL.RENDERER);\n  return {\n    vendor: vendorUnmasked || vendorMasked,\n    renderer: rendererUnmasked || rendererMasked,\n    vendorMasked,\n    rendererMasked,\n    version: gl.getParameter(GL.VERSION),\n    shadingLanguageVersion: gl.getParameter(GL.SHADING_LANGUAGE_VERSION)\n  };\n}\n\n/**\n * Resize the canvas' drawing buffer.\n * @type {types['resizeGLContext']}\n */\nexport function resizeGLContext(gl, options = {}) {\n  // Resize browser context\n  if (gl.canvas) {\n    const devicePixelRatio = getDevicePixelRatio(options.useDevicePixels);\n    setDevicePixelRatio(gl, devicePixelRatio, options);\n    return;\n  }\n\n  // Resize headless gl context\n  const ext = gl.getExtension('STACKGL_resize_drawingbuffer');\n  if (ext && `width` in options && `height` in options) {\n    ext.resize(options.width, options.height);\n  }\n}\n\n// HELPER METHODS\n\n/**\n * Create a WebGL context for a canvas\n * Note calling this multiple time on the same canvas does return the same context\n */\n\nfunction createBrowserContext(canvas, options) {\n  const {onError} = options;\n\n  // Try to extract any extra information about why context creation failed\n  let errorMessage = null;\n  const onCreateError = error => (errorMessage = error.statusMessage || errorMessage);\n  canvas.addEventListener('webglcontextcreationerror', onCreateError, false);\n\n  const {webgl1 = true, webgl2 = true} = options;\n  let gl = null;\n  // Prefer webgl2 over webgl1, prefer conformant over experimental\n  if (webgl2) {\n    gl = gl || canvas.getContext('webgl2', options);\n    gl = gl || canvas.getContext('experimental-webgl2', options);\n  }\n  if (webgl1) {\n    gl = gl || canvas.getContext('webgl', options);\n    gl = gl || canvas.getContext('experimental-webgl', options);\n  }\n\n  canvas.removeEventListener('webglcontextcreationerror', onCreateError, false);\n\n  if (!gl) {\n    return onError(\n      `Failed to create ${webgl2 && !webgl1 ? 'WebGL2' : 'WebGL'} context: ${errorMessage ||\n        'Unknown error'}`\n    );\n  }\n\n  if (options.onContextLost) {\n    canvas.addEventListener('webglcontextlost', options.onContextLost, false);\n  }\n\n  if (options.onContextRestored) {\n    canvas.addEventListener('webglcontextrestored', options.onContextRestored, false);\n  }\n\n  return gl;\n}\n\nfunction getCanvas({canvas, width = 800, height = 600, onError}) {\n  let targetCanvas;\n  if (typeof canvas === 'string') {\n    const isPageLoaded = isPage && document.readyState === 'complete';\n    if (!isPageLoaded) {\n      onError(`createGLContext called on canvas '${canvas}' before page was loaded`);\n    }\n    targetCanvas = document.getElementById(canvas);\n  } else if (canvas) {\n    targetCanvas = canvas;\n  } else {\n    targetCanvas = document.createElement('canvas');\n    targetCanvas.id = 'lumagl-canvas';\n    targetCanvas.style.width = Number.isFinite(width) ? `${width}px` : '100%';\n    targetCanvas.style.height = Number.isFinite(height) ? `${height}px` : '100%';\n    document.body.insertBefore(targetCanvas, document.body.firstChild);\n  }\n\n  return targetCanvas;\n}\n\nfunction logInfo(gl) {\n  const webGL = isWebGL2(gl) ? 'WebGL2' : 'WebGL1';\n  const info = getContextDebugInfo(gl);\n  const driver = info ? `(${info.vendor},${info.renderer})` : '';\n  const debug = gl.debug ? ' debug' : '';\n  log.info(1, `${webGL}${debug} context ${driver}`)();\n}\n\nfunction getVersion(gl) {\n  if (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) {\n    // WebGL2 context.\n    return 2;\n  }\n  // Must be a WebGL1 context.\n  return 1;\n}\n\n// use devicePixelRatio to set canvas width and height\nfunction setDevicePixelRatio(gl, devicePixelRatio, options) {\n  // NOTE: if options.width and options.height not used remove in v8\n  let clientWidth = 'width' in options ? options.width : gl.canvas.clientWidth;\n  let clientHeight = 'height' in options ? options.height : gl.canvas.clientHeight;\n\n  if (!clientWidth || !clientHeight) {\n    log.log(1, 'Canvas clientWidth/clientHeight is 0')();\n    // by forcing devicePixel ratio to 1, we do not scale gl.canvas.width and height in each frame.\n    devicePixelRatio = 1;\n    clientWidth = gl.canvas.width || 1;\n    clientHeight = gl.canvas.height || 1;\n  }\n\n  gl.luma = gl.luma || {};\n  gl.luma.canvasSizeInfo = gl.luma.canvasSizeInfo || {};\n  const cachedSize = gl.luma.canvasSizeInfo;\n  // Check if canvas needs to be resized\n  if (\n    cachedSize.clientWidth !== clientWidth ||\n    cachedSize.clientHeight !== clientHeight ||\n    cachedSize.devicePixelRatio !== devicePixelRatio\n  ) {\n    let clampedPixelRatio = devicePixelRatio;\n\n    const canvasWidth = Math.floor(clientWidth * clampedPixelRatio);\n    const canvasHeight = Math.floor(clientHeight * clampedPixelRatio);\n    gl.canvas.width = canvasWidth;\n    gl.canvas.height = canvasHeight;\n\n    // Note: when devicePixelRatio is too high, it is possible we might hit system limit for\n    // drawing buffer width and hight, in those cases they get clamped and resulting aspect ration may not be maintained\n    // for those cases, reduce devicePixelRatio.\n    if (gl.drawingBufferWidth !== canvasWidth || gl.drawingBufferHeight !== canvasHeight) {\n      log.warn(`Device pixel ratio clamped`)();\n      clampedPixelRatio = Math.min(\n        gl.drawingBufferWidth / clientWidth,\n        gl.drawingBufferHeight / clientHeight\n      );\n\n      gl.canvas.width = Math.floor(clientWidth * clampedPixelRatio);\n      gl.canvas.height = Math.floor(clientHeight * clampedPixelRatio);\n    }\n\n    Object.assign(gl.luma.canvasSizeInfo, {clientWidth, clientHeight, devicePixelRatio});\n  }\n}\n"],"file":"context.js"}