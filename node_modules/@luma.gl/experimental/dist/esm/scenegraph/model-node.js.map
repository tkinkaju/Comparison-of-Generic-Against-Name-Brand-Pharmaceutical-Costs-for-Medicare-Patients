{"version":3,"sources":["../../../src/scenegraph/model-node.js"],"names":["Model","ScenegraphNode","ModelNode","constructor","gl","props","onBeforeRender","AfterRender","model","_setModelNodeProps","bounds","managedResources","setProps","getBounds","delete","forEach","resource","draw","setUniforms","setAttributes","updateModuleSettings"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,iBAApB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,eAAe,MAAMC,SAAN,SAAwBD,cAAxB,CAAuC;AACpDE,EAAAA,WAAW,CAACC,EAAD,EAAiB;AAAA,QAAZC,KAAY,uEAAJ,EAAI;AAC1B,UAAMA,KAAN;AAGA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,WAAL,GAAmB,IAAnB;;AAGA,QAAIH,EAAE,YAAYJ,KAAlB,EAAyB;AACvB,WAAKQ,KAAL,GAAaJ,EAAb;;AACA,WAAKK,kBAAL,CAAwBJ,KAAxB;AACD,KAHD,MAGO;AACL,WAAKG,KAAL,GAAa,IAAIR,KAAJ,CAAUI,EAAV,EAAcC,KAAd,CAAb;AACD;;AAED,SAAKK,MAAL,GAAc,IAAd;AACA,SAAKC,gBAAL,GAAwBN,KAAK,CAACM,gBAAN,IAA0B,EAAlD;AACD;;AAEDC,EAAAA,QAAQ,CAACP,KAAD,EAAQ;AACd,UAAMO,QAAN,CAAeP,KAAf;;AACA,SAAKI,kBAAL,CAAwBJ,KAAxB;;AACA,WAAO,IAAP;AACD;;AAEDQ,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKH,MAAZ;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKN,KAAT,EAAgB;AACd,WAAKA,KAAL,CAAWM,MAAX;AACA,WAAKN,KAAL,GAAa,IAAb;AACD;;AAED,SAAKG,gBAAL,CAAsBI,OAAtB,CAA8BC,QAAQ,IAAIA,QAAQ,CAACF,MAAT,EAA1C;AACA,SAAKH,gBAAL,GAAwB,EAAxB;AACD;;AAGDM,EAAAA,IAAI,GAAU;AAEZ,WAAO,KAAKT,KAAL,CAAWS,IAAX,CAAgB,YAAhB,CAAP;AACD;;AAEDC,EAAAA,WAAW,GAAU;AACnB,SAAKV,KAAL,CAAWU,WAAX,CAAuB,YAAvB;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,aAAa,GAAU;AACrB,SAAKX,KAAL,CAAWW,aAAX,CAAyB,YAAzB;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,oBAAoB,GAAU;AAC5B,SAAKZ,KAAL,CAAWY,oBAAX,CAAgC,YAAhC;AACA,WAAO,IAAP;AACD;;AAIDX,EAAAA,kBAAkB,CAACJ,KAAD,EAAQ;AACxB,SAAKG,KAAL,CAAWI,QAAX,CAAoBP,KAApB;AACD;;AAjEmD","sourcesContent":["import {Model} from '@luma.gl/engine';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.bounds = null;\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  getBounds() {\n    return this.bounds;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n"],"file":"model-node.js"}