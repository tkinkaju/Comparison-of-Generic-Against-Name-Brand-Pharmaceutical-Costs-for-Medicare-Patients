{"version":3,"sources":["../../../src/classes/texture-2d.js"],"names":["Texture2D","gl","props","Promise","data","Object","assign","target","initialize","seal","opts","Texture","isSupported","Symbol","toStringTag"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;;;;;IAEqBA,S;;;;;AAUnB,qBAAYC,EAAZ,EAA4B;AAAA;;AAAA,QAAZC,KAAY,uEAAJ,EAAI;AAAA;AAC1B,qCAAmBD,EAAnB;;AAGA,QAAIC,KAAK,YAAYC,OAAjB,IAA4B,OAAOD,KAAP,KAAiB,QAAjD,EAA2D;AACzDA,MAAAA,KAAK,GAAG;AAACE,QAAAA,IAAI,EAAEF;AAAP,OAAR;AACD;;AAGD,QAAI,OAAOA,KAAK,CAACE,IAAb,KAAsB,QAA1B,EAAoC;AAClCF,MAAAA,KAAK,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACE,QAAAA,IAAI,EAAE,yBAAUF,KAAK,CAACE,IAAhB;AAAP,OAAzB,CAAR;AACD;;AAED,8BAAMH,EAAN,EAAUI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACK,MAAAA,MAAM;AAAP,KAAzB,CAAV;;AAEA,UAAKC,UAAL,CAAgBN,KAAhB;;AAEAG,IAAAA,MAAM,CAACI,IAAP;AAjB0B;AAkB3B;;;;SA1BD,eAA2B;AACzB,aAAO,WAAP;AACD;;;WAED,qBAAmBR,EAAnB,EAAuBS,IAAvB,EAA6B;AAC3B,aAAOC,iBAAQC,WAAR,CAAoBX,EAApB,EAAwBS,IAAxB,CAAP;AACD;;;EARoCC,gB,EAEhCE,MAAM,CAACC,W","sourcesContent":["import GL from '@luma.gl/constants';\nimport {assertWebGLContext} from '@luma.gl/gltools';\nimport Texture from './texture';\nimport {loadImage} from '../utils/load-file';\n\nexport default class Texture2D extends Texture {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'Texture2D';\n  }\n\n  static isSupported(gl, opts) {\n    return Texture.isSupported(gl, opts);\n  }\n\n  constructor(gl, props = {}) {\n    assertWebGLContext(gl);\n\n    // Signature: new Texture2D(gl, url | Promise)\n    if (props instanceof Promise || typeof props === 'string') {\n      props = {data: props};\n    }\n\n    // Signature: new Texture2D(gl, {data: url})\n    if (typeof props.data === 'string') {\n      props = Object.assign({}, props, {data: loadImage(props.data)});\n    }\n\n    super(gl, Object.assign({}, props, {target: GL.TEXTURE_2D}));\n\n    this.initialize(props);\n\n    Object.seal(this);\n  }\n}\n"],"file":"texture-2d.js"}