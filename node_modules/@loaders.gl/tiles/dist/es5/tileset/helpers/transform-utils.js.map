{"version":3,"file":"transform-utils.js","names":["calculateTransformProps","tileHeader","tile","assert","rtcCenter","gltfUpAxis","computedTransform","center","boundingVolume","modelMatrix","Matrix4","translate","rotationY","rotateX","Math","PI","multiplyRight","rotationX","rotateY","isQuantized","quantizedVolumeOffset","scale","quantizedVolumeScale","cartesianOrigin","Vector3","cartesianModelMatrix","cartographicOrigin","Ellipsoid","WGS84","cartesianToCartographic","fromFixedFrameMatrix","eastNorthUpToFixedFrame","toFixedFrameMatrix","invert","cartographicModelMatrix","coordinateSystem"],"sources":["../../../../src/tileset/helpers/transform-utils.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport {assert} from '@loaders.gl/loader-utils';\n\nexport function calculateTransformProps(tileHeader, tile) {\n  assert(tileHeader);\n  assert(tile);\n\n  const {rtcCenter, gltfUpAxis} = tile;\n  const {\n    computedTransform,\n    boundingVolume: {center}\n  } = tileHeader;\n\n  let modelMatrix = new Matrix4(computedTransform);\n\n  // Translate if appropriate\n  if (rtcCenter) {\n    modelMatrix.translate(rtcCenter);\n  }\n\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  switch (gltfUpAxis) {\n    case 'Z':\n      break;\n    case 'Y':\n      const rotationY = new Matrix4().rotateX(Math.PI / 2);\n      modelMatrix = modelMatrix.multiplyRight(rotationY);\n      break;\n    case 'X':\n      const rotationX = new Matrix4().rotateY(-Math.PI / 2);\n      modelMatrix = modelMatrix.multiplyRight(rotationX);\n      break;\n    default:\n      break;\n  }\n\n  // Scale/offset positions if normalized integers\n  if (tile.isQuantized) {\n    modelMatrix.translate(tile.quantizedVolumeOffset).scale(tile.quantizedVolumeScale);\n  }\n\n  // Option 1: Cartesian matrix and origin\n  const cartesianOrigin = new Vector3(center);\n\n  tile.cartesianModelMatrix = modelMatrix;\n  tile.cartesianOrigin = cartesianOrigin;\n\n  // Option 2: Cartographic matrix and origin\n  const cartographicOrigin = Ellipsoid.WGS84.cartesianToCartographic(\n    cartesianOrigin,\n    new Vector3()\n  );\n  const fromFixedFrameMatrix = Ellipsoid.WGS84.eastNorthUpToFixedFrame(cartesianOrigin);\n  const toFixedFrameMatrix = fromFixedFrameMatrix.invert();\n\n  tile.cartographicModelMatrix = toFixedFrameMatrix.multiplyRight(modelMatrix);\n  tile.cartographicOrigin = cartographicOrigin;\n\n  // Deprecated, drop\n  if (!tile.coordinateSystem) {\n    tile.modelMatrix = tile.cartographicModelMatrix;\n  }\n}\n"],"mappings":";;;;;;AAEA;AACA;AACA;;AAEO,SAASA,uBAAuB,CAACC,UAAU,EAAEC,IAAI,EAAE;EACxD,IAAAC,mBAAM,EAACF,UAAU,CAAC;EAClB,IAAAE,mBAAM,EAACD,IAAI,CAAC;EAEZ,IAAOE,SAAS,GAAgBF,IAAI,CAA7BE,SAAS;IAAEC,UAAU,GAAIH,IAAI,CAAlBG,UAAU;EAC5B,IACEC,iBAAiB,GAEfL,UAAU,CAFZK,iBAAiB;IACAC,MAAM,GACrBN,UAAU,CADZO,cAAc,CAAGD,MAAM;EAGzB,IAAIE,WAAW,GAAG,IAAIC,aAAO,CAACJ,iBAAiB,CAAC;;EAGhD,IAAIF,SAAS,EAAE;IACbK,WAAW,CAACE,SAAS,CAACP,SAAS,CAAC;EAClC;;EAIA,QAAQC,UAAU;IAChB,KAAK,GAAG;MACN;IACF,KAAK,GAAG;MACN,IAAMO,SAAS,GAAG,IAAIF,aAAO,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;MACpDN,WAAW,GAAGA,WAAW,CAACO,aAAa,CAACJ,SAAS,CAAC;MAClD;IACF,KAAK,GAAG;MACN,IAAMK,SAAS,GAAG,IAAIP,aAAO,EAAE,CAACQ,OAAO,CAAC,CAACJ,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;MACrDN,WAAW,GAAGA,WAAW,CAACO,aAAa,CAACC,SAAS,CAAC;MAClD;IACF;MACE;EAAM;;EAIV,IAAIf,IAAI,CAACiB,WAAW,EAAE;IACpBV,WAAW,CAACE,SAAS,CAACT,IAAI,CAACkB,qBAAqB,CAAC,CAACC,KAAK,CAACnB,IAAI,CAACoB,oBAAoB,CAAC;EACpF;;EAGA,IAAMC,eAAe,GAAG,IAAIC,aAAO,CAACjB,MAAM,CAAC;EAE3CL,IAAI,CAACuB,oBAAoB,GAAGhB,WAAW;EACvCP,IAAI,CAACqB,eAAe,GAAGA,eAAe;;EAGtC,IAAMG,kBAAkB,GAAGC,qBAAS,CAACC,KAAK,CAACC,uBAAuB,CAChEN,eAAe,EACf,IAAIC,aAAO,EAAE,CACd;EACD,IAAMM,oBAAoB,GAAGH,qBAAS,CAACC,KAAK,CAACG,uBAAuB,CAACR,eAAe,CAAC;EACrF,IAAMS,kBAAkB,GAAGF,oBAAoB,CAACG,MAAM,EAAE;EAExD/B,IAAI,CAACgC,uBAAuB,GAAGF,kBAAkB,CAAChB,aAAa,CAACP,WAAW,CAAC;EAC5EP,IAAI,CAACwB,kBAAkB,GAAGA,kBAAkB;;EAG5C,IAAI,CAACxB,IAAI,CAACiC,gBAAgB,EAAE;IAC1BjC,IAAI,CAACO,WAAW,GAAGP,IAAI,CAACgC,uBAAuB;EACjD;AACF"}