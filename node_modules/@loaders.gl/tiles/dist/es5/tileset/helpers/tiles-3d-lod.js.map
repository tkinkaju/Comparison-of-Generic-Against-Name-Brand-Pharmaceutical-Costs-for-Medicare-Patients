{"version":3,"file":"tiles-3d-lod.js","names":["scratchPositionNormal","Vector3","scratchCartographic","scratchMatrix","Matrix4","scratchCenter","scratchPosition","scratchDirection","calculateDynamicScreenSpaceError","root","camera","mapProjection","options","dynamicScreenSpaceErrorHeightFalloff","dynamicScreenSpaceErrorDensity","up","direction","height","minimumHeight","maximumHeight","tileBoundingVolume","contentBoundingVolume","TileBoundingRegion","Cartesian3","normalize","positionWC","directionWC","positionCartographic","transformLocal","inverseTransformation","computedTransform","ellipsoid","boundingVolume","centerLocal","multiplyByPoint","center","magnitude","minimumRadius","centerCartographic","Cartographic","fromCartesian","positionLocal","UNIT_Z","multiplyByPointAsVector","z","TileOrientedBoundingBox","boxHeight","_header","box","TileBoundingSphere","radius","heightFalloff","heightClose","heightFar","t","clamp","dot","Math","abs","horizonFactor","fog","distanceToCamera","density","scalar","exp","getDynamicScreenSpaceError","tileset","dynamicScreenSpaceError","dynamicScreenSpaceErrorComputedDensity","factor","dynamicScreenSpaceErrorFactor","dynamicError","getTiles3DScreenSpaceError","tile","frameState","useParentLodMetric","parentLodMetricValue","parent","lodMetricValue","distance","max","_distanceToCamera","sseDenominator","viewDistanceScale","error"],"sources":["../../../../src/tileset/helpers/tiles-3d-lod.ts"],"sourcesContent":["// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// TODO - Dynamic screen space error provides an optimization when looking at\n// tilesets from above\n\n/* eslint-disable */\n// @ts-nocheck\nimport {Matrix4, Vector3, clamp} from '@math.gl/core';\n\nconst scratchPositionNormal = new Vector3();\nconst scratchCartographic = new Vector3();\nconst scratchMatrix = new Matrix4();\nconst scratchCenter = new Vector3();\nconst scratchPosition = new Vector3();\nconst scratchDirection = new Vector3();\n\n// eslint-disable-next-line max-statements, complexity\nexport function calculateDynamicScreenSpaceError(root, {camera, mapProjection}, options = {}) {\n  const {dynamicScreenSpaceErrorHeightFalloff = 0.25, dynamicScreenSpaceErrorDensity = 0.00278} =\n    options;\n\n  let up;\n  let direction;\n  let height;\n  let minimumHeight;\n  let maximumHeight;\n\n  const tileBoundingVolume = root.contentBoundingVolume;\n\n  if (tileBoundingVolume instanceof TileBoundingRegion) {\n    up = Cartesian3.normalize(camera.positionWC, scratchPositionNormal);\n    direction = camera.directionWC;\n    height = camera.positionCartographic.height;\n    minimumHeight = tileBoundingVolume.minimumHeight;\n    maximumHeight = tileBoundingVolume.maximumHeight;\n  } else {\n    // Transform camera position and direction into the local coordinate system of the tileset\n    const transformLocal = Matrix4.inverseTransformation(root.computedTransform, scratchMatrix);\n    const ellipsoid = mapProjection.ellipsoid;\n    const boundingVolume = tileBoundingVolume.boundingVolume;\n    const centerLocal = Matrix4.multiplyByPoint(\n      transformLocal,\n      boundingVolume.center,\n      scratchCenter\n    );\n    if (Cartesian3.magnitude(centerLocal) > ellipsoid.minimumRadius) {\n      // The tileset is defined in WGS84. Approximate the minimum and maximum height.\n      const centerCartographic = Cartographic.fromCartesian(\n        centerLocal,\n        ellipsoid,\n        scratchCartographic\n      );\n      up = Cartesian3.normalize(camera.positionWC, scratchPositionNormal);\n      direction = camera.directionWC;\n      height = camera.positionCartographic.height;\n      minimumHeight = 0.0;\n      maximumHeight = centerCartographic.height * 2.0;\n    } else {\n      // The tileset is defined in local coordinates (z-up)\n      const positionLocal = Matrix4.multiplyByPoint(\n        transformLocal,\n        camera.positionWC,\n        scratchPosition\n      );\n      up = Cartesian3.UNIT_Z;\n      direction = Matrix4.multiplyByPointAsVector(\n        transformLocal,\n        camera.directionWC,\n        scratchDirection\n      );\n      direction = Cartesian3.normalize(direction, direction);\n      height = positionLocal.z;\n      if (tileBoundingVolume instanceof TileOrientedBoundingBox) {\n        // Assuming z-up, the last component stores the half-height of the box\n        const boxHeight = root._header.boundingVolume.box[11];\n        minimumHeight = centerLocal.z - boxHeight;\n        maximumHeight = centerLocal.z + boxHeight;\n      } else if (tileBoundingVolume instanceof TileBoundingSphere) {\n        const radius = boundingVolume.radius;\n        minimumHeight = centerLocal.z - radius;\n        maximumHeight = centerLocal.z + radius;\n      }\n    }\n  }\n\n  // The range where the density starts to lessen. Start at the quarter height of the tileset.\n  const heightFalloff = dynamicScreenSpaceErrorHeightFalloff;\n  const heightClose = minimumHeight + (maximumHeight - minimumHeight) * heightFalloff;\n  const heightFar = maximumHeight;\n\n  const t = clamp((height - heightClose) / (heightFar - heightClose), 0.0, 1.0);\n\n  // Increase density as the camera tilts towards the horizon\n  const dot = Math.abs(Cartesian3.dot(direction, up));\n\n  let horizonFactor = 1.0 - dot;\n\n  // Weaken the horizon factor as the camera height increases, implying the camera is further away from the tileset.\n  // The goal is to increase density for the \"street view\", not when viewing the tileset from a distance.\n  horizonFactor = horizonFactor * (1.0 - t);\n\n  return dynamicScreenSpaceErrorDensity * horizonFactor;\n}\n\nexport function fog(distanceToCamera, density) {\n  const scalar = distanceToCamera * density;\n  return 1.0 - Math.exp(-(scalar * scalar));\n}\n\nexport function getDynamicScreenSpaceError(tileset, distanceToCamera) {\n  if (tileset.dynamicScreenSpaceError && tileset.dynamicScreenSpaceErrorComputedDensity) {\n    const density = tileset.dynamicScreenSpaceErrorComputedDensity;\n    const factor = tileset.dynamicScreenSpaceErrorFactor;\n    // TODO: Refined screen space error that minimizes tiles in non-first-person\n    const dynamicError = fog(distanceToCamera, density) * factor;\n    return dynamicError;\n  }\n\n  return 0;\n}\n\nexport function getTiles3DScreenSpaceError(tile, frameState, useParentLodMetric) {\n  const tileset = tile.tileset;\n  const parentLodMetricValue = (tile.parent && tile.parent.lodMetricValue) || tile.lodMetricValue;\n  const lodMetricValue = useParentLodMetric ? parentLodMetricValue : tile.lodMetricValue;\n\n  // Leaf tiles do not have any error so save the computation\n  if (lodMetricValue === 0.0) {\n    return 0.0;\n  }\n\n  // TODO: Orthographic Frustum needs special treatment?\n  // this._getOrthograhicScreenSpaceError();\n\n  // Avoid divide by zero when viewer is inside the tile\n  const distance = Math.max(tile._distanceToCamera, 1e-7);\n  const {height, sseDenominator} = frameState;\n  const {viewDistanceScale} = tileset.options;\n  let error = (lodMetricValue * height * (viewDistanceScale || 1.0)) / (distance * sseDenominator);\n\n  error -= getDynamicScreenSpaceError(tileset, distance);\n\n  return error;\n}\n"],"mappings":"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"}