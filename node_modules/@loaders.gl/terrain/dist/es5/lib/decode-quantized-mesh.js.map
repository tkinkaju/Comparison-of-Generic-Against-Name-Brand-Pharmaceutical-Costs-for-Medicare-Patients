{"version":3,"file":"decode-quantized-mesh.js","names":["QUANTIZED_MESH_HEADER","Map","Float64Array","BYTES_PER_ELEMENT","Float32Array","decodeZigZag","value","decodeHeader","dataView","position","header","key","bytesCount","getter","getFloat64","getFloat32","call","headerEndPosition","decodeVertexData","elementsPerVertex","vertexCount","getUint32","vertexData","Uint16Array","Uint32Array","bytesPerArrayElement","elementArrayLength","uArrayStartPosition","vArrayStartPosition","heightArrayStartPosition","u","v","height","i","getUint16","vertexDataEndPosition","decodeIndex","buffer","indicesCount","bytesPerIndex","encoded","indices","highest","length","code","decodeTriangleIndices","triangleCount","triangleIndicesCount","triangleIndices","triangleIndicesEndPosition","decodeEdgeIndices","westVertexCount","westIndices","southVertexCount","southIndices","eastVertexCount","eastIndices","northVertexCount","northIndices","edgeIndicesEndPosition","decodeVertexNormalsExtension","extensionDataView","Uint8Array","byteOffset","byteLength","decodeWaterMaskExtension","slice","decodeExtensions","indicesEndPosition","extensions","extensionsEndPosition","extensionId","getUint8","extensionLength","extensionView","DataView","vertexNormals","waterMask","DECODING_STEPS","vertices","edgeIndices","DEFAULT_OPTIONS","maxDecodingStep","decode","data","userOptions","options","Object","assign","view"],"sources":["../../../src/lib/decode-quantized-mesh.ts"],"sourcesContent":["// Copyright (C) 2018-2019 HERE Europe B.V.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nconst QUANTIZED_MESH_HEADER = new Map([\n  ['centerX', Float64Array.BYTES_PER_ELEMENT],\n  ['centerY', Float64Array.BYTES_PER_ELEMENT],\n  ['centerZ', Float64Array.BYTES_PER_ELEMENT],\n\n  ['minHeight', Float32Array.BYTES_PER_ELEMENT],\n  ['maxHeight', Float32Array.BYTES_PER_ELEMENT],\n\n  ['boundingSphereCenterX', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterY', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterZ', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereRadius', Float64Array.BYTES_PER_ELEMENT],\n\n  ['horizonOcclusionPointX', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointY', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointZ', Float64Array.BYTES_PER_ELEMENT]\n]);\n\nfunction decodeZigZag(value) {\n  return (value >> 1) ^ -(value & 1);\n}\n\nfunction decodeHeader(dataView) {\n  let position = 0;\n  const header = {};\n\n  for (const [key, bytesCount] of QUANTIZED_MESH_HEADER) {\n    const getter = bytesCount === 8 ? dataView.getFloat64 : dataView.getFloat32;\n\n    header[key] = getter.call(dataView, position, true);\n    position += bytesCount;\n  }\n\n  return {header, headerEndPosition: position};\n}\n\nfunction decodeVertexData(dataView, headerEndPosition) {\n  let position = headerEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = dataView.getUint32(position, true);\n  const vertexData = new Uint16Array(vertexCount * elementsPerVertex);\n\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const bytesPerArrayElement = Uint16Array.BYTES_PER_ELEMENT;\n  const elementArrayLength = vertexCount * bytesPerArrayElement;\n  const uArrayStartPosition = position;\n  const vArrayStartPosition = uArrayStartPosition + elementArrayLength;\n  const heightArrayStartPosition = vArrayStartPosition + elementArrayLength;\n\n  let u = 0;\n  let v = 0;\n  let height = 0;\n\n  for (let i = 0; i < vertexCount; i++) {\n    u += decodeZigZag(dataView.getUint16(uArrayStartPosition + bytesPerArrayElement * i, true));\n    v += decodeZigZag(dataView.getUint16(vArrayStartPosition + bytesPerArrayElement * i, true));\n    height += decodeZigZag(\n      dataView.getUint16(heightArrayStartPosition + bytesPerArrayElement * i, true)\n    );\n\n    vertexData[i] = u;\n    vertexData[i + vertexCount] = v;\n    vertexData[i + vertexCount * 2] = height;\n  }\n\n  position += elementArrayLength * 3;\n\n  return {vertexData, vertexDataEndPosition: position};\n}\n\nfunction decodeIndex(buffer, position, indicesCount, bytesPerIndex, encoded = true) {\n  let indices;\n\n  if (bytesPerIndex === 2) {\n    indices = new Uint16Array(buffer, position, indicesCount);\n  } else {\n    indices = new Uint32Array(buffer, position, indicesCount);\n  }\n\n  if (!encoded) {\n    return indices;\n  }\n\n  let highest = 0;\n\n  for (let i = 0; i < indices.length; ++i) {\n    const code = indices[i];\n\n    indices[i] = highest - code;\n\n    if (code === 0) {\n      ++highest;\n    }\n  }\n\n  return indices;\n}\n\nfunction decodeTriangleIndices(dataView, vertexData, vertexDataEndPosition) {\n  let position = vertexDataEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = vertexData.length / elementsPerVertex;\n  const bytesPerIndex =\n    vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n\n  if (position % bytesPerIndex !== 0) {\n    position += bytesPerIndex - (position % bytesPerIndex);\n  }\n\n  const triangleCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const triangleIndicesCount = triangleCount * 3;\n  const triangleIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    triangleIndicesCount,\n    bytesPerIndex\n  );\n  position += triangleIndicesCount * bytesPerIndex;\n\n  return {\n    triangleIndicesEndPosition: position,\n    triangleIndices\n  };\n}\n\nfunction decodeEdgeIndices(dataView, vertexData, triangleIndicesEndPosition) {\n  let position = triangleIndicesEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = vertexData.length / elementsPerVertex;\n  const bytesPerIndex =\n    vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n\n  const westVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const westIndices = decodeIndex(dataView.buffer, position, westVertexCount, bytesPerIndex, false);\n  position += westVertexCount * bytesPerIndex;\n\n  const southVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const southIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    southVertexCount,\n    bytesPerIndex,\n    false\n  );\n  position += southVertexCount * bytesPerIndex;\n\n  const eastVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const eastIndices = decodeIndex(dataView.buffer, position, eastVertexCount, bytesPerIndex, false);\n  position += eastVertexCount * bytesPerIndex;\n\n  const northVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const northIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    northVertexCount,\n    bytesPerIndex,\n    false\n  );\n  position += northVertexCount * bytesPerIndex;\n\n  return {\n    edgeIndicesEndPosition: position,\n    westIndices,\n    southIndices,\n    eastIndices,\n    northIndices\n  };\n}\n\nfunction decodeVertexNormalsExtension(extensionDataView) {\n  return new Uint8Array(\n    extensionDataView.buffer,\n    extensionDataView.byteOffset,\n    extensionDataView.byteLength\n  );\n}\n\nfunction decodeWaterMaskExtension(extensionDataView) {\n  return extensionDataView.buffer.slice(\n    extensionDataView.byteOffset,\n    extensionDataView.byteOffset + extensionDataView.byteLength\n  );\n}\n\ntype Extensions = {\n  vertexNormals?: any;\n  waterMask?: any;\n};\n\nfunction decodeExtensions(dataView, indicesEndPosition) {\n  const extensions: Extensions = {};\n\n  if (dataView.byteLength <= indicesEndPosition) {\n    return {extensions, extensionsEndPosition: indicesEndPosition};\n  }\n\n  let position = indicesEndPosition;\n\n  while (position < dataView.byteLength) {\n    const extensionId = dataView.getUint8(position, true);\n    position += Uint8Array.BYTES_PER_ELEMENT;\n\n    const extensionLength = dataView.getUint32(position, true);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n\n    const extensionView = new DataView(dataView.buffer, position, extensionLength);\n\n    switch (extensionId) {\n      case 1: {\n        extensions.vertexNormals = decodeVertexNormalsExtension(extensionView);\n\n        break;\n      }\n      case 2: {\n        extensions.waterMask = decodeWaterMaskExtension(extensionView);\n\n        break;\n      }\n      default: {\n        // console.warn(`Unknown extension with id ${extensionId}`)\n      }\n    }\n\n    position += extensionLength;\n  }\n\n  return {extensions, extensionsEndPosition: position};\n}\n\nexport const DECODING_STEPS = {\n  header: 0,\n  vertices: 1,\n  triangleIndices: 2,\n  edgeIndices: 3,\n  extensions: 4\n};\n\nconst DEFAULT_OPTIONS = {\n  maxDecodingStep: DECODING_STEPS.extensions\n};\n\nexport default function decode(data, userOptions) {\n  const options = Object.assign({}, DEFAULT_OPTIONS, userOptions);\n  const view = new DataView(data);\n  const {header, headerEndPosition} = decodeHeader(view);\n\n  if (options.maxDecodingStep < DECODING_STEPS.vertices) {\n    return {header};\n  }\n\n  const {vertexData, vertexDataEndPosition} = decodeVertexData(view, headerEndPosition);\n\n  if (options.maxDecodingStep < DECODING_STEPS.triangleIndices) {\n    return {header, vertexData};\n  }\n\n  const {triangleIndices, triangleIndicesEndPosition} = decodeTriangleIndices(\n    view,\n    vertexData,\n    vertexDataEndPosition\n  );\n\n  if (options.maxDecodingStep < DECODING_STEPS.edgeIndices) {\n    return {header, vertexData, triangleIndices};\n  }\n\n  const {westIndices, southIndices, eastIndices, northIndices, edgeIndicesEndPosition} =\n    decodeEdgeIndices(view, vertexData, triangleIndicesEndPosition);\n\n  if (options.maxDecodingStep < DECODING_STEPS.extensions) {\n    return {\n      header,\n      vertexData,\n      triangleIndices,\n      westIndices,\n      northIndices,\n      eastIndices,\n      southIndices\n    };\n  }\n\n  const {extensions} = decodeExtensions(view, edgeIndicesEndPosition);\n\n  return {\n    header,\n    vertexData,\n    triangleIndices,\n    westIndices,\n    northIndices,\n    eastIndices,\n    southIndices,\n    extensions\n  };\n}\n"],"mappings":"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"}