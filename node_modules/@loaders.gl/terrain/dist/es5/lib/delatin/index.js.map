{"version":3,"file":"index.js","names":["Delatin","data","width","height","coords","triangles","_halfedges","_candidates","_queueIndices","_queue","_errors","_rms","_pending","_pendingLen","_rmsSum","x1","y1","p0","_addPoint","p1","p2","p3","t0","_addTriangle","_flush","maxError","getMaxError","refine","_step","Math","sqrt","x","y","i","t","a","b","c","_findCandidate","p0x","p0y","p1x","p1y","p2x","p2y","minX","min","minY","maxX","max","maxY","w00","orient","w01","w02","a01","b01","a12","b12","a20","b20","z0","heightAt","z1","z2","mx","my","rms","dx","floor","w0","w1","w2","wasInside","z","dz","abs","_queuePush","_queuePop","e0","e1","e2","ax","ay","bx","by","cx","cy","px","py","pn","_handleCollinear","h0","h1","h2","t1","t2","_legalize","length","push","ab","bc","ca","e","a0","b0","al","ar","bl","br","pr","pl","inCircle","hal","har","hbl","hbr","_queueRemove","t3","error","_queueUp","n","_queueSwap","_queueDown","_queuePopBack","pop","it","indexOf","Error","j","pi","pj","j0","_queueLess","i0","j1","j2","dy","ex","ey","fx","fy","ap","bp","cp"],"sources":["../../../../src/lib/delatin/index.ts"],"sourcesContent":["// ISC License\n\n// Copyright(c) 2019, Michael Fogleman, Vladimir Agafonkin\n\n// Permission to use, copy, modify, and / or distribute this software for any purpose\n// with or without fee is hereby granted, provided that the above copyright notice\n// and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n// REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n// FITNESS.IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n//   INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n// OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n// THIS SOFTWARE.\n\n// @ts-nocheck\n\n/* eslint-disable complexity, max-params, max-statements, max-depth, no-constant-condition */\nexport default class Delatin {\n  constructor(data, width, height = width) {\n    this.data = data; // height data\n    this.width = width;\n    this.height = height;\n\n    this.coords = []; // vertex coordinates (x, y)\n    this.triangles = []; // mesh triangle indices\n\n    // additional triangle data\n    this._halfedges = [];\n    this._candidates = [];\n    this._queueIndices = [];\n\n    this._queue = []; // queue of added triangles\n    this._errors = [];\n    this._rms = [];\n    this._pending = []; // triangles pending addition to queue\n    this._pendingLen = 0;\n\n    this._rmsSum = 0;\n\n    const x1 = width - 1;\n    const y1 = height - 1;\n    const p0 = this._addPoint(0, 0);\n    const p1 = this._addPoint(x1, 0);\n    const p2 = this._addPoint(0, y1);\n    const p3 = this._addPoint(x1, y1);\n\n    // add initial two triangles\n    const t0 = this._addTriangle(p3, p0, p2, -1, -1, -1);\n    this._addTriangle(p0, p3, p1, t0, -1, -1);\n    this._flush();\n  }\n\n  // refine the mesh until its maximum error gets below the given one\n  run(maxError = 1) {\n    while (this.getMaxError() > maxError) {\n      this.refine();\n    }\n  }\n\n  // refine the mesh with a single point\n  refine() {\n    this._step();\n    this._flush();\n  }\n\n  // max error of the current mesh\n  getMaxError() {\n    return this._errors[0];\n  }\n\n  // root-mean-square deviation of the current mesh\n  getRMSD() {\n    return this._rmsSum > 0 ? Math.sqrt(this._rmsSum / (this.width * this.height)) : 0;\n  }\n\n  // height value at a given position\n  heightAt(x, y) {\n    return this.data[this.width * y + x];\n  }\n\n  // rasterize and queue all triangles that got added or updated in _step\n  _flush() {\n    const coords = this.coords;\n    for (let i = 0; i < this._pendingLen; i++) {\n      const t = this._pending[i];\n      // rasterize triangle to find maximum pixel error\n      const a = 2 * this.triangles[t * 3 + 0];\n      const b = 2 * this.triangles[t * 3 + 1];\n      const c = 2 * this.triangles[t * 3 + 2];\n      this._findCandidate(\n        coords[a],\n        coords[a + 1],\n        coords[b],\n        coords[b + 1],\n        coords[c],\n        coords[c + 1],\n        t\n      );\n    }\n    this._pendingLen = 0;\n  }\n\n  // rasterize a triangle, find its max error, and queue it for processing\n  _findCandidate(p0x, p0y, p1x, p1y, p2x, p2y, t) {\n    // triangle bounding box\n    const minX = Math.min(p0x, p1x, p2x);\n    const minY = Math.min(p0y, p1y, p2y);\n    const maxX = Math.max(p0x, p1x, p2x);\n    const maxY = Math.max(p0y, p1y, p2y);\n\n    // forward differencing variables\n    let w00 = orient(p1x, p1y, p2x, p2y, minX, minY);\n    let w01 = orient(p2x, p2y, p0x, p0y, minX, minY);\n    let w02 = orient(p0x, p0y, p1x, p1y, minX, minY);\n    const a01 = p1y - p0y;\n    const b01 = p0x - p1x;\n    const a12 = p2y - p1y;\n    const b12 = p1x - p2x;\n    const a20 = p0y - p2y;\n    const b20 = p2x - p0x;\n\n    // pre-multiplied z values at vertices\n    const a = orient(p0x, p0y, p1x, p1y, p2x, p2y);\n    const z0 = this.heightAt(p0x, p0y) / a;\n    const z1 = this.heightAt(p1x, p1y) / a;\n    const z2 = this.heightAt(p2x, p2y) / a;\n\n    // iterate over pixels in bounding box\n    let maxError = 0;\n    let mx = 0;\n    let my = 0;\n    let rms = 0;\n    for (let y = minY; y <= maxY; y++) {\n      // compute starting offset\n      let dx = 0;\n      if (w00 < 0 && a12 !== 0) {\n        dx = Math.max(dx, Math.floor(-w00 / a12));\n      }\n      if (w01 < 0 && a20 !== 0) {\n        dx = Math.max(dx, Math.floor(-w01 / a20));\n      }\n      if (w02 < 0 && a01 !== 0) {\n        dx = Math.max(dx, Math.floor(-w02 / a01));\n      }\n\n      let w0 = w00 + a12 * dx;\n      let w1 = w01 + a20 * dx;\n      let w2 = w02 + a01 * dx;\n\n      let wasInside = false;\n\n      for (let x = minX + dx; x <= maxX; x++) {\n        // check if inside triangle\n        if (w0 >= 0 && w1 >= 0 && w2 >= 0) {\n          wasInside = true;\n\n          // compute z using barycentric coordinates\n          const z = z0 * w0 + z1 * w1 + z2 * w2;\n          const dz = Math.abs(z - this.heightAt(x, y));\n          rms += dz * dz;\n          if (dz > maxError) {\n            maxError = dz;\n            mx = x;\n            my = y;\n          }\n        } else if (wasInside) {\n          break;\n        }\n\n        w0 += a12;\n        w1 += a20;\n        w2 += a01;\n      }\n\n      w00 += b12;\n      w01 += b20;\n      w02 += b01;\n    }\n\n    if ((mx === p0x && my === p0y) || (mx === p1x && my === p1y) || (mx === p2x && my === p2y)) {\n      maxError = 0;\n    }\n\n    // update triangle metadata\n    this._candidates[2 * t] = mx;\n    this._candidates[2 * t + 1] = my;\n    this._rms[t] = rms;\n\n    // add triangle to priority queue\n    this._queuePush(t, maxError, rms);\n  }\n\n  // process the next triangle in the queue, splitting it with a new point\n  _step() {\n    // pop triangle with highest error from priority queue\n    const t = this._queuePop();\n\n    const e0 = t * 3 + 0;\n    const e1 = t * 3 + 1;\n    const e2 = t * 3 + 2;\n\n    const p0 = this.triangles[e0];\n    const p1 = this.triangles[e1];\n    const p2 = this.triangles[e2];\n\n    const ax = this.coords[2 * p0];\n    const ay = this.coords[2 * p0 + 1];\n    const bx = this.coords[2 * p1];\n    const by = this.coords[2 * p1 + 1];\n    const cx = this.coords[2 * p2];\n    const cy = this.coords[2 * p2 + 1];\n    const px = this._candidates[2 * t];\n    const py = this._candidates[2 * t + 1];\n\n    const pn = this._addPoint(px, py);\n\n    if (orient(ax, ay, bx, by, px, py) === 0) {\n      this._handleCollinear(pn, e0);\n    } else if (orient(bx, by, cx, cy, px, py) === 0) {\n      this._handleCollinear(pn, e1);\n    } else if (orient(cx, cy, ax, ay, px, py) === 0) {\n      this._handleCollinear(pn, e2);\n    } else {\n      const h0 = this._halfedges[e0];\n      const h1 = this._halfedges[e1];\n      const h2 = this._halfedges[e2];\n\n      const t0 = this._addTriangle(p0, p1, pn, h0, -1, -1, e0);\n      const t1 = this._addTriangle(p1, p2, pn, h1, -1, t0 + 1);\n      const t2 = this._addTriangle(p2, p0, pn, h2, t0 + 2, t1 + 1);\n\n      this._legalize(t0);\n      this._legalize(t1);\n      this._legalize(t2);\n    }\n  }\n\n  // add coordinates for a new vertex\n  _addPoint(x, y) {\n    const i = this.coords.length >> 1;\n    this.coords.push(x, y);\n    return i;\n  }\n\n  // add or update a triangle in the mesh\n  _addTriangle(a, b, c, ab, bc, ca, e = this.triangles.length) {\n    const t = e / 3; // new triangle index\n\n    // add triangle vertices\n    this.triangles[e + 0] = a;\n    this.triangles[e + 1] = b;\n    this.triangles[e + 2] = c;\n\n    // add triangle halfedges\n    this._halfedges[e + 0] = ab;\n    this._halfedges[e + 1] = bc;\n    this._halfedges[e + 2] = ca;\n\n    // link neighboring halfedges\n    if (ab >= 0) {\n      this._halfedges[ab] = e + 0;\n    }\n    if (bc >= 0) {\n      this._halfedges[bc] = e + 1;\n    }\n    if (ca >= 0) {\n      this._halfedges[ca] = e + 2;\n    }\n\n    // init triangle metadata\n    this._candidates[2 * t + 0] = 0;\n    this._candidates[2 * t + 1] = 0;\n    this._queueIndices[t] = -1;\n    this._rms[t] = 0;\n\n    // add triangle to pending queue for later rasterization\n    this._pending[this._pendingLen++] = t;\n\n    // return first halfedge index\n    return e;\n  }\n\n  _legalize(a) {\n    // if the pair of triangles doesn't satisfy the Delaunay condition\n    // (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n    // then do the same check/flip recursively for the new pair of triangles\n    //\n    //           pl                    pl\n    //          /||\\                  /  \\\n    //       al/ || \\bl            al/    \\a\n    //        /  ||  \\              /      \\\n    //       /  a||b  \\    flip    /___ar___\\\n    //     p0\\   ||   /p1   =>   p0\\---bl---/p1\n    //        \\  ||  /              \\      /\n    //       ar\\ || /br             b\\    /br\n    //          \\||/                  \\  /\n    //           pr                    pr\n\n    const b = this._halfedges[a];\n\n    if (b < 0) {\n      return;\n    }\n\n    const a0 = a - (a % 3);\n    const b0 = b - (b % 3);\n    const al = a0 + ((a + 1) % 3);\n    const ar = a0 + ((a + 2) % 3);\n    const bl = b0 + ((b + 2) % 3);\n    const br = b0 + ((b + 1) % 3);\n    const p0 = this.triangles[ar];\n    const pr = this.triangles[a];\n    const pl = this.triangles[al];\n    const p1 = this.triangles[bl];\n    const coords = this.coords;\n\n    if (\n      !inCircle(\n        coords[2 * p0],\n        coords[2 * p0 + 1],\n        coords[2 * pr],\n        coords[2 * pr + 1],\n        coords[2 * pl],\n        coords[2 * pl + 1],\n        coords[2 * p1],\n        coords[2 * p1 + 1]\n      )\n    ) {\n      return;\n    }\n\n    const hal = this._halfedges[al];\n    const har = this._halfedges[ar];\n    const hbl = this._halfedges[bl];\n    const hbr = this._halfedges[br];\n\n    this._queueRemove(a0 / 3);\n    this._queueRemove(b0 / 3);\n\n    const t0 = this._addTriangle(p0, p1, pl, -1, hbl, hal, a0);\n    const t1 = this._addTriangle(p1, p0, pr, t0, har, hbr, b0);\n\n    this._legalize(t0 + 1);\n    this._legalize(t1 + 2);\n  }\n\n  // handle a case where new vertex is on the edge of a triangle\n  _handleCollinear(pn, a) {\n    const a0 = a - (a % 3);\n    const al = a0 + ((a + 1) % 3);\n    const ar = a0 + ((a + 2) % 3);\n    const p0 = this.triangles[ar];\n    const pr = this.triangles[a];\n    const pl = this.triangles[al];\n    const hal = this._halfedges[al];\n    const har = this._halfedges[ar];\n\n    const b = this._halfedges[a];\n\n    if (b < 0) {\n      const t0 = this._addTriangle(pn, p0, pr, -1, har, -1, a0);\n      const t1 = this._addTriangle(p0, pn, pl, t0, -1, hal);\n      this._legalize(t0 + 1);\n      this._legalize(t1 + 2);\n      return;\n    }\n\n    const b0 = b - (b % 3);\n    const bl = b0 + ((b + 2) % 3);\n    const br = b0 + ((b + 1) % 3);\n    const p1 = this.triangles[bl];\n    const hbl = this._halfedges[bl];\n    const hbr = this._halfedges[br];\n\n    this._queueRemove(b0 / 3);\n\n    const t0 = this._addTriangle(p0, pr, pn, har, -1, -1, a0);\n    const t1 = this._addTriangle(pr, p1, pn, hbr, -1, t0 + 1, b0);\n    const t2 = this._addTriangle(p1, pl, pn, hbl, -1, t1 + 1);\n    const t3 = this._addTriangle(pl, p0, pn, hal, t0 + 2, t2 + 1);\n\n    this._legalize(t0);\n    this._legalize(t1);\n    this._legalize(t2);\n    this._legalize(t3);\n  }\n\n  // priority queue methods\n\n  _queuePush(t, error, rms) {\n    const i = this._queue.length;\n    this._queueIndices[t] = i;\n    this._queue.push(t);\n    this._errors.push(error);\n    this._rmsSum += rms;\n    this._queueUp(i);\n  }\n\n  _queuePop() {\n    const n = this._queue.length - 1;\n    this._queueSwap(0, n);\n    this._queueDown(0, n);\n    return this._queuePopBack();\n  }\n\n  _queuePopBack() {\n    const t = this._queue.pop();\n    this._errors.pop();\n    this._rmsSum -= this._rms[t];\n    this._queueIndices[t] = -1;\n    return t;\n  }\n\n  _queueRemove(t) {\n    const i = this._queueIndices[t];\n    if (i < 0) {\n      const it = this._pending.indexOf(t);\n      if (it !== -1) {\n        this._pending[it] = this._pending[--this._pendingLen];\n      } else {\n        throw new Error('Broken triangulation (something went wrong).');\n      }\n      return;\n    }\n    const n = this._queue.length - 1;\n    if (n !== i) {\n      this._queueSwap(i, n);\n      if (!this._queueDown(i, n)) {\n        this._queueUp(i);\n      }\n    }\n    this._queuePopBack();\n  }\n\n  _queueLess(i, j) {\n    return this._errors[i] > this._errors[j];\n  }\n\n  _queueSwap(i, j) {\n    const pi = this._queue[i];\n    const pj = this._queue[j];\n    this._queue[i] = pj;\n    this._queue[j] = pi;\n    this._queueIndices[pi] = j;\n    this._queueIndices[pj] = i;\n    const e = this._errors[i];\n    this._errors[i] = this._errors[j];\n    this._errors[j] = e;\n  }\n\n  _queueUp(j0) {\n    let j = j0;\n    while (true) {\n      const i = (j - 1) >> 1;\n      if (i === j || !this._queueLess(j, i)) {\n        break;\n      }\n      this._queueSwap(i, j);\n      j = i;\n    }\n  }\n\n  _queueDown(i0, n) {\n    let i = i0;\n    while (true) {\n      const j1 = 2 * i + 1;\n      if (j1 >= n || j1 < 0) {\n        break;\n      }\n      const j2 = j1 + 1;\n      let j = j1;\n      if (j2 < n && this._queueLess(j2, j1)) {\n        j = j2;\n      }\n      if (!this._queueLess(j, i)) {\n        break;\n      }\n      this._queueSwap(i, j);\n      i = j;\n    }\n    return i > i0;\n  }\n}\n\nfunction orient(ax, ay, bx, by, cx, cy) {\n  return (bx - cx) * (ay - cy) - (by - cy) * (ax - cx);\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n  const dx = ax - px;\n  const dy = ay - py;\n  const ex = bx - px;\n  const ey = by - py;\n  const fx = cx - px;\n  const fy = cy - py;\n\n  const ap = dx * dx + dy * dy;\n  const bp = ex * ex + ey * ey;\n  const cp = fx * fx + fy * fy;\n\n  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}\n"],"mappings":"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"}