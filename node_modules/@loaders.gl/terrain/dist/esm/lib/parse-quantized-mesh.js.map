{"version":3,"file":"parse-quantized-mesh.js","names":["getMeshBoundingBox","decode","DECODING_STEPS","addSkirt","getMeshAttributes","vertexData","header","bounds","minHeight","maxHeight","minX","minY","maxX","maxY","xScale","yScale","zScale","nCoords","length","positions","Float32Array","texCoords","i","x","y","z","POSITION","value","size","TEXCOORD_0","getTileMesh","arrayBuffer","options","triangleIndices","originalTriangleIndices","westIndices","northIndices","eastIndices","southIndices","attributes","boundingBox","skirtHeight","newAttributes","triangles","newTriangles","loaderData","vertexCount","mode","indices","loadQuantizedMesh"],"sources":["../../../src/lib/parse-quantized-mesh.ts"],"sourcesContent":["import {getMeshBoundingBox} from '@loaders.gl/schema';\nimport decode, {DECODING_STEPS} from './decode-quantized-mesh';\nimport {addSkirt} from './helpers/skirt';\n\nfunction getMeshAttributes(vertexData, header, bounds) {\n  const {minHeight, maxHeight} = header;\n  const [minX, minY, maxX, maxY] = bounds || [0, 0, 1, 1];\n  const xScale = maxX - minX;\n  const yScale = maxY - minY;\n  const zScale = maxHeight - minHeight;\n\n  const nCoords = vertexData.length / 3;\n  // vec3. x, y defined by bounds, z in meters\n  const positions = new Float32Array(nCoords * 3);\n\n  // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n  const texCoords = new Float32Array(nCoords * 2);\n\n  // Data is not interleaved; all u, then all v, then all heights\n  for (let i = 0; i < nCoords; i++) {\n    const x = vertexData[i] / 32767;\n    const y = vertexData[i + nCoords] / 32767;\n    const z = vertexData[i + nCoords * 2] / 32767;\n\n    positions[3 * i + 0] = x * xScale + minX;\n    positions[3 * i + 1] = y * yScale + minY;\n    positions[3 * i + 2] = z * zScale + minHeight;\n\n    texCoords[2 * i + 0] = x;\n    texCoords[2 * i + 1] = y;\n  }\n\n  return {\n    POSITION: {value: positions, size: 3},\n    TEXCOORD_0: {value: texCoords, size: 2}\n    // TODO: Parse normals if they exist in the file\n    // NORMAL: {}, - optional, but creates the high poly look with lighting\n  };\n}\n\nfunction getTileMesh(arrayBuffer, options) {\n  if (!arrayBuffer) {\n    return null;\n  }\n  const {bounds} = options;\n  // Don't parse edge indices or format extensions\n  const {\n    header,\n    vertexData,\n    triangleIndices: originalTriangleIndices,\n    westIndices,\n    northIndices,\n    eastIndices,\n    southIndices\n  } = decode(arrayBuffer, DECODING_STEPS.triangleIndices);\n  let triangleIndices = originalTriangleIndices;\n  let attributes = getMeshAttributes(vertexData, header, bounds);\n\n  // Compute bounding box before adding skirt so that z values are not skewed\n  // TODO: Find bounding box from header, instead of doing extra pass over\n  // vertices.\n  const boundingBox = getMeshBoundingBox(attributes);\n\n  if (options.skirtHeight) {\n    const {attributes: newAttributes, triangles: newTriangles} = addSkirt(\n      attributes,\n      triangleIndices,\n      options.skirtHeight,\n      {\n        westIndices,\n        northIndices,\n        eastIndices,\n        southIndices\n      }\n    );\n    attributes = newAttributes;\n    triangleIndices = newTriangles;\n  }\n\n  return {\n    // Data return by this loader implementation\n    loaderData: {\n      header: {}\n    },\n    header: {\n      // @ts-ignore\n      vertexCount: triangleIndices.length,\n      boundingBox\n    },\n    mode: 4, // TRIANGLES\n    indices: {value: triangleIndices, size: 1},\n    attributes\n  };\n}\n\nexport default function loadQuantizedMesh(arrayBuffer, options) {\n  return getTileMesh(arrayBuffer, options['quantized-mesh']);\n}\n"],"mappings":"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"}