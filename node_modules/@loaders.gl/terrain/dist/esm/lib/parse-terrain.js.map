{"version":3,"file":"parse-terrain.js","names":["getMeshBoundingBox","Martini","Delatin","addSkirt","getTerrain","imageData","width","height","elevationDecoder","tesselator","rScaler","bScaler","gScaler","offset","terrain","Float32Array","i","y","x","k","r","g","b","getMeshAttributes","vertices","bounds","gridSize","numOfVerticies","length","positions","texCoords","minX","minY","maxX","maxY","xScale","yScale","pixelIdx","POSITION","value","size","TEXCOORD_0","getMesh","terrainImage","terrainOptions","meshMaxError","data","mesh","getMartiniTileMesh","getDelatinTileMesh","triangles","attributes","boundingBox","skirtHeight","newAttributes","newTriangles","loaderData","header","vertexCount","mode","indices","Uint32Array","from","martini","tile","createTile","tin","run","coords","loadTerrain","arrayBuffer","options","context","loadImageOptions","mimeType","image","type","parse"],"sources":["../../../src/lib/parse-terrain.ts"],"sourcesContent":["import {getMeshBoundingBox} from '@loaders.gl/schema';\nimport Martini from '@mapbox/martini';\nimport Delatin from './delatin';\nimport {addSkirt} from './helpers/skirt';\n\ntype TerrainOptions = {\n  meshMaxError: number;\n  bounds: number[];\n  elevationDecoder: ElevationDecoder;\n  tesselator: 'martini' | 'delatin';\n  skirtHeight?: number;\n};\n\ntype TerrainImage = {\n  data: Uint8Array;\n  width: number;\n  height: number;\n};\n\ntype ElevationDecoder = {\n  rScaler: any;\n  bScaler: any;\n  gScaler: any;\n  offset: number;\n};\n\nfunction getTerrain(\n  imageData: Uint8Array,\n  width: number,\n  height: number,\n  elevationDecoder: ElevationDecoder,\n  tesselator: 'martini' | 'delatin'\n) {\n  const {rScaler, bScaler, gScaler, offset} = elevationDecoder;\n\n  // From Martini demo\n  // https://observablehq.com/@mourner/martin-real-time-rtin-terrain-mesh\n  const terrain = new Float32Array((width + 1) * (height + 1));\n  // decode terrain values\n  for (let i = 0, y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++, i++) {\n      const k = i * 4;\n      const r = imageData[k + 0];\n      const g = imageData[k + 1];\n      const b = imageData[k + 2];\n      terrain[i + y] = r * rScaler + g * gScaler + b * bScaler + offset;\n    }\n  }\n\n  if (tesselator === 'martini') {\n    // backfill bottom border\n    for (let i = (width + 1) * width, x = 0; x < width; x++, i++) {\n      terrain[i] = terrain[i - width - 1];\n    }\n    // backfill right border\n    for (let i = height, y = 0; y < height + 1; y++, i += height + 1) {\n      terrain[i] = terrain[i - 1];\n    }\n  }\n\n  return terrain;\n}\n\nfunction getMeshAttributes(\n  vertices,\n  terrain: Uint8Array,\n  width: number,\n  height: number,\n  bounds: number[]\n) {\n  const gridSize = width + 1;\n  const numOfVerticies = vertices.length / 2;\n  // vec3. x, y in pixels, z in meters\n  const positions = new Float32Array(numOfVerticies * 3);\n  // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n  const texCoords = new Float32Array(numOfVerticies * 2);\n\n  const [minX, minY, maxX, maxY] = bounds || [0, 0, width, height];\n  const xScale = (maxX - minX) / width;\n  const yScale = (maxY - minY) / height;\n\n  for (let i = 0; i < numOfVerticies; i++) {\n    const x = vertices[i * 2];\n    const y = vertices[i * 2 + 1];\n    const pixelIdx = y * gridSize + x;\n\n    positions[3 * i + 0] = x * xScale + minX;\n    positions[3 * i + 1] = -y * yScale + maxY;\n    positions[3 * i + 2] = terrain[pixelIdx];\n\n    texCoords[2 * i + 0] = x / width;\n    texCoords[2 * i + 1] = y / height;\n  }\n\n  return {\n    POSITION: {value: positions, size: 3},\n    TEXCOORD_0: {value: texCoords, size: 2}\n    // NORMAL: {}, - optional, but creates the high poly look with lighting\n  };\n}\n\n/**\n * Returns generated mesh object from image data\n *\n * @param {object} terrainImage terrain image data\n * @param {object} terrainOptions terrain options\n * @returns mesh object\n */\nfunction getMesh(terrainImage: TerrainImage, terrainOptions: TerrainOptions) {\n  if (terrainImage === null) {\n    return null;\n  }\n  const {meshMaxError, bounds, elevationDecoder} = terrainOptions;\n\n  const {data, width, height} = terrainImage;\n\n  let terrain;\n  let mesh;\n  switch (terrainOptions.tesselator) {\n    case 'martini':\n      terrain = getTerrain(data, width, height, elevationDecoder, terrainOptions.tesselator);\n      mesh = getMartiniTileMesh(meshMaxError, width, terrain);\n      break;\n    case 'delatin':\n      terrain = getTerrain(data, width, height, elevationDecoder, terrainOptions.tesselator);\n      mesh = getDelatinTileMesh(meshMaxError, width, height, terrain);\n      break;\n    // auto\n    default:\n      if (width === height && !(height & (width - 1))) {\n        terrain = getTerrain(data, width, height, elevationDecoder, 'martini');\n        mesh = getMartiniTileMesh(meshMaxError, width, terrain);\n      } else {\n        terrain = getTerrain(data, width, height, elevationDecoder, 'delatin');\n        mesh = getDelatinTileMesh(meshMaxError, width, height, terrain);\n      }\n      break;\n  }\n\n  const {vertices} = mesh;\n  let {triangles} = mesh;\n  let attributes = getMeshAttributes(vertices, terrain, width, height, bounds);\n\n  // Compute bounding box before adding skirt so that z values are not skewed\n  const boundingBox = getMeshBoundingBox(attributes);\n\n  if (terrainOptions.skirtHeight) {\n    const {attributes: newAttributes, triangles: newTriangles} = addSkirt(\n      attributes,\n      triangles,\n      terrainOptions.skirtHeight\n    );\n    attributes = newAttributes;\n    triangles = newTriangles;\n  }\n\n  return {\n    // Data return by this loader implementation\n    loaderData: {\n      header: {}\n    },\n    header: {\n      vertexCount: triangles.length,\n      boundingBox\n    },\n    mode: 4, // TRIANGLES\n    indices: {value: Uint32Array.from(triangles), size: 1},\n    attributes\n  };\n}\n\n/**\n * Get Martini generated vertices and triangles\n *\n * @param {number} meshMaxError threshold for simplifying mesh\n * @param {number} width width of the input data\n * @param {number[] | Float32Array} terrain elevation data\n * @returns {{vertices: Uint16Array, triangles: Uint32Array}} vertices and triangles data\n */\nfunction getMartiniTileMesh(meshMaxError, width, terrain) {\n  const gridSize = width + 1;\n  const martini = new Martini(gridSize);\n  const tile = martini.createTile(terrain);\n  const {vertices, triangles} = tile.getMesh(meshMaxError);\n\n  return {vertices, triangles};\n}\n\n/**\n * Get Delatin generated vertices and triangles\n *\n * @param {number} meshMaxError threshold for simplifying mesh\n * @param {number} width width of the input data array\n * @param {number} height height of the input data array\n * @param {number[] | Float32Array} terrain elevation data\n * @returns {{vertices: number[], triangles: number[]}} vertices and triangles data\n */\nfunction getDelatinTileMesh(meshMaxError, width, height, terrain) {\n  const tin = new Delatin(terrain, width + 1, height + 1);\n  tin.run(meshMaxError);\n  // @ts-expect-error\n  const {coords, triangles} = tin;\n  const vertices = coords;\n  return {vertices, triangles};\n}\n\nexport default async function loadTerrain(arrayBuffer, options, context) {\n  const loadImageOptions = {\n    ...options,\n    mimeType: 'application/x.image',\n    image: {...options.image, type: 'data'}\n  };\n  const image = await context.parse(arrayBuffer, loadImageOptions);\n  // Extend function to support additional mesh generation options (square grid or delatin)\n  return getMesh(image, options.terrain);\n}\n"],"mappings":"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"}