{"version":3,"file":"compute-bounding-box.js","names":["computeBoundingBox","positions","min","Number","Infinity","max","makeAttributeIterator","position","x","y","z","boundingBox","validateBoundingBox","assert","isFinite"],"sources":["../../../../src/geometry/attributes/compute-bounding-box.ts"],"sourcesContent":["import {makeAttributeIterator} from '../iterators/attribute-iterator';\nimport {assert} from '../utils/assert';\n\n/**\n * Type for Bounding Box computing\n */\ntype BoundingBox = {\n  min: number[];\n  max: number[];\n};\n/**\n * Getting bounding box geometry according to positions parameters\n * @param positions\n * @returns Bounding Box\n */\nexport function computeBoundingBox(positions: any = []) {\n  const min = [Number(Infinity), Number(Infinity), Number(Infinity)];\n  const max = [-Infinity, -Infinity, -Infinity];\n  // @ts-ignore\n  for (const position of makeAttributeIterator(positions)) {\n    const x = position[0];\n    const y = position[1];\n    const z = position[2];\n\n    if (x < min[0]) min[0] = x;\n    if (y < min[1]) min[1] = y;\n    if (z < min[2]) min[2] = z;\n\n    if (x > max[0]) max[0] = x;\n    if (y > max[1]) max[1] = y;\n    if (z > max[2]) max[2] = z;\n  }\n\n  const boundingBox = {min, max};\n  validateBoundingBox(boundingBox);\n  return boundingBox;\n}\n\nfunction validateBoundingBox(boundingBox: BoundingBox) {\n  assert(\n    Number.isFinite(boundingBox.min[0]) &&\n      Number.isFinite(boundingBox.min[1]) &&\n      Number.isFinite(boundingBox.min[2]) &&\n      Number.isFinite(boundingBox.max[0]) &&\n      Number.isFinite(boundingBox.max[1]) &&\n      Number.isFinite(boundingBox.max[2])\n  );\n}\n"],"mappings":";;;;;;AAAA;AACA;AAAuC;AAAA;AAAA;AAchC,SAASA,kBAAkB,GAAsB;EAAA,IAArBC,SAAc,uEAAG,EAAE;EACpD,IAAMC,GAAG,GAAG,CAACC,MAAM,CAACC,QAAQ,CAAC,EAAED,MAAM,CAACC,QAAQ,CAAC,EAAED,MAAM,CAACC,QAAQ,CAAC,CAAC;EAClE,IAAMC,GAAG,GAAG,CAAC,CAACD,QAAQ,EAAE,CAACA,QAAQ,EAAE,CAACA,QAAQ,CAAC;EAAC,2CAEvB,IAAAE,wCAAqB,EAACL,SAAS,CAAC;IAAA;EAAA;IAAvD,oDAAyD;MAAA,IAA9CM,QAAQ;MACjB,IAAMC,CAAC,GAAGD,QAAQ,CAAC,CAAC,CAAC;MACrB,IAAME,CAAC,GAAGF,QAAQ,CAAC,CAAC,CAAC;MACrB,IAAMG,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;MAErB,IAAIC,CAAC,GAAGN,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,GAAGM,CAAC;MAC1B,IAAIC,CAAC,GAAGP,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,GAAGO,CAAC;MAC1B,IAAIC,CAAC,GAAGR,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,GAAGQ,CAAC;MAE1B,IAAIF,CAAC,GAAGH,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,GAAGG,CAAC;MAC1B,IAAIC,CAAC,GAAGJ,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,GAAGI,CAAC;MAC1B,IAAIC,CAAC,GAAGL,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,GAAGK,CAAC;IAC5B;EAAC;IAAA;EAAA;IAAA;EAAA;EAED,IAAMC,WAAW,GAAG;IAACT,GAAG,EAAHA,GAAG;IAAEG,GAAG,EAAHA;EAAG,CAAC;EAC9BO,mBAAmB,CAACD,WAAW,CAAC;EAChC,OAAOA,WAAW;AACpB;AAEA,SAASC,mBAAmB,CAACD,WAAwB,EAAE;EACrD,IAAAE,cAAM,EACJV,MAAM,CAACW,QAAQ,CAACH,WAAW,CAACT,GAAG,CAAC,CAAC,CAAC,CAAC,IACjCC,MAAM,CAACW,QAAQ,CAACH,WAAW,CAACT,GAAG,CAAC,CAAC,CAAC,CAAC,IACnCC,MAAM,CAACW,QAAQ,CAACH,WAAW,CAACT,GAAG,CAAC,CAAC,CAAC,CAAC,IACnCC,MAAM,CAACW,QAAQ,CAACH,WAAW,CAACN,GAAG,CAAC,CAAC,CAAC,CAAC,IACnCF,MAAM,CAACW,QAAQ,CAACH,WAAW,CAACN,GAAG,CAAC,CAAC,CAAC,CAAC,IACnCF,MAAM,CAACW,QAAQ,CAACH,WAAW,CAACN,GAAG,CAAC,CAAC,CAAC,CAAC,CACtC;AACH"}