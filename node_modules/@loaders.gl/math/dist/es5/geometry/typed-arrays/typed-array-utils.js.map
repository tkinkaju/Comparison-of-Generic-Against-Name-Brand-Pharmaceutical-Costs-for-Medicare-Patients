{"version":3,"file":"typed-array-utils.js","names":["concatTypedArrays","arrays","byteLength","i","length","buffer","Uint8Array","byteOffset","data","j"],"sources":["../../../../src/geometry/typed-arrays/typed-array-utils.ts"],"sourcesContent":["/**\n * Concats typed arrays\n * @param arrays\n * @returns new Uint8Array\n */\nexport function concatTypedArrays(arrays: any = []): Uint8Array {\n  let byteLength = 0;\n  for (let i = 0; i < arrays.length; ++i) {\n    byteLength += arrays[i].byteLength;\n  }\n  const buffer = new Uint8Array(byteLength);\n\n  let byteOffset = 0;\n  for (let i = 0; i < arrays.length; ++i) {\n    const data = new Uint8Array(arrays[i].buffer);\n    byteLength = data.length;\n    for (let j = 0; j < byteLength; ++j) {\n      buffer[byteOffset++] = data[j];\n    }\n  }\n  return buffer;\n}\n"],"mappings":";;;;;;AAKO,SAASA,iBAAiB,GAA+B;EAAA,IAA9BC,MAAW,uEAAG,EAAE;EAChD,IAAIC,UAAU,GAAG,CAAC;EAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAACG,MAAM,EAAE,EAAED,CAAC,EAAE;IACtCD,UAAU,IAAID,MAAM,CAACE,CAAC,CAAC,CAACD,UAAU;EACpC;EACA,IAAMG,MAAM,GAAG,IAAIC,UAAU,CAACJ,UAAU,CAAC;EAEzC,IAAIK,UAAU,GAAG,CAAC;EAClB,KAAK,IAAIJ,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGF,MAAM,CAACG,MAAM,EAAE,EAAED,EAAC,EAAE;IACtC,IAAMK,IAAI,GAAG,IAAIF,UAAU,CAACL,MAAM,CAACE,EAAC,CAAC,CAACE,MAAM,CAAC;IAC7CH,UAAU,GAAGM,IAAI,CAACJ,MAAM;IACxB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,UAAU,EAAE,EAAEO,CAAC,EAAE;MACnCJ,MAAM,CAACE,UAAU,EAAE,CAAC,GAAGC,IAAI,CAACC,CAAC,CAAC;IAChC;EACF;EACA,OAAOJ,MAAM;AACf"}