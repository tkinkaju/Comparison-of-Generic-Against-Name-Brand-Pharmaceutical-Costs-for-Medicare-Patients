{"version":3,"file":"wrap.js","names":["clip","createFeature","wrap","features","options","buffer","extent","merged","left","right","shiftFeatureCoords","concat","offset","newFeatures","i","length","feature","type","newGeometry","shiftCoords","geometry","line","push","polygon","newPolygon","id","tags","Points","Array","points","newPoints","size","start","undefined","end"],"sources":["../../../../src/lib/geojson-tiler/wrap.ts"],"sourcesContent":["// loaders.gl, MIT license\n// Forked from https://github.com/mapbox/geojson-vt under compatible ISC license\n\nimport type {GeoJSONTileFeature} from './tile';\nimport {clip} from './clip';\nimport {createFeature} from './feature';\n\n/**\n * Options for wrap()\n */\nexport type WrapOptions = {\n  buffer: number /** number of pixels of buffer for the tile */;\n  extent: number /** extent of each tile */;\n  lineMetrics: boolean;\n};\n\n/**\n * Wrap across antemeridian, by clipping into two tiles, shifting the overflowing x coordinates\n * @param features list of features to be wrapped\n * @param options buffer and extent\n * @returns\n */\nexport function wrap(features: GeoJSONTileFeature[], options: WrapOptions) {\n  const buffer = options.buffer / options.extent;\n  let merged: GeoJSONTileFeature[] = features;\n  const left = clip(features, 1, -1 - buffer, buffer, 0, -1, 2, options); // left world copy\n  const right = clip(features, 1, 1 - buffer, 2 + buffer, 0, -1, 2, options); // right world copy\n\n  if (left || right) {\n    merged = clip(features, 1, -buffer, 1 + buffer, 0, -1, 2, options) || []; // center world copy\n\n    if (left) {\n      merged = shiftFeatureCoords(left, 1).concat(merged); // merge left into center\n    }\n    if (right) {\n      merged = merged.concat(shiftFeatureCoords(right, -1)); // merge right into center\n    }\n  }\n\n  return merged;\n}\n\n/**\n * Shift the x coordinates of a list of features\n * @param features list of features to shift x coordinates for\n * @param offset\n * @returns\n */\nfunction shiftFeatureCoords(features: GeoJSONTileFeature[], offset: number): GeoJSONTileFeature[] {\n  const newFeatures: GeoJSONTileFeature[] = [];\n\n  for (let i = 0; i < features.length; i++) {\n    const feature = features[i];\n    const type = feature.type;\n\n    let newGeometry;\n\n    if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n      newGeometry = shiftCoords(feature.geometry, offset);\n    } else if (type === 'MultiLineString' || type === 'Polygon') {\n      newGeometry = [];\n      for (const line of feature.geometry) {\n        newGeometry.push(shiftCoords(line, offset));\n      }\n    } else if (type === 'MultiPolygon') {\n      newGeometry = [];\n      for (const polygon of feature.geometry) {\n        const newPolygon: Points = [];\n        for (const line of polygon) {\n          // @ts-expect-error TODO\n          newPolygon.push(shiftCoords(line, offset));\n        }\n        newGeometry.push(newPolygon);\n      }\n    }\n\n    newFeatures.push(createFeature(feature.id, type, newGeometry, feature.tags));\n  }\n\n  return newFeatures;\n}\n\nclass Points extends Array<number> {\n  size?: number;\n  start?: number;\n  end?: number;\n}\n\n/**\n * Shift the x coordinate of every point\n * @param points\n * @param offset\n * @returns\n */\nfunction shiftCoords(points: Points, offset: number): Points {\n  const newPoints: Points = [];\n  newPoints.size = points.size;\n\n  if (points.start !== undefined) {\n    newPoints.start = points.start;\n    newPoints.end = points.end;\n  }\n\n  for (let i = 0; i < points.length; i += 3) {\n    newPoints.push(points[i] + offset, points[i + 1], points[i + 2]);\n  }\n  return newPoints;\n}\n"],"mappings":";;AAIA,SAAQA,IAAI,QAAO,QAAQ;AAC3B,SAAQC,aAAa,QAAO,WAAW;;AAiBvC,OAAO,SAASC,IAAI,CAACC,QAA8B,EAAEC,OAAoB,EAAE;EACzE,MAAMC,MAAM,GAAGD,OAAO,CAACC,MAAM,GAAGD,OAAO,CAACE,MAAM;EAC9C,IAAIC,MAA4B,GAAGJ,QAAQ;EAC3C,MAAMK,IAAI,GAAGR,IAAI,CAACG,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,GAAGE,MAAM,EAAEA,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAED,OAAO,CAAC;EACtE,MAAMK,KAAK,GAAGT,IAAI,CAACG,QAAQ,EAAE,CAAC,EAAE,CAAC,GAAGE,MAAM,EAAE,CAAC,GAAGA,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAED,OAAO,CAAC;;EAE1E,IAAII,IAAI,IAAIC,KAAK,EAAE;IACjBF,MAAM,GAAGP,IAAI,CAACG,QAAQ,EAAE,CAAC,EAAE,CAACE,MAAM,EAAE,CAAC,GAAGA,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAED,OAAO,CAAC,IAAI,EAAE;;IAExE,IAAII,IAAI,EAAE;MACRD,MAAM,GAAGG,kBAAkB,CAACF,IAAI,EAAE,CAAC,CAAC,CAACG,MAAM,CAACJ,MAAM,CAAC;IACrD;;IACA,IAAIE,KAAK,EAAE;MACTF,MAAM,GAAGA,MAAM,CAACI,MAAM,CAACD,kBAAkB,CAACD,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IACvD;EACF;;EAEA,OAAOF,MAAM;AACf;;AAQA,SAASG,kBAAkB,CAACP,QAA8B,EAAES,MAAc,EAAwB;EAChG,MAAMC,WAAiC,GAAG,EAAE;EAE5C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,QAAQ,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;IACxC,MAAME,OAAO,GAAGb,QAAQ,CAACW,CAAC,CAAC;IAC3B,MAAMG,IAAI,GAAGD,OAAO,CAACC,IAAI;IAEzB,IAAIC,WAAW;IAEf,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,YAAY,EAAE;MACtEC,WAAW,GAAGC,WAAW,CAACH,OAAO,CAACI,QAAQ,EAAER,MAAM,CAAC;IACrD,CAAC,MAAM,IAAIK,IAAI,KAAK,iBAAiB,IAAIA,IAAI,KAAK,SAAS,EAAE;MAC3DC,WAAW,GAAG,EAAE;MAChB,KAAK,MAAMG,IAAI,IAAIL,OAAO,CAACI,QAAQ,EAAE;QACnCF,WAAW,CAACI,IAAI,CAACH,WAAW,CAACE,IAAI,EAAET,MAAM,CAAC,CAAC;MAC7C;IACF,CAAC,MAAM,IAAIK,IAAI,KAAK,cAAc,EAAE;MAClCC,WAAW,GAAG,EAAE;MAChB,KAAK,MAAMK,OAAO,IAAIP,OAAO,CAACI,QAAQ,EAAE;QACtC,MAAMI,UAAkB,GAAG,EAAE;QAC7B,KAAK,MAAMH,IAAI,IAAIE,OAAO,EAAE;UAE1BC,UAAU,CAACF,IAAI,CAACH,WAAW,CAACE,IAAI,EAAET,MAAM,CAAC,CAAC;QAC5C;QACAM,WAAW,CAACI,IAAI,CAACE,UAAU,CAAC;MAC9B;IACF;IAEAX,WAAW,CAACS,IAAI,CAACrB,aAAa,CAACe,OAAO,CAACS,EAAE,EAAER,IAAI,EAAEC,WAAW,EAAEF,OAAO,CAACU,IAAI,CAAC,CAAC;EAC9E;EAEA,OAAOb,WAAW;AACpB;AAEA,MAAMc,MAAM,SAASC,KAAK,CAAS;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AAInC;;AAQA,SAAST,WAAW,CAACU,MAAc,EAAEjB,MAAc,EAAU;EAC3D,MAAMkB,SAAiB,GAAG,EAAE;EAC5BA,SAAS,CAACC,IAAI,GAAGF,MAAM,CAACE,IAAI;EAE5B,IAAIF,MAAM,CAACG,KAAK,KAAKC,SAAS,EAAE;IAC9BH,SAAS,CAACE,KAAK,GAAGH,MAAM,CAACG,KAAK;IAC9BF,SAAS,CAACI,GAAG,GAAGL,MAAM,CAACK,GAAG;EAC5B;EAEA,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGe,MAAM,CAACd,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACzCgB,SAAS,CAACR,IAAI,CAACO,MAAM,CAACf,CAAC,CAAC,GAAGF,MAAM,EAAEiB,MAAM,CAACf,CAAC,GAAG,CAAC,CAAC,EAAEe,MAAM,CAACf,CAAC,GAAG,CAAC,CAAC,CAAC;EAClE;EACA,OAAOgB,SAAS;AAClB"}