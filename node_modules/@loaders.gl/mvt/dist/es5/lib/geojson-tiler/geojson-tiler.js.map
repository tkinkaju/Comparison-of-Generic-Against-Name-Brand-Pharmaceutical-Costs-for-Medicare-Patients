{"version":3,"file":"geojson-tiler.js","names":["DEFAULT_OPTIONS","maxZoom","indexMaxZoom","indexMaxPoints","tolerance","extent","buffer","lineMetrics","promoteId","undefined","generateId","debug","GeoJSONTiler","data","options","console","time","Error","features","convert","timeEnd","log","wrap","length","splitTile","tiles","numFeatures","numPoints","total","JSON","stringify","stats","z","x","y","z2","id","toID","transformTile","z0","x0","y0","parent","source","cz","cx","cy","stack","pop","tile","createTile","tileCoords","push","numSimplified","key","zoomSteps","k1","k2","k3","k4","tl","bl","tr","br","left","clip","minX","maxX","right","minY","maxY"],"sources":["../../../../src/lib/geojson-tiler/geojson-tiler.ts"],"sourcesContent":["// loaders.gl, MIT license\n// Forked from https://github.com/mapbox/geojson-vt under compatible ISC license\n\n/* eslint-disable no-console, no-continue */\n\nimport type {GeoJSONTile, GeoJSONTileFeature} from './tile';\n\nimport {convert} from './convert'; // GeoJSON conversion and preprocessing\nimport {clip} from './clip'; // stripe clipping algorithm\nimport {wrap} from './wrap'; // date line processing\nimport {transformTile} from './transform'; // coordinate transformation\nimport {createTile} from './tile'; // final simplified tile generation\n\n/** Options to configure tiling */\nexport type GeoJSONTilerOptions = {\n  maxZoom?: number /** max zoom to preserve detail on */;\n  indexMaxZoom?: number /** max zoom in the tile index */;\n  indexMaxPoints?: number /** max number of points per tile in the tile index */;\n  tolerance?: number /** simplification tolerance (higher means simpler) */;\n  extent?: number /** tile extent */;\n  buffer?: number /** tile buffer on each side */;\n  lineMetrics?: boolean /** whether to calculate line metrics */;\n  promoteId?: string /** name of a feature property to be promoted to feature.id */;\n  generateId?: boolean /** whether to generate feature ids. Cannot be used with promoteId */;\n  debug?: number /** logging level (0, 1 or 2) */;\n};\n\nconst DEFAULT_OPTIONS: Required<GeoJSONTilerOptions> = {\n  maxZoom: 14, // max zoom to preserve detail on\n  indexMaxZoom: 5, // max zoom in the tile index\n  indexMaxPoints: 100000, // max number of points per tile in the tile index\n  tolerance: 3, // simplification tolerance (higher means simpler)\n  extent: 4096, // tile extent\n  buffer: 64, // tile buffer on each side\n  lineMetrics: false, // whether to calculate line metrics\n  // @ts-expect-error Ensures all these required params have defaults\n  promoteId: undefined, // name of a feature property to be promoted to feature.id\n  generateId: false, // whether to generate feature ids. Cannot be used with promoteId\n  debug: 0 // logging level (0, 1 or 2)\n};\n\nexport class GeoJSONTiler {\n  options: Required<GeoJSONTilerOptions>;\n\n  // tiles and tileCoords are part of the public API\n  tiles: Record<string, GeoJSONTile> = {};\n  tileCoords: {x: number; y: number; z: number}[] = [];\n\n  stats: Record<string, number> = {};\n  total: number = 0;\n\n  constructor(data, options?: GeoJSONTilerOptions) {\n    this.options = {...DEFAULT_OPTIONS, ...options};\n    options = this.options;\n\n    const debug = options.debug;\n\n    if (debug) console.time('preprocess data');\n\n    if (this.options.maxZoom < 0 || this.options.maxZoom > 24) {\n      throw new Error('maxZoom should be in the 0-24 range');\n    }\n    if (options.promoteId && this.options.generateId) {\n      throw new Error('promoteId and generateId cannot be used together.');\n    }\n\n    // projects and adds simplification info\n    let features = convert(data, options);\n\n    if (debug) {\n      console.timeEnd('preprocess data');\n      console.log(\n        'index: maxZoom: %d, maxPoints: %d',\n        options.indexMaxZoom,\n        options.indexMaxPoints\n      );\n      console.time('generate tiles');\n    }\n\n    // wraps features (ie extreme west and extreme east)\n    features = wrap(features, this.options);\n\n    // start slicing from the top tile down\n    if (features.length) {\n      this.splitTile(features, 0, 0, 0);\n    }\n\n    if (debug) {\n      if (features.length) {\n        console.log('features: %d, points: %d', this.tiles[0].numFeatures, this.tiles[0].numPoints);\n      }\n      console.timeEnd('generate tiles');\n      console.log('tiles generated:', this.total, JSON.stringify(this.stats));\n    }\n  }\n\n  /**\n   * Get a tile at the specified index\n   * @param z\n   * @param x\n   * @param y\n   * @returns\n   */\n  // eslint-disable-next-line complexity, max-statements\n  getTile(z: number, x: number, y: number): GeoJSONTile | null {\n    // z = +z;\n    // x = +x;\n    // y = +y;\n\n    const {extent, debug} = this.options;\n\n    if (z < 0 || z > 24) {\n      return null;\n    }\n\n    const z2 = 1 << z;\n    x = (x + z2) & (z2 - 1); // wrap tile x coordinate\n\n    const id = toID(z, x, y);\n    if (this.tiles[id]) {\n      return transformTile(this.tiles[id], extent);\n    }\n\n    if (debug > 1) console.log('drilling down to z%d-%d-%d', z, x, y);\n\n    let z0 = z;\n    let x0 = x;\n    let y0 = y;\n    let parent;\n\n    while (!parent && z0 > 0) {\n      z0--;\n      x0 = x0 >> 1;\n      y0 = y0 >> 1;\n      parent = this.tiles[toID(z0, x0, y0)];\n    }\n\n    if (!parent || !parent.source) {\n      return null;\n    }\n\n    // if we found a parent tile containing the original geometry, we can drill down from it\n    if (debug > 1) {\n      console.log('found parent tile z%d-%d-%d', z0, x0, y0);\n      console.time('drilling down');\n    }\n    this.splitTile(parent.source, z0, x0, y0, z, x, y);\n    if (debug > 1) {\n      console.timeEnd('drilling down');\n    }\n\n    return this.tiles[id] ? transformTile(this.tiles[id], extent) : null;\n  }\n\n  /**\n   * splits features from a parent tile to sub-tiles.\n   * @param z, x, and y are the coordinates of the parent tile\n   * @param cz, cx, and cy are the coordinates of the target tile\n   *\n   * If no target tile is specified, splitting stops when we reach the maximum\n   * zoom or the number of points is low as specified in the options.\n   */\n  // eslint-disable-next-line max-params, max-statements, complexity\n  splitTile(\n    features: GeoJSONTileFeature[],\n    z: number,\n    x: number,\n    y: number,\n    cz?: number,\n    cx?: number,\n    cy?: number\n  ): void {\n    const stack: any[] = [features, z, x, y];\n    const options = this.options;\n    const debug = options.debug;\n\n    // avoid recursion by using a processing queue\n    while (stack.length) {\n      y = stack.pop();\n      x = stack.pop();\n      z = stack.pop();\n      features = stack.pop();\n\n      const z2 = 1 << z;\n      const id = toID(z, x, y);\n      let tile = this.tiles[id];\n\n      if (!tile) {\n        if (debug > 1) {\n          console.time('creation');\n        }\n\n        tile = this.tiles[id] = createTile(features, z, x, y, options);\n        this.tileCoords.push({z, x, y});\n\n        if (debug) {\n          if (debug > 1) {\n            console.log(\n              'tile z%d-%d-%d (features: %d, points: %d, simplified: %d)',\n              z,\n              x,\n              y,\n              tile.numFeatures,\n              tile.numPoints,\n              tile.numSimplified\n            );\n            console.timeEnd('creation');\n          }\n          const key = `z${z}`;\n          this.stats[key] = (this.stats[key] || 0) + 1;\n          this.total++;\n        }\n      }\n\n      // save reference to original geometry in tile so that we can drill down later if we stop now\n      tile.source = features;\n\n      // if it's the first-pass tiling\n      if (cz === undefined) {\n        // stop tiling if we reached max zoom, or if the tile is too simple\n        if (z === options.indexMaxZoom || tile.numPoints <= options.indexMaxPoints) continue;\n        // if a drilldown to a specific tile\n      } else if (z === options.maxZoom || z === cz) {\n        // stop tiling if we reached base zoom or our target tile zoom\n        continue;\n      } else if (cz !== undefined) {\n        // stop tiling if it's not an ancestor of the target tile\n        const zoomSteps = cz - z;\n        // @ts-expect-error TODO fix the types of cx cy\n        if (x !== cx >> zoomSteps || y !== cy >> zoomSteps) continue;\n      }\n\n      // if we slice further down, no need to keep source geometry\n      tile.source = null;\n\n      if (features.length === 0) continue;\n\n      if (debug > 1) console.time('clipping');\n\n      // values we'll use for clipping\n      const k1 = (0.5 * options.buffer) / options.extent;\n      const k2 = 0.5 - k1;\n      const k3 = 0.5 + k1;\n      const k4 = 1 + k1;\n\n      let tl: GeoJSONTileFeature[] | null = null;\n      let bl: GeoJSONTileFeature[] | null = null;\n      let tr: GeoJSONTileFeature[] | null = null;\n      let br: GeoJSONTileFeature[] | null = null;\n\n      let left = clip(features, z2, x - k1, x + k3, 0, tile.minX, tile.maxX, options);\n      let right = clip(features, z2, x + k2, x + k4, 0, tile.minX, tile.maxX, options);\n\n      // @ts-expect-error - unclear why this is needed?\n      features = null;\n\n      if (left) {\n        tl = clip(left, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n        bl = clip(left, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n        left = null;\n      }\n\n      if (right) {\n        tr = clip(right, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n        br = clip(right, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n        right = null;\n      }\n\n      if (debug > 1) console.timeEnd('clipping');\n\n      stack.push(tl || [], z + 1, x * 2, y * 2);\n      stack.push(bl || [], z + 1, x * 2, y * 2 + 1);\n      stack.push(tr || [], z + 1, x * 2 + 1, y * 2);\n      stack.push(br || [], z + 1, x * 2 + 1, y * 2 + 1);\n    }\n  }\n}\n\nfunction toID(z, x, y) {\n  return ((1 << z) * y + x) * 32 + z;\n}\n"],"mappings":"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"}