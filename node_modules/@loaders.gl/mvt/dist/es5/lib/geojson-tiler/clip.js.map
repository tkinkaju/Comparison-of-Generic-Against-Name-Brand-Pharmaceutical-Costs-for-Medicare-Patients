{"version":3,"file":"clip.js","names":["clip","features","scale","k1","k2","axis","minAll","maxAll","options","clipped","feature","geometry","type","min","minX","minY","max","maxX","maxY","push","newGeometry","clipPoints","clipLine","lineMetrics","clipLines","polygon","newPolygon","length","line","createFeature","id","tags","geom","newGeom","i","a","addPoint","isPolygon","trackMetrics","slice","newSlice","intersect","intersectX","intersectY","len","start","segLen","t","ax","ay","az","bx","by","b","exited","Math","sqrt","pow","end","last","Slice","Array","size","out","x","y","z"],"sources":["../../../../src/lib/geojson-tiler/clip.ts"],"sourcesContent":["// loaders.gl, MIT license\n// Forked from https://github.com/mapbox/geojson-vt under compatible ISC license\n\nimport type {GeoJSONTileFeature} from './tile';\nimport {createFeature} from './feature';\n\n/* eslint-disable no-continue */\n\n/**\n * Clip features between two vertical or horizontal axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n *\n * @param k1 and k2 are the line coordinates\n * @param axis: 0 for x, 1 for y\n * @param minAll and maxAll: minimum and maximum coordinate value for all features\n */\n// eslint-disable-next-line max-params, complexity, max-statements\nexport function clip(\n  features: GeoJSONTileFeature[],\n  scale: number,\n  k1: number,\n  k2: number,\n  axis,\n  minAll: number,\n  maxAll: number,\n  options: {lineMetrics: boolean}\n): GeoJSONTileFeature[] | null {\n  k1 /= scale;\n  k2 /= scale;\n\n  if (minAll >= k1 && maxAll < k2) {\n    return features;\n  }\n  // trivial accept\n  else if (maxAll < k1 || minAll >= k2) {\n    return null; // trivial reject\n  }\n\n  const clipped: GeoJSONTileFeature[] = [];\n\n  for (const feature of features) {\n    const geometry = feature.geometry;\n    let type = feature.type;\n\n    const min = axis === 0 ? feature.minX : feature.minY;\n    const max = axis === 0 ? feature.maxX : feature.maxY;\n\n    if (min >= k1 && max < k2) {\n      // trivial accept\n      clipped.push(feature);\n      continue;\n    } else if (max < k1 || min >= k2) {\n      // trivial reject\n      continue;\n    }\n\n    let newGeometry: number[][][] | number[][] = [];\n\n    if (type === 'Point' || type === 'MultiPoint') {\n      clipPoints(geometry, newGeometry, k1, k2, axis);\n    } else if (type === 'LineString') {\n      clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n    } else if (type === 'MultiLineString') {\n      clipLines(geometry, newGeometry, k1, k2, axis, false);\n    } else if (type === 'Polygon') {\n      clipLines(geometry, newGeometry, k1, k2, axis, true);\n    } else if (type === 'MultiPolygon') {\n      for (const polygon of geometry) {\n        const newPolygon = [];\n        clipLines(polygon, newPolygon, k1, k2, axis, true);\n        if (newPolygon.length) {\n          newGeometry.push(newPolygon);\n        }\n      }\n    }\n\n    if (newGeometry.length) {\n      if (options.lineMetrics && type === 'LineString') {\n        for (const line of newGeometry) {\n          clipped.push(createFeature(feature.id, type, line, feature.tags));\n        }\n        continue;\n      }\n\n      if (type === 'LineString' || type === 'MultiLineString') {\n        if (newGeometry.length === 1) {\n          type = 'LineString';\n          // @ts-expect-error TODO - use proper GeoJSON geometry types\n          newGeometry = newGeometry[0];\n        } else {\n          type = 'MultiLineString';\n        }\n      }\n      if (type === 'Point' || type === 'MultiPoint') {\n        type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n      }\n\n      clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n  }\n\n  return clipped.length ? clipped : null;\n}\n\nfunction clipPoints(geom, newGeom, k1: number, k2: number, axis): void {\n  for (let i = 0; i < geom.length; i += 3) {\n    const a = geom[i + axis];\n\n    if (a >= k1 && a <= k2) {\n      addPoint(newGeom, geom[i], geom[i + 1], geom[i + 2]);\n    }\n  }\n}\n\n// eslint-disable-next-line max-params, complexity, max-statements\nfunction clipLine(\n  geom,\n  newGeom,\n  k1: number,\n  k2: number,\n  axis,\n  isPolygon: boolean,\n  trackMetrics: boolean\n): void {\n  let slice = newSlice(geom);\n  const intersect = axis === 0 ? intersectX : intersectY;\n  let len = geom.start;\n  let segLen;\n  let t;\n\n  for (let i = 0; i < geom.length - 3; i += 3) {\n    const ax = geom[i];\n    const ay = geom[i + 1];\n    const az = geom[i + 2];\n    const bx = geom[i + 3];\n    const by = geom[i + 4];\n    const a = axis === 0 ? ax : ay;\n    const b = axis === 0 ? bx : by;\n    let exited = false;\n\n    if (trackMetrics) {\n      segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n    }\n\n    if (a < k1) {\n      // ---|-->  | (line enters the clip region from the left)\n      if (b > k1) {\n        t = intersect(slice, ax, ay, bx, by, k1);\n        if (trackMetrics) {\n          slice.start = len + segLen * t;\n        }\n      }\n    } else if (a > k2) {\n      // |  <--|--- (line enters the clip region from the right)\n      if (b < k2) {\n        t = intersect(slice, ax, ay, bx, by, k2);\n        if (trackMetrics) {\n          slice.start = len + segLen * t;\n        }\n      }\n    } else {\n      addPoint(slice, ax, ay, az);\n    }\n    if (b < k1 && a >= k1) {\n      // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n      t = intersect(slice, ax, ay, bx, by, k1);\n      exited = true;\n    }\n    if (b > k2 && a <= k2) {\n      // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n      t = intersect(slice, ax, ay, bx, by, k2);\n      exited = true;\n    }\n\n    if (!isPolygon && exited) {\n      if (trackMetrics) {\n        slice.end = len + segLen * t;\n      }\n      newGeom.push(slice);\n      slice = newSlice(geom);\n    }\n\n    if (trackMetrics) {\n      len += segLen;\n    }\n  }\n\n  // add the last point\n  let last = geom.length - 3;\n  const ax = geom[last];\n  const ay = geom[last + 1];\n  const az = geom[last + 2];\n  const a = axis === 0 ? ax : ay;\n  if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n  // close the polygon if its endpoints are not the same after clipping\n  last = slice.length - 3;\n  if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n    addPoint(slice, slice[0], slice[1], slice[2]);\n  }\n\n  // add the final slice\n  if (slice.length) {\n    newGeom.push(slice);\n  }\n}\n\nclass Slice extends Array<number> {\n  size?: number;\n  start?: number;\n  end?: number;\n}\n\nfunction newSlice(line: {size: number; start: number; end: number}): Slice {\n  const slice: Slice = [];\n  slice.size = line.size;\n  slice.start = line.start;\n  slice.end = line.end;\n  return slice;\n}\n\n// eslint-disable-next-line max-params\nfunction clipLines(geom, newGeom, k1: number, k2: number, axis, isPolygon: boolean): void {\n  for (const line of geom) {\n    clipLine(line, newGeom, k1, k2, axis, isPolygon, false);\n  }\n}\n\nfunction addPoint(out: number[], x: number, y: number, z: number): void {\n  out.push(x, y, z);\n}\n\n// eslint-disable-next-line max-params\nfunction intersectX(out, ax: number, ay: number, bx: number, by: number, x: number): number {\n  const t = (x - ax) / (bx - ax);\n  addPoint(out, x, ay + (by - ay) * t, 1);\n  return t;\n}\n\n// eslint-disable-next-line max-params\nfunction intersectY(out, ax: number, ay: number, bx: number, by: number, y): number {\n  const t = (y - ay) / (by - ay);\n  addPoint(out, ax + (bx - ax) * t, y, 1);\n  return t;\n}\n"],"mappings":"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"}