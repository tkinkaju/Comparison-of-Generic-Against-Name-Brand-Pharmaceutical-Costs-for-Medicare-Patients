"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._typecheckXMLLoader = exports.XMLLoader = void 0;
const parse_xml_1 = require("./lib/parse-xml");
// __VERSION__ is injected by babel-plugin-version-inline
// @ts-ignore TS2304: Cannot find name '__VERSION__'.
const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';
/**
 * Worker loader for the OBJ geometry format
 */
exports.XMLLoader = {
    name: 'XML',
    id: 'xml',
    module: 'xml',
    version: VERSION,
    worker: false,
    extensions: ['xml'],
    mimeTypes: ['application/xml', 'text/xml'],
    testText: testXMLFile,
    options: {
        xml: {}
    },
    parse: async (arrayBuffer, options) => (0, parse_xml_1.parseXML)(new TextDecoder().decode(arrayBuffer), options),
    parseTextSync: (text, options) => (0, parse_xml_1.parseXML)(text, options)
};
function testXMLFile(text) {
    // TODO - There could be space first.
    return text.startsWith('<?xml');
}
exports._typecheckXMLLoader = exports.XMLLoader;
