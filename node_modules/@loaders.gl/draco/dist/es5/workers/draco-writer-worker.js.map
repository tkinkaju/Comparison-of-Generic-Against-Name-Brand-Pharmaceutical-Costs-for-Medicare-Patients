{"version":3,"file":"draco-writer-worker.js","names":["WorkerBody","inWorkerThread","onmessage","type","payload","input","options","DracoWriter","encode","result","postMessage","message","Error","error"],"sources":["../../../src/workers/draco-writer-worker.ts"],"sourcesContent":["import {WorkerBody, WorkerMessagePayload} from '@loaders.gl/worker-utils';\nimport {DracoWriter} from '../draco-writer';\n\n(() => {\n  // Check that we are actually in a worker thread\n  if (!WorkerBody.inWorkerThread()) {\n    return;\n  }\n\n  WorkerBody.onmessage = async (type, payload: WorkerMessagePayload) => {\n    switch (type) {\n      case 'process':\n        try {\n          const {input, options} = payload;\n          const result = await DracoWriter.encode!(input, options);\n          WorkerBody.postMessage('done', {result});\n        } catch (error) {\n          const message = error instanceof Error ? error.message : '';\n          WorkerBody.postMessage('error', {error: message});\n        }\n        break;\n      default:\n    }\n  };\n})();\n"],"mappings":";;;;;AAAA;AACA;AAEA,CAAC,YAAM;EAEL,IAAI,CAACA,uBAAU,CAACC,cAAc,EAAE,EAAE;IAChC;EACF;EAEAD,uBAAU,CAACE,SAAS;IAAA,qEAAG,iBAAOC,IAAI,EAAEC,OAA6B;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,cACvDD,IAAI;cAAA,gCACL,SAAS;cAAA;YAAA;cAAA;cAEHE,KAAK,GAAaD,OAAO,CAAzBC,KAAK,EAAEC,OAAO,GAAIF,OAAO,CAAlBE,OAAO;cAAA;cAAA,OACAC,wBAAW,CAACC,MAAM,CAAEH,KAAK,EAAEC,OAAO,CAAC;YAAA;cAAlDG,MAAM;cACZT,uBAAU,CAACU,WAAW,CAAC,MAAM,EAAE;gBAACD,MAAM,EAANA;cAAM,CAAC,CAAC;cAAC;cAAA;YAAA;cAAA;cAAA;cAEnCE,OAAO,GAAG,uBAAiBC,KAAK,GAAG,YAAMD,OAAO,GAAG,EAAE;cAC3DX,uBAAU,CAACU,WAAW,CAAC,OAAO,EAAE;gBAACG,KAAK,EAAEF;cAAO,CAAC,CAAC;YAAC;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAKzD;IAAA;MAAA;IAAA;EAAA;AACH,CAAC,GAAG"}