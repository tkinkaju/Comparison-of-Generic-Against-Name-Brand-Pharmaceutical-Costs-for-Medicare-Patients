{"version":3,"file":"draco-module-loader.js","names":["loadLibrary","DRACO_DECODER_VERSION","DRACO_ENCODER_VERSION","STATIC_DECODER_URL","DRACO_JS_DECODER_URL","DRACO_WASM_WRAPPER_URL","DRACO_WASM_DECODER_URL","DRACO_ENCODER_URL","loadDecoderPromise","loadEncoderPromise","loadDracoDecoderModule","options","modules","draco3d","createDecoderModule","then","draco","loadDracoDecoder","loadDracoEncoderModule","createEncoderModule","loadDracoEncoder","DracoDecoderModule","wasmBinary","decoderType","Promise","all","globalThis","initializeDracoDecoder","resolve","onModuleLoaded","DracoEncoderModule"],"sources":["../../../src/lib/draco-module-loader.ts"],"sourcesContent":["// Dynamic DRACO module loading inspired by THREE.DRACOLoader\n// https://github.com/mrdoob/three.js/blob/398c4f39ebdb8b23eefd4a7a5ec49ec0c96c7462/examples/jsm/loaders/DRACOLoader.js\n// by Don McCurdy / https://www.donmccurdy.com / MIT license\n\nimport {loadLibrary} from '@loaders.gl/worker-utils';\n\nconst DRACO_DECODER_VERSION = '1.5.5';\nconst DRACO_ENCODER_VERSION = '1.4.1';\n\nconst STATIC_DECODER_URL = `https://www.gstatic.com/draco/versioned/decoders/${DRACO_DECODER_VERSION}`;\n\nconst DRACO_JS_DECODER_URL = `${STATIC_DECODER_URL}/draco_decoder.js`;\nconst DRACO_WASM_WRAPPER_URL = `${STATIC_DECODER_URL}/draco_wasm_wrapper.js`;\nconst DRACO_WASM_DECODER_URL = `${STATIC_DECODER_URL}/draco_decoder.wasm`;\n\nconst DRACO_ENCODER_URL = `https://raw.githubusercontent.com/google/draco/${DRACO_ENCODER_VERSION}/javascript/draco_encoder.js`;\n\nlet loadDecoderPromise;\nlet loadEncoderPromise;\n\nexport async function loadDracoDecoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadDecoderPromise =\n      loadDecoderPromise ||\n      modules.draco3d.createDecoderModule({}).then((draco) => {\n        return {draco};\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadDecoderPromise = loadDecoderPromise || loadDracoDecoder(options);\n  }\n  return await loadDecoderPromise;\n}\n\nexport async function loadDracoEncoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadEncoderPromise =\n      loadEncoderPromise ||\n      modules.draco3d.createEncoderModule({}).then((draco) => {\n        return {draco};\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadEncoderPromise = loadEncoderPromise || loadDracoEncoder(options);\n  }\n  return await loadEncoderPromise;\n}\n\n// DRACO DECODER LOADING\n\nasync function loadDracoDecoder(options) {\n  let DracoDecoderModule;\n  let wasmBinary;\n  switch (options.draco && options.draco.decoderType) {\n    case 'js':\n      DracoDecoderModule = await loadLibrary(DRACO_JS_DECODER_URL, 'draco', options);\n      break;\n\n    case 'wasm':\n    default:\n      [DracoDecoderModule, wasmBinary] = await Promise.all([\n        await loadLibrary(DRACO_WASM_WRAPPER_URL, 'draco', options),\n        await loadLibrary(DRACO_WASM_DECODER_URL, 'draco', options)\n      ]);\n  }\n  // Depends on how import happened...\n  // @ts-ignore\n  DracoDecoderModule = DracoDecoderModule || globalThis.DracoDecoderModule;\n  return await initializeDracoDecoder(DracoDecoderModule, wasmBinary);\n}\n\nfunction initializeDracoDecoder(DracoDecoderModule, wasmBinary) {\n  const options: {wasmBinary?: any} = {};\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    DracoDecoderModule({\n      ...options,\n      onModuleLoaded: (draco) => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n\n// ENCODER\n\nasync function loadDracoEncoder(options) {\n  let DracoEncoderModule = await loadLibrary(DRACO_ENCODER_URL, 'draco', options);\n  // @ts-ignore\n  DracoEncoderModule = DracoEncoderModule || globalThis.DracoEncoderModule;\n\n  return new Promise((resolve) => {\n    DracoEncoderModule({\n      onModuleLoaded: (draco) => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n"],"mappings":"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"}