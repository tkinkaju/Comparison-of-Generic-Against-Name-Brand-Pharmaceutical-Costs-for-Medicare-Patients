{"version":3,"file":"load-image-cube.js","names":["GL_TEXTURE_CUBE_MAP_POSITIVE_X","GL_TEXTURE_CUBE_MAP_NEGATIVE_X","GL_TEXTURE_CUBE_MAP_POSITIVE_Y","GL_TEXTURE_CUBE_MAP_NEGATIVE_Y","GL_TEXTURE_CUBE_MAP_POSITIVE_Z","GL_TEXTURE_CUBE_MAP_NEGATIVE_Z","CUBE_FACES","face","direction","axis","sign","getImageCubeUrls","getUrl","options","urls","promises","index","i","promise","getImageUrls","then","url","push","length","Promise","all","loadImageTextureCube","deepLoad","ImageLoader","parse"],"sources":["../../../../src/lib/texture-api/load-image-cube.ts"],"sourcesContent":["// loaders.gl, MIT license\nimport {ImageLoader} from '@loaders.gl/images';\nimport type {GetUrl, UrlOptions} from './texture-api-types';\nimport {getImageUrls} from './load-image';\nimport {deepLoad} from './deep-load';\n\n// Returned map will be have keys corresponding to GL cubemap constants\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851a;\n\nconst CUBE_FACES = [\n  {face: GL_TEXTURE_CUBE_MAP_POSITIVE_X, direction: 'right', axis: 'x', sign: 'positive'},\n  {face: GL_TEXTURE_CUBE_MAP_NEGATIVE_X, direction: 'left', axis: 'x', sign: 'negative'},\n  {face: GL_TEXTURE_CUBE_MAP_POSITIVE_Y, direction: 'top', axis: 'y', sign: 'positive'},\n  {face: GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, direction: 'bottom', axis: 'y', sign: 'negative'},\n  {face: GL_TEXTURE_CUBE_MAP_POSITIVE_Z, direction: 'front', axis: 'z', sign: 'positive'},\n  {face: GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, direction: 'back', axis: 'z', sign: 'negative'}\n];\n\nexport type ImageCubeTexture = {\n  GL_TEXTURE_CUBE_MAP_POSITIVE_X: any;\n  GL_TEXTURE_CUBE_MAP_NEGATIVE_X: any;\n  GL_TEXTURE_CUBE_MAP_POSITIVE_Y: any;\n  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y: any;\n  GL_TEXTURE_CUBE_MAP_POSITIVE_Z: any;\n  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z: any;\n};\n\n// Returns an object with six key-value pairs containing the urls (or url mip arrays)\n// for each cube face\nexport async function getImageCubeUrls(getUrl: GetUrl, options: UrlOptions) {\n  // Calculate URLs\n  const urls: Record<number, string | string[]> = {};\n  const promises: Promise<any>[] = [];\n\n  let index = 0;\n  for (let i = 0; i < CUBE_FACES.length; ++i) {\n    const face = CUBE_FACES[index];\n    const promise = getImageUrls(getUrl, options, {...face, index: index++}).then((url) => {\n      urls[face.face] = url;\n    });\n    promises.push(promise);\n  }\n\n  await Promise.all(promises);\n\n  return urls;\n}\n\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function loadImageTextureCube(\n  getUrl: GetUrl,\n  options = {}\n): Promise<ImageCubeTexture> {\n  const urls = await getImageCubeUrls(getUrl, options);\n  return (await deepLoad(urls, ImageLoader.parse, options)) as ImageCubeTexture;\n}\n"],"mappings":";;;;;;;;;;;AACA;AAEA;AACA;AAAqC;AAAA;AAGrC,IAAMA,8BAA8B,GAAG,MAAM;AAC7C,IAAMC,8BAA8B,GAAG,MAAM;AAC7C,IAAMC,8BAA8B,GAAG,MAAM;AAC7C,IAAMC,8BAA8B,GAAG,MAAM;AAC7C,IAAMC,8BAA8B,GAAG,MAAM;AAC7C,IAAMC,8BAA8B,GAAG,MAAM;AAE7C,IAAMC,UAAU,GAAG,CACjB;EAACC,IAAI,EAAEP,8BAA8B;EAAEQ,SAAS,EAAE,OAAO;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACvF;EAACH,IAAI,EAAEN,8BAA8B;EAAEO,SAAS,EAAE,MAAM;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACtF;EAACH,IAAI,EAAEL,8BAA8B;EAAEM,SAAS,EAAE,KAAK;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACrF;EAACH,IAAI,EAAEJ,8BAA8B;EAAEK,SAAS,EAAE,QAAQ;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACxF;EAACH,IAAI,EAAEH,8BAA8B;EAAEI,SAAS,EAAE,OAAO;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACvF;EAACH,IAAI,EAAEF,8BAA8B;EAAEG,SAAS,EAAE,MAAM;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,CACvF;AAAC,SAaoBC,gBAAgB;EAAA;AAAA;AAAA;EAAA,8EAA/B,iBAAgCC,MAAc,EAAEC,OAAmB;IAAA;IAAA;MAAA;QAAA;UAAA;YAElEC,IAAuC,GAAG,CAAC,CAAC;YAC5CC,QAAwB,GAAG,EAAE;YAE/BC,KAAK,GAAG,CAAC;YAAA,uBACJC,CAAC;cACR,IAAMV,IAAI,GAAGD,UAAU,CAACU,KAAK,CAAC;cAC9B,IAAME,OAAO,GAAG,IAAAC,uBAAY,EAACP,MAAM,EAAEC,OAAO,kCAAMN,IAAI;gBAAES,KAAK,EAAEA,KAAK;cAAE,GAAE,CAACI,IAAI,CAAC,UAACC,GAAG,EAAK;gBACrFP,IAAI,CAACP,IAAI,CAACA,IAAI,CAAC,GAAGc,GAAG;cACvB,CAAC,CAAC;cACFN,QAAQ,CAACO,IAAI,CAACJ,OAAO,CAAC;YAAC;YALzB,KAASD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,UAAU,CAACiB,MAAM,EAAE,EAAEN,CAAC,EAAE;cAAA,MAAnCA,CAAC;YAMV;YAAC;YAAA,OAEKO,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;UAAA;YAAA,iCAEpBD,IAAI;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACZ;EAAA;AAAA;AAAA,SAIqBY,oBAAoB;EAAA;AAAA;AAAA;EAAA,kFAAnC,kBACLd,MAAc;IAAA;MAAA;MAAA;IAAA;MAAA;QAAA;UAAA;YACdC,OAAO,8DAAG,CAAC,CAAC;YAAA;YAAA,OAEOF,gBAAgB,CAACC,MAAM,EAAEC,OAAO,CAAC;UAAA;YAA9CC,IAAI;YAAA;YAAA,OACI,IAAAa,kBAAQ,EAACb,IAAI,EAAEc,mBAAW,CAACC,KAAK,EAAEhB,OAAO,CAAC;UAAA;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACzD;EAAA;AAAA"}