{"version":3,"file":"basis-module-loader.js","names":["VERSION","BASIS_CDN_ENCODER_WASM","BASIS_CDN_ENCODER_JS","loadBasisTranscoderPromise","loadBasisTrascoderModule","options","modules","basis","loadBasisTrascoder","BASIS","wasmBinary","Promise","loadLibrary","all","globalThis","initializeBasisTrascoderModule","BasisModule","resolve","then","module","BasisFile","initializeBasis","loadBasisEncoderPromise","loadBasisEncoderModule","basisEncoder","loadBasisEncoder","BASIS_ENCODER","initializeBasisEncoderModule","BasisEncoderModule","KTX2File","BasisEncoder"],"sources":["../../../../src/lib/parsers/basis-module-loader.ts"],"sourcesContent":["// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'beta';\n\n// @ts-nocheck\nimport {loadLibrary} from '@loaders.gl/worker-utils';\n\nconst BASIS_CDN_ENCODER_WASM = `https://unpkg.com/@loaders.gl/textures@${VERSION}/dist/libs/basis_encoder.wasm`;\nconst BASIS_CDN_ENCODER_JS = `https://unpkg.com/@loaders.gl/textures@${VERSION}/dist/libs/basis_encoder.js`;\n\nlet loadBasisTranscoderPromise;\n\n/**\n * Loads wasm transcoder module\n * @param options\n * @returns {BasisFile} promise\n */\nexport async function loadBasisTrascoderModule(options) {\n  const modules = options.modules || {};\n  if (modules.basis) {\n    return modules.basis;\n  }\n\n  loadBasisTranscoderPromise = loadBasisTranscoderPromise || loadBasisTrascoder(options);\n  return await loadBasisTranscoderPromise;\n}\n\n/**\n * Loads wasm transcoder module\n * @param options\n * @returns {BasisFile} promise\n */\nasync function loadBasisTrascoder(options) {\n  let BASIS = null;\n  let wasmBinary = null;\n\n  [BASIS, wasmBinary] = await Promise.all([\n    await loadLibrary('basis_transcoder.js', 'textures', options),\n    await loadLibrary('basis_transcoder.wasm', 'textures', options)\n  ]);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  BASIS = BASIS || globalThis.BASIS;\n  return await initializeBasisTrascoderModule(BASIS, wasmBinary);\n}\n\n/**\n * Initialize wasm transcoder module\n * @param BasisModule - js part of the module\n * @param wasmBinary - wasm part of the module\n * @returns {BasisFile} promise\n */\nfunction initializeBasisTrascoderModule(BasisModule, wasmBinary) {\n  const options: {wasmBinary?} = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    // if you try to return BasisModule the browser crashes!\n    BasisModule(options).then((module) => {\n      const {BasisFile, initializeBasis} = module;\n      initializeBasis();\n      resolve({BasisFile});\n    });\n  });\n}\n\nlet loadBasisEncoderPromise;\n\n/**\n * Loads wasm encoder module\n * @param options\n * @returns {BasisFile, KTX2File} promise\n */\nexport async function loadBasisEncoderModule(options) {\n  const modules = options.modules || {};\n  if (modules.basisEncoder) {\n    return modules.basisEncoder;\n  }\n\n  loadBasisEncoderPromise = loadBasisEncoderPromise || loadBasisEncoder(options);\n  return await loadBasisEncoderPromise;\n}\n\n/**\n * Loads wasm encoder module\n * @param options\n * @returns {BasisFile, KTX2File} promise\n */\nasync function loadBasisEncoder(options) {\n  let BASIS_ENCODER = null;\n  let wasmBinary = null;\n\n  [BASIS_ENCODER, wasmBinary] = await Promise.all([\n    await loadLibrary(BASIS_CDN_ENCODER_JS, 'textures', options),\n    await loadLibrary(BASIS_CDN_ENCODER_WASM, 'textures', options)\n  ]);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  BASIS_ENCODER = BASIS_ENCODER || globalThis.BASIS;\n  return await initializeBasisEncoderModule(BASIS_ENCODER, wasmBinary);\n}\n\n/**\n * Initialize wasm transcoder module\n * @param BasisEncoderModule - js part of the module\n * @param wasmBinary - wasm part of the module\n * @returns {BasisFile, KTX2File} promise\n */\nfunction initializeBasisEncoderModule(BasisEncoderModule, wasmBinary) {\n  const options: {wasmBinary?} = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    // if you try to return BasisModule the browser crashes!\n    BasisEncoderModule(options).then((module) => {\n      const {BasisFile, KTX2File, initializeBasis, BasisEncoder} = module;\n      initializeBasis();\n      resolve({BasisFile, KTX2File, BasisEncoder});\n    });\n  });\n}\n"],"mappings":"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"}