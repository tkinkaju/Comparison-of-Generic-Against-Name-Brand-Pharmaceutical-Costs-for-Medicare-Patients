{"version":3,"file":"flat-geojson-to-binary-types.js","names":[],"sources":["../../../src/lib/flat-geojson-to-binary-types.ts"],"sourcesContent":["import type {TypedArray} from '@loaders.gl/schema';\n\n/**\n * Permissable constructor for numeric props\n */\nexport type PropArrayConstructor =\n  | Float32ArrayConstructor\n  | Float64ArrayConstructor\n  | ArrayConstructor;\n\n/**\n * Collection type for holding intermediate binary data before conversion to `BinaryPointGeometry`\n */\nexport type Points = {\n  type: 'Point';\n  positions: Float32Array | Float64Array;\n  globalFeatureIds: Uint16Array | Uint32Array;\n  featureIds: Uint16Array | Uint32Array;\n  numericProps: {[key: string]: TypedArray};\n  properties: {}[];\n  fields: {\n    id?: string | number;\n  }[];\n};\n\n/**\n * Collection type for holding intermediate binary data before conversion to `BinaryLineStringGeometry`\n */\nexport type Lines = {\n  type: 'LineString';\n  positions: Float32Array | Float64Array;\n  pathIndices: Uint16Array | Uint32Array;\n  globalFeatureIds: Uint16Array | Uint32Array;\n  featureIds: Uint16Array | Uint32Array;\n  numericProps: {[key: string]: TypedArray};\n  properties: {}[];\n  fields: {\n    id?: string | number;\n  }[];\n};\n\n/**\n * Collection type for holding intermediate binary data before conversion to `BinaryPolygonGeometry`\n */\nexport type Polygons = {\n  type: 'Polygon';\n  positions: Float32Array | Float64Array;\n  polygonIndices: Uint16Array | Uint32Array;\n  primitivePolygonIndices: Uint16Array | Uint32Array;\n  triangles: number[];\n  globalFeatureIds: Uint16Array | Uint32Array;\n  featureIds: Uint16Array | Uint32Array;\n  numericProps: {[key: string]: TypedArray};\n  properties: {}[];\n  fields: {\n    id?: string | number;\n  }[];\n};\n"],"mappings":""}