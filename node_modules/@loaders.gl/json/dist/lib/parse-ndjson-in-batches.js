"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const schema_1 = require("@loaders.gl/schema");
const loader_utils_1 = require("@loaders.gl/loader-utils");
async function* parseNDJSONInBatches(binaryAsyncIterator, options) {
    const textIterator = (0, loader_utils_1.makeTextDecoderIterator)(binaryAsyncIterator);
    const lineIterator = (0, loader_utils_1.makeLineIterator)(textIterator);
    const numberedLineIterator = (0, loader_utils_1.makeNumberedLineIterator)(lineIterator);
    const schema = null;
    const shape = 'row-table';
    // @ts-ignore
    const tableBatchBuilder = new schema_1.TableBatchBuilder(schema, {
        ...options,
        shape
    });
    for await (const { counter, line } of numberedLineIterator) {
        try {
            const row = JSON.parse(line);
            tableBatchBuilder.addRow(row);
            tableBatchBuilder.chunkComplete(line);
            const batch = tableBatchBuilder.getFullBatch();
            if (batch) {
                yield batch;
            }
        }
        catch (error) {
            throw new Error(`NDJSONLoader: failed to parse JSON on line ${counter}`);
        }
    }
    const batch = tableBatchBuilder.getFinalBatch();
    if (batch) {
        yield batch;
    }
}
exports.default = parseNDJSONInBatches;
