"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _jsonParser = _interopRequireDefault(require("./json-parser"));
var _jsonpath = _interopRequireDefault(require("../jsonpath/jsonpath"));
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var StreamingJSONParser = function (_JSONParser) {
  (0, _inherits2.default)(StreamingJSONParser, _JSONParser);
  var _super = _createSuper(StreamingJSONParser);
  function StreamingJSONParser() {
    var _this;
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck2.default)(this, StreamingJSONParser);
    _this = _super.call(this, {
      onopenarray: function onopenarray() {
        if (!_this.streamingArray) {
          if (_this._matchJSONPath()) {
            _this.streamingJsonPath = _this.getJsonPath().clone();
            _this.streamingArray = [];
            _this._openArray(_this.streamingArray);
            return;
          }
        }
        _this._openArray();
      },
      onopenobject: function onopenobject(name) {
        if (!_this.topLevelObject) {
          _this.topLevelObject = {};
          _this._openObject(_this.topLevelObject);
        } else {
          _this._openObject({});
        }
        if (typeof name !== 'undefined') {
          _this.parser.emit('onkey', name);
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "jsonPaths", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "streamingJsonPath", null);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "streamingArray", null);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "topLevelObject", null);
    var jsonpaths = options.jsonpaths || [];
    _this.jsonPaths = jsonpaths.map(function (jsonpath) {
      return new _jsonpath.default(jsonpath);
    });
    return _this;
  }

  (0, _createClass2.default)(StreamingJSONParser, [{
    key: "write",
    value:
    function write(chunk) {
      (0, _get2.default)((0, _getPrototypeOf2.default)(StreamingJSONParser.prototype), "write", this).call(this, chunk);
      var array = [];
      if (this.streamingArray) {
        array = (0, _toConsumableArray2.default)(this.streamingArray);
        this.streamingArray.length = 0;
      }
      return array;
    }

  }, {
    key: "getPartialResult",
    value:
    function getPartialResult() {
      return this.topLevelObject;
    }
  }, {
    key: "getStreamingJsonPath",
    value: function getStreamingJsonPath() {
      return this.streamingJsonPath;
    }
  }, {
    key: "getStreamingJsonPathAsString",
    value: function getStreamingJsonPathAsString() {
      return this.streamingJsonPath && this.streamingJsonPath.toString();
    }
  }, {
    key: "getJsonPath",
    value: function getJsonPath() {
      return this.jsonpath;
    }

  }, {
    key: "_matchJSONPath",
    value:

    function _matchJSONPath() {
      var currentPath = this.getJsonPath();

      if (this.jsonPaths.length === 0) {
        return true;
      }
      var _iterator = _createForOfIteratorHelper(this.jsonPaths),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var jsonPath = _step.value;
          if (jsonPath.equals(currentPath)) {
            return true;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return false;
    }
  }]);
  return StreamingJSONParser;
}(_jsonParser.default);
exports.default = StreamingJSONParser;
//# sourceMappingURL=streaming-json-parser.js.map