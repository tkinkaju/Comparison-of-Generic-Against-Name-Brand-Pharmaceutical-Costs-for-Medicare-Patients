{"version":3,"file":"streaming-json-parser.js","names":["StreamingJSONParser","options","onopenarray","streamingArray","_matchJSONPath","streamingJsonPath","getJsonPath","clone","_openArray","onopenobject","name","topLevelObject","_openObject","parser","emit","jsonpaths","jsonPaths","map","jsonpath","JSONPath","chunk","array","length","toString","currentPath","jsonPath","equals","JSONParser"],"sources":["../../../../src/lib/parser/streaming-json-parser.ts"],"sourcesContent":["import {default as JSONParser} from './json-parser';\nimport JSONPath from '../jsonpath/jsonpath';\n\n/**\n * The `StreamingJSONParser` looks for the first array in the JSON structure.\n * and emits an array of chunks\n */\nexport default class StreamingJSONParser extends JSONParser {\n  private jsonPaths: JSONPath[];\n  private streamingJsonPath: JSONPath | null = null;\n  private streamingArray: any[] | null = null;\n  private topLevelObject: object | null = null;\n\n  constructor(options: {[key: string]: any} = {}) {\n    super({\n      onopenarray: () => {\n        if (!this.streamingArray) {\n          if (this._matchJSONPath()) {\n            // @ts-ignore\n            this.streamingJsonPath = this.getJsonPath().clone();\n            this.streamingArray = [];\n            this._openArray(this.streamingArray as []);\n            return;\n          }\n        }\n\n        this._openArray();\n      },\n\n      // Redefine onopenarray to inject value for top-level object\n      onopenobject: (name) => {\n        if (!this.topLevelObject) {\n          this.topLevelObject = {};\n          this._openObject(this.topLevelObject);\n        } else {\n          this._openObject({});\n        }\n        if (typeof name !== 'undefined') {\n          this.parser.emit('onkey', name);\n        }\n      }\n    });\n    const jsonpaths = options.jsonpaths || [];\n    this.jsonPaths = jsonpaths.map((jsonpath) => new JSONPath(jsonpath));\n  }\n\n  /**\n   * write REDEFINITION\n   * - super.write() chunk to parser\n   * - get the contents (so far) of \"topmost-level\" array as batch of rows\n   * - clear top-level array\n   * - return the batch of rows\\\n   */\n  write(chunk) {\n    super.write(chunk);\n    let array: any[] = [];\n    if (this.streamingArray) {\n      array = [...this.streamingArray];\n      this.streamingArray.length = 0;\n    }\n    return array;\n  }\n\n  /**\n   * Returns a partially formed result object\n   * Useful for returning the \"wrapper\" object when array is not top level\n   * e.g. GeoJSON\n   */\n  getPartialResult() {\n    return this.topLevelObject;\n  }\n\n  getStreamingJsonPath() {\n    return this.streamingJsonPath;\n  }\n\n  getStreamingJsonPathAsString() {\n    return this.streamingJsonPath && this.streamingJsonPath.toString();\n  }\n\n  getJsonPath() {\n    return this.jsonpath;\n  }\n\n  // PRIVATE METHODS\n\n  /**\n   * Checks is this.getJsonPath matches the jsonpaths provided in options\n   */\n  _matchJSONPath() {\n    const currentPath = this.getJsonPath();\n    // console.debug(`Testing JSONPath`, currentPath);\n\n    // Backwards compatibility, match any array\n    // TODO implement using wildcard once that is supported\n    if (this.jsonPaths.length === 0) {\n      return true;\n    }\n\n    for (const jsonPath of this.jsonPaths) {\n      if (jsonPath.equals(currentPath)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAA4C;AAAA;AAAA;AAAA;AAAA;AAAA,IAMvBA,mBAAmB;EAAA;EAAA;EAMtC,+BAAgD;IAAA;IAAA,IAApCC,OAA6B,uEAAG,CAAC,CAAC;IAAA;IAC5C,0BAAM;MACJC,WAAW,EAAE,uBAAM;QACjB,IAAI,CAAC,MAAKC,cAAc,EAAE;UACxB,IAAI,MAAKC,cAAc,EAAE,EAAE;YAEzB,MAAKC,iBAAiB,GAAG,MAAKC,WAAW,EAAE,CAACC,KAAK,EAAE;YACnD,MAAKJ,cAAc,GAAG,EAAE;YACxB,MAAKK,UAAU,CAAC,MAAKL,cAAc,CAAO;YAC1C;UACF;QACF;QAEA,MAAKK,UAAU,EAAE;MACnB,CAAC;MAGDC,YAAY,EAAE,sBAACC,IAAI,EAAK;QACtB,IAAI,CAAC,MAAKC,cAAc,EAAE;UACxB,MAAKA,cAAc,GAAG,CAAC,CAAC;UACxB,MAAKC,WAAW,CAAC,MAAKD,cAAc,CAAC;QACvC,CAAC,MAAM;UACL,MAAKC,WAAW,CAAC,CAAC,CAAC,CAAC;QACtB;QACA,IAAI,OAAOF,IAAI,KAAK,WAAW,EAAE;UAC/B,MAAKG,MAAM,CAACC,IAAI,CAAC,OAAO,EAAEJ,IAAI,CAAC;QACjC;MACF;IACF,CAAC;IAAE;IAAA,gGAhCwC,IAAI;IAAA,6FACV,IAAI;IAAA,6FACH,IAAI;IA+B1C,IAAMK,SAAS,GAAGd,OAAO,CAACc,SAAS,IAAI,EAAE;IACzC,MAAKC,SAAS,GAAGD,SAAS,CAACE,GAAG,CAAC,UAACC,QAAQ;MAAA,OAAK,IAAIC,iBAAQ,CAACD,QAAQ,CAAC;IAAA,EAAC;IAAC;EACvE;;EAAC;IAAA;IAAA;IASD,eAAME,KAAK,EAAE;MACX,2GAAYA,KAAK;MACjB,IAAIC,KAAY,GAAG,EAAE;MACrB,IAAI,IAAI,CAAClB,cAAc,EAAE;QACvBkB,KAAK,oCAAO,IAAI,CAAClB,cAAc,CAAC;QAChC,IAAI,CAACA,cAAc,CAACmB,MAAM,GAAG,CAAC;MAChC;MACA,OAAOD,KAAK;IACd;;EAAC;IAAA;IAAA;IAOD,4BAAmB;MACjB,OAAO,IAAI,CAACV,cAAc;IAC5B;EAAC;IAAA;IAAA,OAED,gCAAuB;MACrB,OAAO,IAAI,CAACN,iBAAiB;IAC/B;EAAC;IAAA;IAAA,OAED,wCAA+B;MAC7B,OAAO,IAAI,CAACA,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,CAACkB,QAAQ,EAAE;IACpE;EAAC;IAAA;IAAA,OAED,uBAAc;MACZ,OAAO,IAAI,CAACL,QAAQ;IACtB;;EAAC;IAAA;IAAA;;IAOD,0BAAiB;MACf,IAAMM,WAAW,GAAG,IAAI,CAAClB,WAAW,EAAE;;MAKtC,IAAI,IAAI,CAACU,SAAS,CAACM,MAAM,KAAK,CAAC,EAAE;QAC/B,OAAO,IAAI;MACb;MAAC,2CAEsB,IAAI,CAACN,SAAS;QAAA;MAAA;QAArC,oDAAuC;UAAA,IAA5BS,QAAQ;UACjB,IAAIA,QAAQ,CAACC,MAAM,CAACF,WAAW,CAAC,EAAE;YAChC,OAAO,IAAI;UACb;QACF;MAAC;QAAA;MAAA;QAAA;MAAA;MAED,OAAO,KAAK;IACd;EAAC;EAAA;AAAA,EAnG8CG,mBAAU;AAAA"}