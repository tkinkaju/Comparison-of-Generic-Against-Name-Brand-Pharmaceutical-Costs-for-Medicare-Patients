{"version":3,"file":"clarinet.js","names":["MAX_BUFFER_LENGTH","Number","MAX_SAFE_INTEGER","STATE","Char","tab","lineFeed","carriageReturn","space","doubleQuote","plus","comma","minus","period","_0","_9","colon","E","openBracket","backslash","closeBracket","a","b","e","f","l","n","r","s","t","u","openBrace","closeBrace","stringTokenPattern","DEFAULT_OPTIONS","onready","onopenobject","onkey","oncloseobject","onopenarray","onclosearray","onvalue","onerror","onend","onchunkparsed","ClarinetParser","constructor","options","BEGIN","textNode","undefined","numberNode","emit","end","state","VALUE","depth","_error","_closeValue","c","closed","resume","error","close","write","event","data","emitNode","chunk","i","charCodeAt","p","position","line","column","OPEN_OBJECT","OPEN_ARRAY","isWhitespace","OPEN_KEY","stack","push","CLOSE_KEY","pop","CLOSE_OBJECT","STRING","CLOSE_ARRAY","TRUE","FALSE","NULL","String","fromCharCode","NUMBER_DIGIT","starti","slashed","unicodeI","STRING_BIGLOOP","unicodeS","parseInt","substring","lastIndex","reResult","exec","length","index","TRUE2","TRUE3","FALSE2","FALSE3","FALSE4","NULL2","NULL3","NUMBER_DECIMAL_POINT","indexOf","_closeNumber","bufferCheckPosition","checkBufferLength","parseFloat","message","Error","parser","maxAllowed","Math","max","maxActual","buffer","len"],"sources":["../../../../src/lib/clarinet/clarinet.ts"],"sourcesContent":["// loaders.gl, MIT license\n// This is a fork of the clarinet library, originally BSD license (see LICENSE file)\n// loaders.gl changes:\n// - typescript port\n\nexport type ClarinetEvent =\n  | 'onvalue'\n  | 'onstring'\n  | 'onkey'\n  | 'onopenobject'\n  | 'oncloseobject'\n  | 'onopenarray'\n  | 'onclosearray'\n  | 'onerror'\n  | 'onend'\n  | 'onready';\n\n// Removes the MAX_BUFFER_LENGTH, originally set to 64 * 1024\nconst MAX_BUFFER_LENGTH = Number.MAX_SAFE_INTEGER;\n// const DEBUG = false;\n\nenum STATE {\n  BEGIN = 0,\n  VALUE, // general stuff\n  OPEN_OBJECT, // {\n  CLOSE_OBJECT, // }\n  OPEN_ARRAY, // [\n  CLOSE_ARRAY, // ]\n  TEXT_ESCAPE, // \\ stuff\n  STRING, // \"\"\n  BACKSLASH,\n  END, // No more stack\n  OPEN_KEY, // , \"a\"\n  CLOSE_KEY, // :\n  TRUE, // r\n  TRUE2, // u\n  TRUE3, // e\n  FALSE, // a\n  FALSE2, // l\n  FALSE3, // s\n  FALSE4, // e\n  NULL, // u\n  NULL2, // l\n  NULL3, // l\n  NUMBER_DECIMAL_POINT, // .\n  NUMBER_DIGIT // [0-9]\n}\n\nconst Char = {\n  tab: 0x09, // \\t\n  lineFeed: 0x0a, // \\n\n  carriageReturn: 0x0d, // \\r\n  space: 0x20, // \" \"\n\n  doubleQuote: 0x22, // \"\n  plus: 0x2b, // +\n  comma: 0x2c, // ,\n  minus: 0x2d, // -\n  period: 0x2e, // .\n\n  _0: 0x30, // 0\n  _9: 0x39, // 9\n\n  colon: 0x3a, // :\n\n  E: 0x45, // E\n\n  openBracket: 0x5b, // [\n  backslash: 0x5c, // \\\n  closeBracket: 0x5d, // ]\n\n  a: 0x61, // a\n  b: 0x62, // b\n  e: 0x65, // e\n  f: 0x66, // f\n  l: 0x6c, // l\n  n: 0x6e, // n\n  r: 0x72, // r\n  s: 0x73, // s\n  t: 0x74, // t\n  u: 0x75, // u\n\n  openBrace: 0x7b, // {\n  closeBrace: 0x7d // }\n};\n\nconst stringTokenPattern = /[\\\\\"\\n]/g;\n\ntype ParserEvent = (parser: ClarinetParser, event: string, data?: any) => void;\n\nexport type ClarinetParserOptions = {\n  onready?: ParserEvent;\n  onopenobject?: ParserEvent;\n  onkey?: ParserEvent;\n  oncloseobject?: ParserEvent;\n  onopenarray?: ParserEvent;\n  onclosearray?: ParserEvent;\n  onvalue?: ParserEvent;\n  onerror?: ParserEvent;\n  onend?: ParserEvent;\n  onchunkparsed?: ParserEvent;\n};\n\nconst DEFAULT_OPTIONS: Required<ClarinetParserOptions> = {\n  onready: () => {},\n  onopenobject: () => {},\n  onkey: () => {},\n  oncloseobject: () => {},\n  onopenarray: () => {},\n  onclosearray: () => {},\n  onvalue: () => {},\n  onerror: () => {},\n  onend: () => {},\n  onchunkparsed: () => {}\n};\nexport default class ClarinetParser {\n  protected options: Required<ClarinetParserOptions> = DEFAULT_OPTIONS;\n\n  bufferCheckPosition = MAX_BUFFER_LENGTH;\n  q = '';\n  c = '';\n  p = '';\n  closed = false;\n  closedRoot = false;\n  sawRoot = false;\n  // tag = null;\n  error: Error | null = null;\n  state = STATE.BEGIN;\n  stack: STATE[] = [];\n  // mostly just for error reporting\n  position: number = 0;\n  column: number = 0;\n  line: number = 1;\n  slashed: boolean = false;\n  unicodeI: number = 0;\n  unicodeS: string | null = null;\n  depth: number = 0;\n\n  textNode;\n  numberNode;\n\n  constructor(options: ClarinetParserOptions = {}) {\n    this.options = {...DEFAULT_OPTIONS, ...options};\n    this.textNode = undefined;\n    this.numberNode = '';\n    this.emit('onready');\n  }\n\n  end() {\n    if (this.state !== STATE.VALUE || this.depth !== 0) this._error('Unexpected end');\n\n    this._closeValue();\n    this.c = '';\n    this.closed = true;\n    this.emit('onend');\n    return this;\n  }\n\n  resume() {\n    this.error = null;\n    return this;\n  }\n\n  close() {\n    return this.write(null);\n  }\n\n  // protected\n\n  emit(event: string, data?: any): void {\n    // if (DEBUG) console.log('-- emit', event, data);\n    this.options[event]?.(data, this);\n  }\n\n  emitNode(event: string, data?: any): void {\n    this._closeValue();\n    this.emit(event, data);\n  }\n\n  /* eslint-disable no-continue */\n  // eslint-disable-next-line complexity, max-statements\n  write(chunk) {\n    if (this.error) {\n      throw this.error;\n    }\n    if (this.closed) {\n      return this._error('Cannot write after close. Assign an onready handler.');\n    }\n    if (chunk === null) {\n      return this.end();\n    }\n    let i = 0;\n    let c = chunk.charCodeAt(0);\n    let p = this.p;\n    // if (DEBUG) console.log(`write -> [${  chunk  }]`);\n    while (c) {\n      p = c;\n      this.c = c = chunk.charCodeAt(i++);\n      // if chunk doesnt have next, like streaming char by char\n      // this way we need to check if previous is really previous\n      // if not we need to reset to what the this says is the previous\n      // from buffer\n      if (p !== c) {\n        this.p = p;\n      } else {\n        p = this.p;\n      }\n\n      if (!c) break;\n\n      // if (DEBUG) console.log(i, c, STATE[this.state]);\n      this.position++;\n      if (c === Char.lineFeed) {\n        this.line++;\n        this.column = 0;\n      } else this.column++;\n\n      switch (this.state) {\n        case STATE.BEGIN:\n          if (c === Char.openBrace) this.state = STATE.OPEN_OBJECT;\n          else if (c === Char.openBracket) this.state = STATE.OPEN_ARRAY;\n          else if (!isWhitespace(c)) {\n            this._error('Non-whitespace before {[.');\n          }\n          continue;\n\n        case STATE.OPEN_KEY:\n        case STATE.OPEN_OBJECT:\n          if (isWhitespace(c)) continue;\n          if (this.state === STATE.OPEN_KEY) this.stack.push(STATE.CLOSE_KEY);\n          else if (c === Char.closeBrace) {\n            this.emit('onopenobject');\n            this.depth++;\n            this.emit('oncloseobject');\n            this.depth--;\n            this.state = this.stack.pop() || STATE.VALUE;\n            continue;\n          } else this.stack.push(STATE.CLOSE_OBJECT);\n          if (c === Char.doubleQuote) this.state = STATE.STRING;\n          else this._error('Malformed object key should start with \"');\n          continue;\n\n        case STATE.CLOSE_KEY:\n        case STATE.CLOSE_OBJECT:\n          if (isWhitespace(c)) continue;\n          // let event = this.state === STATE.CLOSE_KEY ? 'key' : 'object';\n          if (c === Char.colon) {\n            if (this.state === STATE.CLOSE_OBJECT) {\n              this.stack.push(STATE.CLOSE_OBJECT);\n              this._closeValue('onopenobject');\n              this.depth++;\n            } else this._closeValue('onkey');\n            this.state = STATE.VALUE;\n          } else if (c === Char.closeBrace) {\n            this.emitNode('oncloseobject');\n            this.depth--;\n            this.state = this.stack.pop() || STATE.VALUE;\n          } else if (c === Char.comma) {\n            if (this.state === STATE.CLOSE_OBJECT) this.stack.push(STATE.CLOSE_OBJECT);\n            this._closeValue();\n            this.state = STATE.OPEN_KEY;\n          } else this._error('Bad object');\n          continue;\n\n        case STATE.OPEN_ARRAY: // after an array there always a value\n        case STATE.VALUE:\n          if (isWhitespace(c)) continue;\n          if (this.state === STATE.OPEN_ARRAY) {\n            this.emit('onopenarray');\n            this.depth++;\n            this.state = STATE.VALUE;\n            if (c === Char.closeBracket) {\n              this.emit('onclosearray');\n              this.depth--;\n              this.state = this.stack.pop() || STATE.VALUE;\n              continue;\n            } else {\n              this.stack.push(STATE.CLOSE_ARRAY);\n            }\n          }\n          if (c === Char.doubleQuote) this.state = STATE.STRING;\n          else if (c === Char.openBrace) this.state = STATE.OPEN_OBJECT;\n          else if (c === Char.openBracket) this.state = STATE.OPEN_ARRAY;\n          else if (c === Char.t) this.state = STATE.TRUE;\n          else if (c === Char.f) this.state = STATE.FALSE;\n          else if (c === Char.n) this.state = STATE.NULL;\n          else if (c === Char.minus) {\n            // keep and continue\n            this.numberNode += '-';\n          } else if (Char._0 <= c && c <= Char._9) {\n            this.numberNode += String.fromCharCode(c);\n            this.state = STATE.NUMBER_DIGIT;\n          } else this._error('Bad value');\n          continue;\n\n        case STATE.CLOSE_ARRAY:\n          if (c === Char.comma) {\n            this.stack.push(STATE.CLOSE_ARRAY);\n            this._closeValue('onvalue');\n            this.state = STATE.VALUE;\n          } else if (c === Char.closeBracket) {\n            this.emitNode('onclosearray');\n            this.depth--;\n            this.state = this.stack.pop() || STATE.VALUE;\n          } else if (isWhitespace(c)) continue;\n          else this._error('Bad array');\n          continue;\n\n        case STATE.STRING:\n          if (this.textNode === undefined) {\n            this.textNode = '';\n          }\n\n          // thanks thejh, this is an about 50% performance improvement.\n          let starti = i - 1;\n          let slashed = this.slashed;\n          let unicodeI = this.unicodeI;\n          // eslint-disable-next-line no-constant-condition, no-labels\n          STRING_BIGLOOP: while (true) {\n            // if (DEBUG) console.log(i, c, STATE[this.state], slashed);\n            // zero means \"no unicode active\". 1-4 mean \"parse some more\". end after 4.\n            while (unicodeI > 0) {\n              this.unicodeS += String.fromCharCode(c);\n              c = chunk.charCodeAt(i++);\n              this.position++;\n              if (unicodeI === 4) {\n                // TODO this might be slow? well, probably not used too often anyway\n                this.textNode += String.fromCharCode(parseInt(this.unicodeS as string, 16));\n                unicodeI = 0;\n                starti = i - 1;\n              } else {\n                unicodeI++;\n              }\n              // we can just break here: no stuff we skipped that still has to be sliced out or so\n              // eslint-disable-next-line no-labels\n              if (!c) break STRING_BIGLOOP;\n            }\n            if (c === Char.doubleQuote && !slashed) {\n              this.state = this.stack.pop() || STATE.VALUE;\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              break;\n            }\n            if (c === Char.backslash && !slashed) {\n              slashed = true;\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              c = chunk.charCodeAt(i++);\n              this.position++;\n              if (!c) break;\n            }\n            if (slashed) {\n              slashed = false;\n              if (c === Char.n) {\n                this.textNode += '\\n';\n              } else if (c === Char.r) {\n                this.textNode += '\\r';\n              } else if (c === Char.t) {\n                this.textNode += '\\t';\n              } else if (c === Char.f) {\n                this.textNode += '\\f';\n              } else if (c === Char.b) {\n                this.textNode += '\\b';\n              } else if (c === Char.u) {\n                // \\uxxxx. meh!\n                unicodeI = 1;\n                this.unicodeS = '';\n              } else {\n                this.textNode += String.fromCharCode(c);\n              }\n              c = chunk.charCodeAt(i++);\n              this.position++;\n              starti = i - 1;\n              if (!c) break;\n              else continue;\n            }\n\n            stringTokenPattern.lastIndex = i;\n            const reResult = stringTokenPattern.exec(chunk);\n            if (reResult === null) {\n              i = chunk.length + 1;\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              break;\n            }\n            i = reResult.index + 1;\n            c = chunk.charCodeAt(reResult.index);\n            if (!c) {\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              break;\n            }\n          }\n          this.slashed = slashed;\n          this.unicodeI = unicodeI;\n          continue;\n\n        case STATE.TRUE:\n          if (c === Char.r) this.state = STATE.TRUE2;\n          else this._error(`Invalid true started with t${c}`);\n          continue;\n\n        case STATE.TRUE2:\n          if (c === Char.u) this.state = STATE.TRUE3;\n          else this._error(`Invalid true started with tr${c}`);\n          continue;\n\n        case STATE.TRUE3:\n          if (c === Char.e) {\n            this.emit('onvalue', true);\n            this.state = this.stack.pop() || STATE.VALUE;\n          } else this._error(`Invalid true started with tru${c}`);\n          continue;\n\n        case STATE.FALSE:\n          if (c === Char.a) this.state = STATE.FALSE2;\n          else this._error(`Invalid false started with f${c}`);\n          continue;\n\n        case STATE.FALSE2:\n          if (c === Char.l) this.state = STATE.FALSE3;\n          else this._error(`Invalid false started with fa${c}`);\n          continue;\n\n        case STATE.FALSE3:\n          if (c === Char.s) this.state = STATE.FALSE4;\n          else this._error(`Invalid false started with fal${c}`);\n          continue;\n\n        case STATE.FALSE4:\n          if (c === Char.e) {\n            this.emit('onvalue', false);\n            this.state = this.stack.pop() || STATE.VALUE;\n          } else this._error(`Invalid false started with fals${c}`);\n          continue;\n\n        case STATE.NULL:\n          if (c === Char.u) this.state = STATE.NULL2;\n          else this._error(`Invalid null started with n${c}`);\n          continue;\n\n        case STATE.NULL2:\n          if (c === Char.l) this.state = STATE.NULL3;\n          else this._error(`Invalid null started with nu${c}`);\n          continue;\n\n        case STATE.NULL3:\n          if (c === Char.l) {\n            this.emit('onvalue', null);\n            this.state = this.stack.pop() || STATE.VALUE;\n          } else this._error(`Invalid null started with nul${c}`);\n          continue;\n\n        case STATE.NUMBER_DECIMAL_POINT:\n          if (c === Char.period) {\n            this.numberNode += '.';\n            this.state = STATE.NUMBER_DIGIT;\n          } else this._error('Leading zero not followed by .');\n          continue;\n\n        case STATE.NUMBER_DIGIT:\n          if (Char._0 <= c && c <= Char._9) this.numberNode += String.fromCharCode(c);\n          else if (c === Char.period) {\n            if (this.numberNode.indexOf('.') !== -1) this._error('Invalid number has two dots');\n            this.numberNode += '.';\n          } else if (c === Char.e || c === Char.E) {\n            if (this.numberNode.indexOf('e') !== -1 || this.numberNode.indexOf('E') !== -1)\n              this._error('Invalid number has two exponential');\n            this.numberNode += 'e';\n          } else if (c === Char.plus || c === Char.minus) {\n            // @ts-expect-error\n            if (!(p === Char.e || p === Char.E)) this._error('Invalid symbol in number');\n            this.numberNode += String.fromCharCode(c);\n          } else {\n            this._closeNumber();\n            i--; // go back one\n            this.state = this.stack.pop() || STATE.VALUE;\n          }\n          continue;\n\n        default:\n          this._error(`Unknown state: ${this.state}`);\n      }\n    }\n    if (this.position >= this.bufferCheckPosition) {\n      checkBufferLength(this);\n    }\n\n    this.emit('onchunkparsed');\n\n    return this;\n  }\n\n  _closeValue(event: string = 'onvalue'): void {\n    if (this.textNode !== undefined) {\n      this.emit(event, this.textNode);\n    }\n    this.textNode = undefined;\n  }\n\n  _closeNumber(): void {\n    if (this.numberNode) this.emit('onvalue', parseFloat(this.numberNode));\n    this.numberNode = '';\n  }\n\n  _error(message: string = ''): void {\n    this._closeValue();\n    message += `\\nLine: ${this.line}\\nColumn: ${this.column}\\nChar: ${this.c}`;\n    const error = new Error(message);\n    this.error = error;\n    this.emit('onerror', error);\n  }\n}\n\nfunction isWhitespace(c): boolean {\n  return c === Char.carriageReturn || c === Char.lineFeed || c === Char.space || c === Char.tab;\n}\n\nfunction checkBufferLength(parser) {\n  const maxAllowed = Math.max(MAX_BUFFER_LENGTH, 10);\n  let maxActual = 0;\n\n  for (const buffer of ['textNode', 'numberNode']) {\n    const len = parser[buffer] === undefined ? 0 : parser[buffer].length;\n    if (len > maxAllowed) {\n      switch (buffer) {\n        case 'text':\n          // TODO - should this be closeValue?\n          // closeText(parser);\n          break;\n\n        default:\n          parser._error(`Max buffer length exceeded: ${buffer}`);\n      }\n    }\n    maxActual = Math.max(maxActual, len);\n  }\n  parser.bufferCheckPosition = MAX_BUFFER_LENGTH - maxActual + parser.position;\n}\n"],"mappings":"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"}