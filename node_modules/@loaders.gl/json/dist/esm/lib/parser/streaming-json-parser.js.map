{"version":3,"file":"streaming-json-parser.js","names":["default","JSONParser","JSONPath","StreamingJSONParser","constructor","options","onopenarray","streamingArray","_matchJSONPath","streamingJsonPath","getJsonPath","clone","_openArray","onopenobject","name","topLevelObject","_openObject","parser","emit","jsonpaths","jsonPaths","map","jsonpath","write","chunk","array","length","getPartialResult","getStreamingJsonPath","getStreamingJsonPathAsString","toString","currentPath","jsonPath","equals"],"sources":["../../../../src/lib/parser/streaming-json-parser.ts"],"sourcesContent":["import {default as JSONParser} from './json-parser';\nimport JSONPath from '../jsonpath/jsonpath';\n\n/**\n * The `StreamingJSONParser` looks for the first array in the JSON structure.\n * and emits an array of chunks\n */\nexport default class StreamingJSONParser extends JSONParser {\n  private jsonPaths: JSONPath[];\n  private streamingJsonPath: JSONPath | null = null;\n  private streamingArray: any[] | null = null;\n  private topLevelObject: object | null = null;\n\n  constructor(options: {[key: string]: any} = {}) {\n    super({\n      onopenarray: () => {\n        if (!this.streamingArray) {\n          if (this._matchJSONPath()) {\n            // @ts-ignore\n            this.streamingJsonPath = this.getJsonPath().clone();\n            this.streamingArray = [];\n            this._openArray(this.streamingArray as []);\n            return;\n          }\n        }\n\n        this._openArray();\n      },\n\n      // Redefine onopenarray to inject value for top-level object\n      onopenobject: (name) => {\n        if (!this.topLevelObject) {\n          this.topLevelObject = {};\n          this._openObject(this.topLevelObject);\n        } else {\n          this._openObject({});\n        }\n        if (typeof name !== 'undefined') {\n          this.parser.emit('onkey', name);\n        }\n      }\n    });\n    const jsonpaths = options.jsonpaths || [];\n    this.jsonPaths = jsonpaths.map((jsonpath) => new JSONPath(jsonpath));\n  }\n\n  /**\n   * write REDEFINITION\n   * - super.write() chunk to parser\n   * - get the contents (so far) of \"topmost-level\" array as batch of rows\n   * - clear top-level array\n   * - return the batch of rows\\\n   */\n  write(chunk) {\n    super.write(chunk);\n    let array: any[] = [];\n    if (this.streamingArray) {\n      array = [...this.streamingArray];\n      this.streamingArray.length = 0;\n    }\n    return array;\n  }\n\n  /**\n   * Returns a partially formed result object\n   * Useful for returning the \"wrapper\" object when array is not top level\n   * e.g. GeoJSON\n   */\n  getPartialResult() {\n    return this.topLevelObject;\n  }\n\n  getStreamingJsonPath() {\n    return this.streamingJsonPath;\n  }\n\n  getStreamingJsonPathAsString() {\n    return this.streamingJsonPath && this.streamingJsonPath.toString();\n  }\n\n  getJsonPath() {\n    return this.jsonpath;\n  }\n\n  // PRIVATE METHODS\n\n  /**\n   * Checks is this.getJsonPath matches the jsonpaths provided in options\n   */\n  _matchJSONPath() {\n    const currentPath = this.getJsonPath();\n    // console.debug(`Testing JSONPath`, currentPath);\n\n    // Backwards compatibility, match any array\n    // TODO implement using wildcard once that is supported\n    if (this.jsonPaths.length === 0) {\n      return true;\n    }\n\n    for (const jsonPath of this.jsonPaths) {\n      if (jsonPath.equals(currentPath)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n"],"mappings":";AAAA,SAAQA,OAAO,IAAIC,UAAU,QAAO,eAAe;AACnD,OAAOC,QAAQ,MAAM,sBAAsB;;AAM3C,eAAe,MAAMC,mBAAmB,SAASF,UAAU,CAAC;EAM1DG,WAAW,GAAqC;IAAA,IAApCC,OAA6B,uEAAG,CAAC,CAAC;IAC5C,KAAK,CAAC;MACJC,WAAW,EAAE,MAAM;QACjB,IAAI,CAAC,IAAI,CAACC,cAAc,EAAE;UACxB,IAAI,IAAI,CAACC,cAAc,EAAE,EAAE;YAEzB,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACC,WAAW,EAAE,CAACC,KAAK,EAAE;YACnD,IAAI,CAACJ,cAAc,GAAG,EAAE;YACxB,IAAI,CAACK,UAAU,CAAC,IAAI,CAACL,cAAc,CAAO;YAC1C;UACF;QACF;QAEA,IAAI,CAACK,UAAU,EAAE;MACnB,CAAC;MAGDC,YAAY,EAAGC,IAAI,IAAK;QACtB,IAAI,CAAC,IAAI,CAACC,cAAc,EAAE;UACxB,IAAI,CAACA,cAAc,GAAG,CAAC,CAAC;UACxB,IAAI,CAACC,WAAW,CAAC,IAAI,CAACD,cAAc,CAAC;QACvC,CAAC,MAAM;UACL,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;QACtB;QACA,IAAI,OAAOF,IAAI,KAAK,WAAW,EAAE;UAC/B,IAAI,CAACG,MAAM,CAACC,IAAI,CAAC,OAAO,EAAEJ,IAAI,CAAC;QACjC;MACF;IACF,CAAC,CAAC;IAAC;IAAA,2CAhCwC,IAAI;IAAA,wCACV,IAAI;IAAA,wCACH,IAAI;IA+B1C,MAAMK,SAAS,GAAGd,OAAO,CAACc,SAAS,IAAI,EAAE;IACzC,IAAI,CAACC,SAAS,GAAGD,SAAS,CAACE,GAAG,CAAEC,QAAQ,IAAK,IAAIpB,QAAQ,CAACoB,QAAQ,CAAC,CAAC;EACtE;;EASAC,KAAK,CAACC,KAAK,EAAE;IACX,KAAK,CAACD,KAAK,CAACC,KAAK,CAAC;IAClB,IAAIC,KAAY,GAAG,EAAE;IACrB,IAAI,IAAI,CAAClB,cAAc,EAAE;MACvBkB,KAAK,GAAG,CAAC,GAAG,IAAI,CAAClB,cAAc,CAAC;MAChC,IAAI,CAACA,cAAc,CAACmB,MAAM,GAAG,CAAC;IAChC;IACA,OAAOD,KAAK;EACd;;EAOAE,gBAAgB,GAAG;IACjB,OAAO,IAAI,CAACZ,cAAc;EAC5B;EAEAa,oBAAoB,GAAG;IACrB,OAAO,IAAI,CAACnB,iBAAiB;EAC/B;EAEAoB,4BAA4B,GAAG;IAC7B,OAAO,IAAI,CAACpB,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,CAACqB,QAAQ,EAAE;EACpE;EAEApB,WAAW,GAAG;IACZ,OAAO,IAAI,CAACY,QAAQ;EACtB;;EAOAd,cAAc,GAAG;IACf,MAAMuB,WAAW,GAAG,IAAI,CAACrB,WAAW,EAAE;;IAKtC,IAAI,IAAI,CAACU,SAAS,CAACM,MAAM,KAAK,CAAC,EAAE;MAC/B,OAAO,IAAI;IACb;IAEA,KAAK,MAAMM,QAAQ,IAAI,IAAI,CAACZ,SAAS,EAAE;MACrC,IAAIY,QAAQ,CAACC,MAAM,CAACF,WAAW,CAAC,EAAE;QAChC,OAAO,IAAI;MACb;IACF;IAEA,OAAO,KAAK;EACd;AACF"}