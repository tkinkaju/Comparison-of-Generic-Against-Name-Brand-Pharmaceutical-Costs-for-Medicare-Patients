import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { default as JSONParser } from './json-parser';
import JSONPath from '../jsonpath/jsonpath';

export default class StreamingJSONParser extends JSONParser {
  constructor() {
    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    super({
      onopenarray: () => {
        if (!this.streamingArray) {
          if (this._matchJSONPath()) {
            this.streamingJsonPath = this.getJsonPath().clone();
            this.streamingArray = [];
            this._openArray(this.streamingArray);
            return;
          }
        }
        this._openArray();
      },
      onopenobject: name => {
        if (!this.topLevelObject) {
          this.topLevelObject = {};
          this._openObject(this.topLevelObject);
        } else {
          this._openObject({});
        }
        if (typeof name !== 'undefined') {
          this.parser.emit('onkey', name);
        }
      }
    });
    _defineProperty(this, "jsonPaths", void 0);
    _defineProperty(this, "streamingJsonPath", null);
    _defineProperty(this, "streamingArray", null);
    _defineProperty(this, "topLevelObject", null);
    const jsonpaths = options.jsonpaths || [];
    this.jsonPaths = jsonpaths.map(jsonpath => new JSONPath(jsonpath));
  }

  write(chunk) {
    super.write(chunk);
    let array = [];
    if (this.streamingArray) {
      array = [...this.streamingArray];
      this.streamingArray.length = 0;
    }
    return array;
  }

  getPartialResult() {
    return this.topLevelObject;
  }
  getStreamingJsonPath() {
    return this.streamingJsonPath;
  }
  getStreamingJsonPathAsString() {
    return this.streamingJsonPath && this.streamingJsonPath.toString();
  }
  getJsonPath() {
    return this.jsonpath;
  }

  _matchJSONPath() {
    const currentPath = this.getJsonPath();

    if (this.jsonPaths.length === 0) {
      return true;
    }
    for (const jsonPath of this.jsonPaths) {
      if (jsonPath.equals(currentPath)) {
        return true;
      }
    }
    return false;
  }
}
//# sourceMappingURL=streaming-json-parser.js.map