

import { XMLLoader } from '@loaders.gl/xml';

export function parseWFSCapabilities(text, options) {
  var _options;
  options = {
    ...options,
    xml: {
      ...((_options = options) === null || _options === void 0 ? void 0 : _options.xml),
      removeNSPrefix: true
    }
  };
  const parsedXML = XMLLoader.parseTextSync(text, options);
  const xmlCapabilities = parsedXML.Capabilities || parsedXML;
  return uncapitalizeKeys(xmlCapabilities);
}
function uncapitalizeKeys(object) {
  if (object && typeof object === 'object') {
    const newObject = {};
    for (const [key, value] of Object.entries(object)) {
      newObject[uncapitalize(key)] = uncapitalizeKeys(value);
    }
    return newObject;
  }
  return object;
}

function uncapitalize(str) {
  return typeof str === 'string' ? str.charAt(0).toLowerCase() + str.slice(1) : str;
}
//# sourceMappingURL=parse-wcs.js.map