{"version":3,"file":"parse-wms.js","names":["XMLLoader","parseWMSCapabilities","text","options","parsedXML","parseTextSync","xmlCapabilities","WMT_MS_Capabilities","WMS_Capabilities","extractCapabilities","xml","capabilities","name","Service","Name","title","Title","keywords","requests","layer","extractLayer","Capability","Layer","raw","keyword","KeywordList","Keyword","push","xmlRequest","Object","entries","Request","extractRequest","format","Format","mimeTypes","Array","isArray","xmlLayer","srs","SRS","layers","xmlLayers","getXMLArray","xmlSubLayer","xmlValue","parseWMSFeatureInfo","xmlFeatureInfo","FeatureInfoResponse","FIELDS","xmlFeatures","features","map","xmlFeature","extractFeature","xmlFields","attributes","type","bounds","bottom","top","left","right","parseWMSLayerDescription","parseWMSError","serviceExceptionXML","ServiceExceptionReport","ServiceException","message","code"],"sources":["../../../../src/lib/wms/parse-wms.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport type {\n  WMSCapabilities,\n  WMSLayer,\n  WMSRequest,\n  WMSFeatureInfo,\n  WMSLayerDescription\n  // WMSFeature,\n  // WMSLayerDescription\n} from './wms-types';\n\nimport {XMLLoader} from '@loaders.gl/xml';\n\n// GetCapabilities\n\n/**\n * Parses a typed data structure from raw XML for `GetCapabilities` response\n * @note Error handlings is fairly weak\n */\nexport function parseWMSCapabilities(text: string, options): WMSCapabilities {\n  const parsedXML = XMLLoader.parseTextSync(text, options);\n  const xmlCapabilities: any =\n    parsedXML.WMT_MS_Capabilities || parsedXML.WMS_Capabilities || parsedXML;\n  return extractCapabilities(xmlCapabilities);\n}\n\n/** Extract typed capability data from XML */\nfunction extractCapabilities(xml: any): WMSCapabilities {\n  const capabilities: WMSCapabilities = {\n    name: xml.Service?.Name || 'unnamed',\n    title: xml.Service?.Title,\n    keywords: [],\n    requests: {},\n    layer: extractLayer(xml.Capability?.Layer),\n    raw: xml\n  };\n\n  for (const keyword of xml.Service?.KeywordList?.Keyword || []) {\n    capabilities.keywords.push(keyword);\n  }\n\n  for (const [name, xmlRequest] of Object.entries(xml.Capability?.Request || {})) {\n    capabilities.requests[name] = extractRequest(name, xmlRequest);\n  }\n\n  return capabilities;\n}\n\n/** Extract typed request data from XML */\nfunction extractRequest(name: string, xmlRequest: any): WMSRequest {\n  const format: string | string[] = xmlRequest?.Format;\n  const mimeTypes: string[] = Array.isArray(format) ? format : [format];\n  return {name, mimeTypes};\n}\n\n/** Extract request data */\nfunction extractLayer(xmlLayer: any): WMSLayer {\n  const layer: WMSLayer = {\n    name: xmlLayer?.Name,\n    title: xmlLayer?.Title,\n    srs: xmlLayer?.SRS || [],\n    layers: []\n  };\n\n  // Single layer is not represented as array in XML\n  const xmlLayers = getXMLArray(xmlLayer?.Layer);\n\n  for (const xmlSubLayer of xmlLayers) {\n    layer.layers?.push(extractLayer(xmlSubLayer));\n  }\n\n  return layer;\n}\n\nfunction getXMLArray(xmlValue: any) {\n  if (Array.isArray(xmlValue)) {\n    return xmlValue;\n  }\n  if (xmlValue) {\n    return [xmlValue];\n  }\n  return [];\n}\n\n// GetFeatureInfo\n\n/**\n * Parses a typed data structure from raw XML for `GetFeatureInfo` response\n * @note Error handlings is fairly weak\n */\nexport function parseWMSFeatureInfo(text: string, options): WMSFeatureInfo {\n  const parsedXML = XMLLoader.parseTextSync(text, options);\n  const xmlFeatureInfo: any = parsedXML.FeatureInfoResponse?.FIELDS || [];\n\n  const xmlFeatures = Array.isArray(xmlFeatureInfo) ? xmlFeatureInfo : [xmlFeatureInfo];\n\n  return {\n    features: xmlFeatures.map((xmlFeature) => extractFeature(xmlFeature))\n  };\n}\n\nfunction extractFeature(xmlFeature: any) {\n  const xmlFields = xmlFeature || {};\n  // TODO - not correct\n  return {\n    attributes: xmlFields,\n    type: '',\n    bounds: {bottom: 0, top: 0, left: 0, right: 0}\n  };\n}\n\n// GetFeatureInfo\n\n/**\n * Parses a typed data structure from raw XML for `GetFeatureInfo` response\n * @note Error handlings is fairly weak\n */\nexport function parseWMSLayerDescription(text: string, options): WMSLayerDescription {\n  const parsedXML = XMLLoader.parseTextSync(text, options);\n  // TODO - implement parser\n  return parsedXML as unknown as WMSLayerDescription;\n}\n\n/**\n * Extract an error message from WMS error response XML\n * @param text\n * @param options\n * @returns a string with a human readable message\n */\nexport function parseWMSError(text: string, options): string {\n  const parsedXML = XMLLoader.parseTextSync?.(text, options);\n  const serviceExceptionXML =\n    parsedXML?.ServiceExceptionReport?.ServiceException ||\n    parsedXML?.['ogc:ServiceExceptionReport']?.['ogc:ServiceException'];\n  // Sigh, can be either a string or an object\n  const message =\n    typeof serviceExceptionXML === 'string'\n      ? serviceExceptionXML\n      : serviceExceptionXML['#text'] || serviceExceptionXML.code || 'Unknown error';\n  return message;\n}\n"],"mappings":"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"}