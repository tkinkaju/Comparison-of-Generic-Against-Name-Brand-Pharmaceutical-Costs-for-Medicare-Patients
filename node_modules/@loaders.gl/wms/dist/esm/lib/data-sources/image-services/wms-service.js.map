{"version":3,"file":"wms-service.js","names":["ImageLoader","ImageSource","getFetchFunction","mergeImageServiceProps","WMSCapabilitiesLoader","WMSFeatureInfoLoader","WMSLayerDescriptionLoader","WMSErrorLoader","WMSService","constructor","props","fetch","loadOptions","wms","throwOnError","getMetadata","getCapabilities","getImage","parameters","getMap","wmsParameters","vendorParameters","url","getCapabilitiesURL","response","arrayBuffer","_checkResponse","capabilities","parse","options","getMapURL","_parseError","getFeatureInfo","getFeatureInfoURL","getFeatureInfoText","info_format","TextDecoder","decode","describeLayer","describeLayerURL","getLegendGraphic","getLegendGraphicURL","service","version","request","_getWMSUrl","styles","undefined","srs","format","first","key","value","Object","entries","Array","isArray","toUpperCase","join","String","encodeURI","contentType","headers","ok","mimeTypes","includes","error","parseSync","Error","toLowerCase"],"sources":["../../../../../src/lib/data-sources/image-services/wms-service.ts"],"sourcesContent":["// loaders.gl, MIT license\n\n/* eslint-disable camelcase */\n\nimport type {ImageType} from '@loaders.gl/images';\nimport {ImageLoader} from '@loaders.gl/images';\n\nimport type {ImageSourceMetadata, GetImageParameters} from '../image-source';\nimport {ImageSource} from '../image-source';\nimport {ImageServiceProps, getFetchFunction, mergeImageServiceProps} from './image-service';\n\nimport type {WMSCapabilities, WMSFeatureInfo, WMSLayerDescription} from '../../wms/wms-types';\nimport {WMSCapabilitiesLoader} from '../../../wms-capabilities-loader';\nimport {WMSFeatureInfoLoader} from '../../../wip/wms-feature-info-loader';\nimport {WMSLayerDescriptionLoader} from '../../../wip/wms-layer-description-loader';\nimport {WMSErrorLoader} from '../../../wms-error-loader';\n\ntype WMSCommonParameters = {\n  /** In case the endpoint supports multiple services */\n  service?: 'WMS';\n  /** In case the endpoint supports multiple WMS versions */\n  version?: '1.1.1' | '1.3.0';\n};\n\nexport type WMSGetCapabilitiesParameters = WMSCommonParameters & {\n  /** Request type */\n  request?: 'GetCapabilities';\n};\n\nexport type WMSGetMapParameters = WMSCommonParameters & {\n  /** Request type */\n  request?: 'GetMap';\n  /** Layers to render */\n  layers: string | string[];\n  /** Styling */\n  styles?: unknown;\n  /** bounding box of the requested map image */\n  bbox: [number, number, number, number];\n  /** pixel width of returned image */\n  width: number;\n  /** pixels */\n  height: number;\n  /** srs for the image (not the bounding box) */\n  srs?: string;\n  /** requested format for the return image */\n  format?: 'image/png';\n};\n\n// https://imagery.pasda.psu.edu/arcgis/services/pasda/UrbanTreeCanopy_Landcover/MapServer/WmsServer?SERVICE=WMS&\nexport type WMSGetFeatureInfoParameters = WMSCommonParameters & {\n  /** Request type */\n  request?: 'GetFeatureInfo';\n\n  /** x coordinate for the feature info request */\n  x: number;\n  /** y coordinate for the feature info request */\n  y: number;\n  /** list of layers to query (could be different from rendered layers) */\n  query_layers: string[];\n  /** MIME type of returned feature info */\n  info_format?: 'text/plain' | 'application/vnd.ogc.gml';\n\n  /** Layers to render */\n  layers: string[];\n  /** Styling */\n  styles?: unknown;\n  /** bounding box of the requested map image */\n  bbox: [number, number, number, number];\n  /** pixel width of returned image */\n  width: number;\n  /** pixels */\n  height: number;\n  /** srs for the image (not the bounding box) */\n  srs?: string;\n  /** requested format for the return image */\n  format?: 'image/png';\n};\n\nexport type WMSDescribeLayerParameters = WMSCommonParameters & {\n  /** Request type */\n  request?: 'DescribeLayer';\n};\n\nexport type WMSGetLegendGraphicParameters = WMSCommonParameters & {\n  /** Request type */\n  request?: 'GetLegendGraphic';\n};\n\n/**\n * The WMSService class provides\n * - provides type safe methods to form URLs to a WMS service\n * - provides type safe methods to query and parse results (and errors) from a WMS service\n * - implements the ImageService interface\n * @note Only the URL parameter conversion is supported. XML posts are not supported.\n */\nexport class WMSService extends ImageSource {\n  static type: 'wms' = 'wms';\n  static testURL = (url: string): boolean => url.toLowerCase().includes('wms');\n\n  props: Required<ImageServiceProps>;\n  fetch: (url: string, options?: RequestInit) => Promise<Response>;\n  capabilities: WMSCapabilities | null = null;\n\n  /** A list of loaders used by the WMSService methods */\n  readonly loaders = [\n    ImageLoader,\n    WMSErrorLoader,\n    WMSCapabilitiesLoader,\n    WMSFeatureInfoLoader,\n    WMSLayerDescriptionLoader\n  ];\n\n  /** Create a WMSService */\n  constructor(props: ImageServiceProps) {\n    super();\n    this.props = mergeImageServiceProps(props);\n    this.fetch = getFetchFunction(this.props);\n    this.props.loadOptions = {\n      ...this.props.loadOptions,\n      // We want error responses to throw exceptions, the WMSErrorLoader can do this\n      wms: {...this.props.loadOptions?.wms, throwOnError: true}\n    };\n  }\n\n  // ImageSource implementation\n  getMetadata(): Promise<ImageSourceMetadata> {\n    return this.getCapabilities();\n  }\n\n  getImage(parameters: GetImageParameters): Promise<ImageType> {\n    return this.getMap(parameters);\n  }\n\n  // WMS Service API Stubs\n\n  /** Get Capabilities */\n  async getCapabilities(\n    wmsParameters?: WMSGetCapabilitiesParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<WMSCapabilities> {\n    const url = this.getCapabilitiesURL(wmsParameters, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    const capabilities = await WMSCapabilitiesLoader.parse(arrayBuffer, this.props.loadOptions);\n    this.capabilities = capabilities;\n    return capabilities;\n  }\n\n  /** Get a map image */\n  async getMap(\n    options: WMSGetMapParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<ImageType> {\n    const url = this.getMapURL(options, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    try {\n      return await ImageLoader.parse(arrayBuffer, this.props.loadOptions);\n    } catch {\n      throw this._parseError(arrayBuffer);\n    }\n  }\n\n  /** Get Feature Info for a coordinate */\n  async getFeatureInfo(\n    options: WMSGetFeatureInfoParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<WMSFeatureInfo> {\n    const url = this.getFeatureInfoURL(options, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    return await WMSFeatureInfoLoader.parse(arrayBuffer, this.props.loadOptions);\n  }\n\n  /** Get Feature Info for a coordinate */\n  async getFeatureInfoText(\n    options: WMSGetFeatureInfoParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<string> {\n    options = {...options, info_format: 'text/plain'};\n    const url = this.getFeatureInfoURL(options, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    return new TextDecoder().decode(arrayBuffer);\n  }\n\n  /** Get more information about a layer */\n  async describeLayer(\n    options: WMSDescribeLayerParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<WMSLayerDescription> {\n    const url = this.describeLayerURL(options, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    return await WMSLayerDescriptionLoader.parse(arrayBuffer, this.props.loadOptions);\n  }\n\n  /** Get an image with a semantic legend */\n  async getLegendGraphic(\n    options: WMSGetLegendGraphicParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<ImageType> {\n    const url = this.getLegendGraphicURL(options, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    try {\n      return await ImageLoader.parse(arrayBuffer, this.props.loadOptions);\n    } catch {\n      throw this._parseError(arrayBuffer);\n    }\n  }\n\n  // Typed URL creators\n  // For applications that want full control of fetching and parsing\n\n  /** Generate a URL for the GetCapabilities request */\n  getCapabilitiesURL(\n    wmsParameters?: WMSGetCapabilitiesParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<WMSGetCapabilitiesParameters> = {\n      service: 'WMS',\n      version: '1.1.1',\n      request: 'GetCapabilities',\n      ...wmsParameters,\n      ...vendorParameters\n    };\n    return this._getWMSUrl(options, vendorParameters);\n  }\n\n  /** Generate a URL for the GetMap request */\n  getMapURL(\n    wmsParameters: WMSGetMapParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<WMSGetMapParameters> = {\n      service: 'WMS',\n      version: '1.1.1',\n      request: 'GetMap',\n      // layers: [],\n      // bbox: [-77.87304, 40.78975, -77.85828, 40.80228],\n      // width: 1200,\n      // height: 900,\n      styles: undefined,\n      srs: 'EPSG:4326',\n      format: 'image/png',\n      ...wmsParameters,\n      ...vendorParameters\n    };\n    return this._getWMSUrl(options, vendorParameters);\n  }\n\n  /** Generate a URL for the GetFeatureInfo request */\n  getFeatureInfoURL(\n    wmsParameters: WMSGetFeatureInfoParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<WMSGetFeatureInfoParameters> = {\n      service: 'WMS',\n      version: '1.1.1',\n      request: 'GetFeatureInfo',\n      // layers: [],\n      // bbox: [-77.87304, 40.78975, -77.85828, 40.80228],\n      // width: 1200,\n      // height: 900,\n      // x: undefined!,\n      // y: undefined!,\n      // query_layers: [],\n      srs: 'EPSG:4326',\n      format: 'image/png',\n      info_format: 'text/plain',\n      styles: undefined,\n      ...wmsParameters,\n      ...vendorParameters\n    };\n    return this._getWMSUrl(options, vendorParameters);\n  }\n\n  /** Generate a URL for the GetFeatureInfo request */\n  describeLayerURL(\n    wmsParameters: WMSDescribeLayerParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<WMSDescribeLayerParameters> = {\n      service: 'WMS',\n      version: '1.1.1',\n      request: 'DescribeLayer',\n      ...wmsParameters,\n      ...vendorParameters\n    };\n    return this._getWMSUrl(options, vendorParameters);\n  }\n\n  getLegendGraphicURL(\n    wmsParameters: WMSGetLegendGraphicParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<WMSGetLegendGraphicParameters> = {\n      service: 'WMS',\n      version: '1.1.1',\n      request: 'GetLegendGraphic',\n      ...wmsParameters,\n      ...vendorParameters\n    };\n    return this._getWMSUrl(options, vendorParameters);\n  }\n\n  // INTERNAL METHODS\n\n  /**\n   * @note case _getWMSUrl may need to be overridden to handle certain backends?\n   * */\n  protected _getWMSUrl(\n    options: Record<string, unknown>,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    let url = this.props.url;\n    let first = true;\n    for (const [key, value] of Object.entries(options)) {\n      url += first ? '?' : '&';\n      first = false;\n      if (Array.isArray(value)) {\n        url += `${key.toUpperCase()}=${value.join(',')}`;\n      } else {\n        url += `${key.toUpperCase()}=${value ? String(value) : ''}`;\n      }\n    }\n    return encodeURI(url);\n  }\n\n  /** Checks for and parses a WMS XML formatted ServiceError and throws an exception */\n  protected _checkResponse(response: Response, arrayBuffer: ArrayBuffer): void {\n    const contentType = response.headers['content-type'];\n    if (!response.ok || WMSErrorLoader.mimeTypes.includes(contentType)) {\n      const error = WMSErrorLoader.parseSync(arrayBuffer, this.props.loadOptions);\n      throw new Error(error);\n    }\n  }\n\n  /** Error situation detected */\n  protected _parseError(arrayBuffer: ArrayBuffer): Error {\n    const error = WMSErrorLoader.parseSync(arrayBuffer, this.props.loadOptions);\n    return new Error(error);\n  }\n}\n"],"mappings":"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"}