

import { parseWMSError } from './lib/wms/parse-wms';

const VERSION = typeof "3.3.3" !== 'undefined' ? "3.3.3" : 'latest';
export const WMSErrorLoader = {
  id: 'wms-error',
  name: 'WMS Error',
  module: 'wms',
  version: VERSION,
  worker: false,
  extensions: ['xml'],
  mimeTypes: ['application/vnd.ogc.se_xml', 'application/xml', 'text/xml'],
  testText: testXMLFile,
  options: {
    wms: {
      throwOnError: false
    }
  },
  parse: async (arrayBuffer, options) => parseTextSync(new TextDecoder().decode(arrayBuffer), options),
  parseSync: (arrayBuffer, options) => parseTextSync(new TextDecoder().decode(arrayBuffer), options),
  parseTextSync: (text, options) => parseTextSync(text, options)
};
function testXMLFile(text) {
  return text.startsWith('<?xml');
}
function parseTextSync(text, options) {
  const wmsOptions = {
    ...WMSErrorLoader.options.wms,
    ...(options === null || options === void 0 ? void 0 : options.wms)
  };
  const error = parseWMSError(text, wmsOptions);
  const message = wmsOptions.minimalErrors ? error : "WMS Service error: ".concat(error);
  if (wmsOptions.throwOnError) {
    throw new Error(message);
  }
  return message;
}
export const _typecheckWMSErrorLoader = WMSErrorLoader;
//# sourceMappingURL=wms-error-loader.js.map