{"version":3,"file":"deep-strict-equal.js","names":["deepStrictEqual","actual","expected","strict","Date","getTime","RegExp","source","global","multiline","lastIndex","ignoreCase","objEquiv","pSlice","Array","prototype","slice","isPrimitive","arg","isArguments","object","Object","toString","call","a","b","undefined","getPrototypeOf","aIsArgs","bIsArgs","ka","keys","kb","key","i","length","sort"],"sources":["../../../../src/lib/gml/deep-strict-equal.ts"],"sourcesContent":["// https://github.com/nodejs/node/commit/c1d82ac2ff15594840e2a1b9531b506ae067ed27;\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** @todo replace this ridiculous choice of deepStrictEqual */\n// eslint-disable-next-line complexity\nexport function deepStrictEqual(actual: unknown, expected: unknown, strict?: boolean) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n    // } else if (actual instanceof Buffer && expected instanceof Buffer) {\n    //   return compare(actual, expected) === 0;\n\n    // // 7.2. If the expected value is a Date object, the actual value is\n    // // equivalent if it is also a Date object that refers to the same time.\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n    // 7.3 If the expected value is a RegExp object, the actual value is\n    // equivalent if it is also a RegExp object with the same source and\n    // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (actual instanceof RegExp && expected instanceof RegExp) {\n    return (\n      actual.source === expected.source &&\n      actual.global === expected.global &&\n      actual.multiline === expected.multiline &&\n      actual.lastIndex === expected.lastIndex &&\n      actual.ignoreCase === expected.ignoreCase\n    );\n\n    // 7.4. Other pairs that do not both pass typeof value == 'object',\n    // equivalence is determined by ==.\n  } else if (\n    (actual === null || typeof actual !== 'object') &&\n    (expected === null || typeof expected !== 'object')\n  ) {\n    // eslint-disable-next-line eqeqeq\n    return strict ? actual === expected : actual == expected;\n\n    // 7.5 For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical 'prototype' property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n  }\n  return objEquiv(actual, expected, strict);\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst pSlice = Array.prototype.slice;\n\nfunction isPrimitive(arg) {\n  return arg === null || (typeof arg !== 'object' && typeof arg !== 'function');\n}\n\nfunction isArguments(object) {\n  // eslint-disable-next-line eqeqeq\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\n// eslint-disable-next-line complexity\nfunction objEquiv(a: unknown, b: unknown, strict) {\n  if (a === null || a === undefined || b === null || b === undefined) return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b)) return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;\n  const aIsArgs = isArguments(a);\n  const bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs)) return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepStrictEqual(a, b, strict);\n  }\n  const ka = Object.keys(a);\n  const kb = Object.keys(b);\n  let key;\n  let i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length) return false;\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  // ~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) return false;\n  }\n  // equivalent values for every corresponding key, and\n  // ~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepStrictEqual(a[key], b[key], strict)) return false;\n  }\n  return true;\n}\n"],"mappings":"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"}