{"version":3,"file":"image-service.js","names":["ImageService","props","mergeImageServiceProps","fetch","getFetchFunction","Error","parameters","granularParameters","getGranularParameters","url","getURLFromTemplate","response","arrayBuffer","ImageLoader","parse","bbox","east","north","west","south","Object","entries","key","value","replace","String","ImageSource","toLowerCase","includes","options","fetchFunction","fetchOptions","loadOptions"],"sources":["../../../../../src/lib/data-sources/image-services/image-service.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport {LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {ImageType} from '@loaders.gl/images';\nimport {ImageLoader} from '@loaders.gl/images';\n\nimport type {ImageSourceMetadata, GetImageParameters} from '../image-source';\nimport {ImageSource} from '../image-source';\n\n/** Template URL string should contain `${width}` etc which will be substituted. */\nexport type ImageServiceProps = {\n  /** Base URL to the service */\n  url: string;\n  /** Any load options to the loaders.gl Loaders used by the WMSService methods */\n  loadOptions?: LoaderOptions;\n};\n\n/**\n * Quickly connect to \"ad hoc\" image sources without subclassing ImageSource.\n * ImageSource allows template url strings to be used to ad hoc connect to arbitrary image data sources\n * Accepts a template url string and builds requests URLs\n */\nexport class ImageService extends ImageSource {\n  static type: 'template' = 'template';\n  static testURL = (url: string): boolean => url.toLowerCase().includes('{');\n\n  props: Required<ImageServiceProps>;\n  fetch: (url: string, options?: RequestInit) => Promise<Response>;\n\n  constructor(props: ImageServiceProps) {\n    super();\n    this.props = mergeImageServiceProps(props);\n    this.fetch = getFetchFunction(props);\n  }\n\n  // IMAGE SOURCE API\n\n  async getMetadata(): Promise<ImageSourceMetadata> {\n    throw new Error('ImageSource.getMetadata not implemented');\n  }\n\n  async getImage(parameters: GetImageParameters): Promise<ImageType> {\n    const granularParameters = this.getGranularParameters(parameters);\n    const url = this.getURLFromTemplate(granularParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    return await ImageLoader.parse(arrayBuffer);\n  }\n\n  // HELPERS\n\n  /** Break up bounding box in east, north, south, west */\n  protected getGranularParameters(parameters: GetImageParameters): Record<string, unknown> {\n    const [east, north, west, south] = parameters.bbox;\n    return {...parameters, east, north, south, west};\n  }\n\n  /** Supports both ${} and {} notations */\n  protected getURLFromTemplate(parameters: Record<string, unknown>): string {\n    let url = this.props.url;\n    for (const [key, value] of Object.entries(parameters)) {\n      // TODO - parameter could be repeated\n      // const regex = new RegExp(`\\${${key}}`, 'g');\n      url = url.replace(`\\${${key}}`, String(value));\n      url = url.replace(`{${key}}`, String(value));\n    }\n    return url;\n  }\n}\n\n/**\n * Gets the current fetch function from options\n * @todo - move to loader-utils module\n * @todo - use in core module counterpart\n * @param options\n * @param context\n */\nexport function getFetchFunction(options?: LoaderOptions) {\n  const fetchFunction = options?.fetch;\n\n  // options.fetch can be a function\n  if (fetchFunction && typeof fetchFunction === 'function') {\n    return (url: string, fetchOptions?: RequestInit) => fetchFunction(url, fetchOptions);\n  }\n\n  // options.fetch can be an options object, use global fetch with those options\n  const fetchOptions = options?.fetch;\n  if (fetchOptions && typeof fetchOptions !== 'function') {\n    return (url) => fetch(url, fetchOptions);\n  }\n\n  // else return the global fetch function\n  return (url) => fetch(url);\n}\n\nexport function mergeImageServiceProps(props: ImageServiceProps): Required<ImageServiceProps> {\n  return {\n    // Default fetch\n    ...props,\n    loadOptions: {\n      ...props.loadOptions,\n      fetch: getFetchFunction(props.loadOptions)\n    }\n  };\n}\n"],"mappings":"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"}