"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WMSService = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _images = require("@loaders.gl/images");
var _imageSource = require("../image-source");
var _imageService = require("./image-service");
var _wmsCapabilitiesLoader = require("../../../wms-capabilities-loader");
var _wmsFeatureInfoLoader = require("../../../wip/wms-feature-info-loader");
var _wmsLayerDescriptionLoader = require("../../../wip/wms-layer-description-loader");
var _wmsErrorLoader = require("../../../wms-error-loader");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var WMSService = function (_ImageSource) {
  (0, _inherits2.default)(WMSService, _ImageSource);
  var _super = _createSuper(WMSService);

  function WMSService(props) {
    var _this$props$loadOptio;
    var _this;
    (0, _classCallCheck2.default)(this, WMSService);
    _this = _super.call(this);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "props", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "fetch", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "capabilities", null);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "loaders", [_images.ImageLoader, _wmsErrorLoader.WMSErrorLoader, _wmsCapabilitiesLoader.WMSCapabilitiesLoader, _wmsFeatureInfoLoader.WMSFeatureInfoLoader, _wmsLayerDescriptionLoader.WMSLayerDescriptionLoader]);
    _this.props = (0, _imageService.mergeImageServiceProps)(props);
    _this.fetch = (0, _imageService.getFetchFunction)(_this.props);
    _this.props.loadOptions = _objectSpread(_objectSpread({}, _this.props.loadOptions), {}, {
      wms: _objectSpread(_objectSpread({}, (_this$props$loadOptio = _this.props.loadOptions) === null || _this$props$loadOptio === void 0 ? void 0 : _this$props$loadOptio.wms), {}, {
        throwOnError: true
      })
    });
    return _this;
  }

  (0, _createClass2.default)(WMSService, [{
    key: "getMetadata",
    value:
    function getMetadata() {
      return this.getCapabilities();
    }
  }, {
    key: "getImage",
    value: function getImage(parameters) {
      return this.getMap(parameters);
    }

  }, {
    key: "getCapabilities",
    value: function () {
      var _getCapabilities = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee(wmsParameters, vendorParameters) {
        var url, response, arrayBuffer, capabilities;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                url = this.getCapabilitiesURL(wmsParameters, vendorParameters);
                _context.next = 3;
                return this.fetch(url);
              case 3:
                response = _context.sent;
                _context.next = 6;
                return response.arrayBuffer();
              case 6:
                arrayBuffer = _context.sent;
                this._checkResponse(response, arrayBuffer);
                _context.next = 10;
                return _wmsCapabilitiesLoader.WMSCapabilitiesLoader.parse(arrayBuffer, this.props.loadOptions);
              case 10:
                capabilities = _context.sent;
                this.capabilities = capabilities;
                return _context.abrupt("return", capabilities);
              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function getCapabilities(_x, _x2) {
        return _getCapabilities.apply(this, arguments);
      }
      return getCapabilities;
    }()
  }, {
    key: "getMap",
    value: function () {
      var _getMap = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2(options, vendorParameters) {
        var url, response, arrayBuffer;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                url = this.getMapURL(options, vendorParameters);
                _context2.next = 3;
                return this.fetch(url);
              case 3:
                response = _context2.sent;
                _context2.next = 6;
                return response.arrayBuffer();
              case 6:
                arrayBuffer = _context2.sent;
                this._checkResponse(response, arrayBuffer);
                _context2.prev = 8;
                _context2.next = 11;
                return _images.ImageLoader.parse(arrayBuffer, this.props.loadOptions);
              case 11:
                return _context2.abrupt("return", _context2.sent);
              case 14:
                _context2.prev = 14;
                _context2.t0 = _context2["catch"](8);
                throw this._parseError(arrayBuffer);
              case 17:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[8, 14]]);
      }));
      function getMap(_x3, _x4) {
        return _getMap.apply(this, arguments);
      }
      return getMap;
    }()
  }, {
    key: "getFeatureInfo",
    value: function () {
      var _getFeatureInfo = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee3(options, vendorParameters) {
        var url, response, arrayBuffer;
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                url = this.getFeatureInfoURL(options, vendorParameters);
                _context3.next = 3;
                return this.fetch(url);
              case 3:
                response = _context3.sent;
                _context3.next = 6;
                return response.arrayBuffer();
              case 6:
                arrayBuffer = _context3.sent;
                this._checkResponse(response, arrayBuffer);
                _context3.next = 10;
                return _wmsFeatureInfoLoader.WMSFeatureInfoLoader.parse(arrayBuffer, this.props.loadOptions);
              case 10:
                return _context3.abrupt("return", _context3.sent);
              case 11:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function getFeatureInfo(_x5, _x6) {
        return _getFeatureInfo.apply(this, arguments);
      }
      return getFeatureInfo;
    }()
  }, {
    key: "getFeatureInfoText",
    value: function () {
      var _getFeatureInfoText = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee4(options, vendorParameters) {
        var url, response, arrayBuffer;
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _objectSpread(_objectSpread({}, options), {}, {
                  info_format: 'text/plain'
                });
                url = this.getFeatureInfoURL(options, vendorParameters);
                _context4.next = 4;
                return this.fetch(url);
              case 4:
                response = _context4.sent;
                _context4.next = 7;
                return response.arrayBuffer();
              case 7:
                arrayBuffer = _context4.sent;
                this._checkResponse(response, arrayBuffer);
                return _context4.abrupt("return", new TextDecoder().decode(arrayBuffer));
              case 10:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function getFeatureInfoText(_x7, _x8) {
        return _getFeatureInfoText.apply(this, arguments);
      }
      return getFeatureInfoText;
    }()
  }, {
    key: "describeLayer",
    value: function () {
      var _describeLayer = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee5(options, vendorParameters) {
        var url, response, arrayBuffer;
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                url = this.describeLayerURL(options, vendorParameters);
                _context5.next = 3;
                return this.fetch(url);
              case 3:
                response = _context5.sent;
                _context5.next = 6;
                return response.arrayBuffer();
              case 6:
                arrayBuffer = _context5.sent;
                this._checkResponse(response, arrayBuffer);
                _context5.next = 10;
                return _wmsLayerDescriptionLoader.WMSLayerDescriptionLoader.parse(arrayBuffer, this.props.loadOptions);
              case 10:
                return _context5.abrupt("return", _context5.sent);
              case 11:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
      function describeLayer(_x9, _x10) {
        return _describeLayer.apply(this, arguments);
      }
      return describeLayer;
    }()
  }, {
    key: "getLegendGraphic",
    value: function () {
      var _getLegendGraphic = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee6(options, vendorParameters) {
        var url, response, arrayBuffer;
        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                url = this.getLegendGraphicURL(options, vendorParameters);
                _context6.next = 3;
                return this.fetch(url);
              case 3:
                response = _context6.sent;
                _context6.next = 6;
                return response.arrayBuffer();
              case 6:
                arrayBuffer = _context6.sent;
                this._checkResponse(response, arrayBuffer);
                _context6.prev = 8;
                _context6.next = 11;
                return _images.ImageLoader.parse(arrayBuffer, this.props.loadOptions);
              case 11:
                return _context6.abrupt("return", _context6.sent);
              case 14:
                _context6.prev = 14;
                _context6.t0 = _context6["catch"](8);
                throw this._parseError(arrayBuffer);
              case 17:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this, [[8, 14]]);
      }));
      function getLegendGraphic(_x11, _x12) {
        return _getLegendGraphic.apply(this, arguments);
      }
      return getLegendGraphic;
    }()
  }, {
    key: "getCapabilitiesURL",
    value:

    function getCapabilitiesURL(wmsParameters, vendorParameters) {
      var options = _objectSpread(_objectSpread({
        service: 'WMS',
        version: '1.1.1',
        request: 'GetCapabilities'
      }, wmsParameters), vendorParameters);
      return this._getWMSUrl(options, vendorParameters);
    }

  }, {
    key: "getMapURL",
    value:
    function getMapURL(wmsParameters, vendorParameters) {
      var options = _objectSpread(_objectSpread({
        service: 'WMS',
        version: '1.1.1',
        request: 'GetMap',
        styles: undefined,
        srs: 'EPSG:4326',
        format: 'image/png'
      }, wmsParameters), vendorParameters);
      return this._getWMSUrl(options, vendorParameters);
    }

  }, {
    key: "getFeatureInfoURL",
    value:
    function getFeatureInfoURL(wmsParameters, vendorParameters) {
      var options = _objectSpread(_objectSpread({
        service: 'WMS',
        version: '1.1.1',
        request: 'GetFeatureInfo',
        srs: 'EPSG:4326',
        format: 'image/png',
        info_format: 'text/plain',
        styles: undefined
      }, wmsParameters), vendorParameters);
      return this._getWMSUrl(options, vendorParameters);
    }

  }, {
    key: "describeLayerURL",
    value:
    function describeLayerURL(wmsParameters, vendorParameters) {
      var options = _objectSpread(_objectSpread({
        service: 'WMS',
        version: '1.1.1',
        request: 'DescribeLayer'
      }, wmsParameters), vendorParameters);
      return this._getWMSUrl(options, vendorParameters);
    }
  }, {
    key: "getLegendGraphicURL",
    value: function getLegendGraphicURL(wmsParameters, vendorParameters) {
      var options = _objectSpread(_objectSpread({
        service: 'WMS',
        version: '1.1.1',
        request: 'GetLegendGraphic'
      }, wmsParameters), vendorParameters);
      return this._getWMSUrl(options, vendorParameters);
    }

  }, {
    key: "_getWMSUrl",
    value:

    function _getWMSUrl(options, vendorParameters) {
      var url = this.props.url;
      var first = true;
      for (var _i = 0, _Object$entries = Object.entries(options); _i < _Object$entries.length; _i++) {
        var _Object$entries$_i = (0, _slicedToArray2.default)(_Object$entries[_i], 2),
          key = _Object$entries$_i[0],
          value = _Object$entries$_i[1];
        url += first ? '?' : '&';
        first = false;
        if (Array.isArray(value)) {
          url += "".concat(key.toUpperCase(), "=").concat(value.join(','));
        } else {
          url += "".concat(key.toUpperCase(), "=").concat(value ? String(value) : '');
        }
      }
      return encodeURI(url);
    }

  }, {
    key: "_checkResponse",
    value:
    function _checkResponse(response, arrayBuffer) {
      var contentType = response.headers['content-type'];
      if (!response.ok || _wmsErrorLoader.WMSErrorLoader.mimeTypes.includes(contentType)) {
        var error = _wmsErrorLoader.WMSErrorLoader.parseSync(arrayBuffer, this.props.loadOptions);
        throw new Error(error);
      }
    }

  }, {
    key: "_parseError",
    value:
    function _parseError(arrayBuffer) {
      var error = _wmsErrorLoader.WMSErrorLoader.parseSync(arrayBuffer, this.props.loadOptions);
      return new Error(error);
    }
  }]);
  return WMSService;
}(_imageSource.ImageSource);
exports.WMSService = WMSService;
(0, _defineProperty2.default)(WMSService, "type", 'wms');
(0, _defineProperty2.default)(WMSService, "testURL", function (url) {
  return url.toLowerCase().includes('wms');
});
//# sourceMappingURL=wms-service.js.map