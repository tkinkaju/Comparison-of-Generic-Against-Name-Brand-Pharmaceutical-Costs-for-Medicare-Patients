{"version":3,"file":"arcgis-feature-service.js","names":["ArcGISFeatureService","props","url","loadOptions","fetch","options","getUrl","boundingBox","path"],"sources":["../../../src/wip/arcgis-feature-service.ts"],"sourcesContent":["// @ts-nocheck\n\nimport {LoaderOptions} from '@loaders.gl/loader-utils';\n// import {GeoJSONLoader} from '@loaders.gl/geojson';\n\ntype FetchLike = (url: string, options?: RequestInit) => Promise<Response>;\n\nexport type ArcGISImageServiceQueryOptions = {\n  returnGeometry: boolean;\n  where: '1%3D1';\n  outSR: 4326;\n  outFields: string | '*';\n  inSR: 4326;\n  geometry: `${-90}%2C+${30}%2C+${-70}%2C+${50}`;\n  geometryType: 'esriGeometryEnvelope'; // TODO - look up valid values in Esri docs\n  spatialRel: 'esriSpatialRelIntersects'; // TODO - look up valid values in Esri docs\n  geometryPrecision: number; // TODO - look up valid values in Esri docs\n  resultType: 'tile'; // TODO - look up valid values in Esri docs\n  f?: 'geojson'; // TODO - look up valid values in Esri docs\n}\n\n// const DEFAULT_QUERY_OPTIONS: Required<ArcGISImageServiceQueryOptions>  = {\n//   returnGeometry:true,\n//   where: '1%3D1',\n//   outSR: 4326,\n//   outFields: '*',\n//   inSR: 4326,\n//   geometry: `${-90}%2C+${30}%2C+${-70}%2C+${50}`,\n//   geometryType: 'esriGeometryEnvelope',\n//   spatialRel: 'esriSpatialRelIntersects',\n//   geometryPrecision: 6,\n//   resultType: 'tile',\n//   f: 'geojson'\n// };\n\nexport type ArcGISFeatureServiceProps = ArcGISImageServiceQueryOptions & {\n  url: string;\n  loadOptions?: LoaderOptions;\n  fetch?: typeof fetch | FetchLike;\n};\n\nexport class ArcGISFeatureService {\n  url: string;\n  loadOptions: LoaderOptions;\n  fetch: typeof fetch | FetchLike;\n\n  constructor(props: ArcGISFeatureServiceProps) {\n    this.url = props.url;\n    this.loadOptions = props.loadOptions || {};\n    this.fetch = props.fetch || fetch;\n  }\n\n // URL creators\n\n  metadataURL(options: {parameters?: Record<string, unknown>}): string {\n    return this.getUrl({...options});\n  }\n\n  /** \n   * Form a URL to an ESRI FeatureServer\n// https://services2.arcgis.com/CcI36Pduqd0OR4W9/ArcGIS/rest/services/Bicycle_Routes_Public/FeatureServer/0/query?\n//   returnGeometry=true&where=1%3D1&outSR=4326&outFields=*&inSR=4326&geometry=${-90}%2C+${30}%2C+${-70}%2C+${50}&\n//   geometryType=esriGeometryEnvelope&spatialRel=esriSpatialRelIntersects&geometryPrecision=6&resultType=tile&f=geojson`\n   */\n  exportImageURL(options: {\n    boundingBox: [number, number, number, number];\n    boundingBoxSR?: string;\n    width: number;\n    height: number;\n    imageSR?: string;\n    time?: never;\n    f?: 'geojson';\n    resultType?: 'tile';\n    noData?: never;\n    noDataInterpretation?: 'esriNoDataMatchAny';\n    interpolation?: '+RSP_NearestNeighbor';\n    compression?: never\n    compressionQuality?: never;\n    bandIds?: never;\n    mosaicRule?: never;\n    renderingRule?: never;\n    f?: 'image';\n  }): string {\n    const {boundingBox} = options;\n    // const bbox = `bbox=${boundingBox[0]},${boundingBox[1]},${boundingBox[2]},${boundingBox[3]}`;\n    // const size = `size=${width},${height}`\n    return this.getUrl({path: 'exportImage', });\n  }\n}\n"],"mappings":";;;;;;;;;;;;IAyCaA,oBAAoB;EAK/B,8BAAYC,KAAgC,EAAE;IAAA;IAAA;IAAA;IAAA;IAC5C,IAAI,CAACC,GAAG,GAAGD,KAAK,CAACC,GAAG;IACpB,IAAI,CAACC,WAAW,GAAGF,KAAK,CAACE,WAAW,IAAI,CAAC,CAAC;IAC1C,IAAI,CAACC,KAAK,GAAGH,KAAK,CAACG,KAAK,IAAIA,KAAK;EACnC;;EAAC;IAAA;IAAA;;IAID,qBAAYC,OAA+C,EAAU;MACnE,OAAO,IAAI,CAACC,MAAM,mBAAKD,OAAO,EAAE;IAClC;;EAAC;IAAA;IAAA;IAQD,wBAAeA,OAkBd,EAAU;MACT,IAAOE,WAAW,GAAIF,OAAO,CAAtBE,WAAW;MAGlB,OAAO,IAAI,CAACD,MAAM,CAAC;QAACE,IAAI,EAAE;MAAe,CAAC,CAAC;IAC7C;EAAC;EAAA;AAAA;AAAA"}