{"version":3,"file":"null-loader.js","names":["VERSION","NullWorkerLoader","name","id","module","version","worker","mimeTypes","extensions","tests","options","null","parseSync","arrayBuffer","context","echoParameters","JSON","parse","stringify","NullLoader","parseInBatches","asyncIterator","batch","generator"],"sources":["../../src/null-loader.ts"],"sourcesContent":["// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nimport {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\n\n/**\n * Loads any data and returns null (or optionally passes through data unparsed)\n */\nexport const NullWorkerLoader: Loader = {\n  name: 'Null loader',\n  id: 'null',\n  module: 'core',\n  version: VERSION,\n  worker: true,\n  mimeTypes: ['application/x.empty'],\n  extensions: ['null'],\n  tests: [() => false],\n  options: {\n    null: {}\n  }\n};\n\n/**\n * Returns arguments passed to the parse API in a format that can be transfered to a\n * web worker. The `context` parameter is stripped using JSON.stringify & parse.\n */\nfunction parseSync(arrayBuffer, options, context) {\n  if (!options.null.echoParameters) return null;\n  context = context && JSON.parse(JSON.stringify(context));\n  return {arrayBuffer, options, context};\n}\n\n/**\n * Loads any data and returns null (or optionally passes through data unparsed)\n */\nexport const NullLoader: LoaderWithParser = {\n  name: 'Null loader',\n  id: 'null',\n  module: 'core',\n  version: VERSION,\n  mimeTypes: ['application/x.empty'],\n  extensions: ['null'],\n  parse: async (arrayBuffer, options, context) => parseSync(arrayBuffer, options, context),\n  parseSync,\n  parseInBatches: async function* generator(asyncIterator, options, context) {\n    for await (const batch of asyncIterator) {\n      yield parseSync(batch, options, context);\n    }\n  },\n  tests: [() => false],\n  options: {\n    null: {\n      echoParameters: false\n    }\n  }\n};\n"],"mappings":";;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,cAAkB,KAAK,WAAW,aAAiB,QAAQ;AAOpE,IAAMC,gBAAwB,GAAG;EACtCC,IAAI,EAAE,aAAa;EACnBC,EAAE,EAAE,MAAM;EACVC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAEL,OAAO;EAChBM,MAAM,EAAE,IAAI;EACZC,SAAS,EAAE,CAAC,qBAAqB,CAAC;EAClCC,UAAU,EAAE,CAAC,MAAM,CAAC;EACpBC,KAAK,EAAE,CAAC;IAAA,OAAM,KAAK;EAAA,EAAC;EACpBC,OAAO,EAAE;IACPC,IAAI,EAAE,CAAC;EACT;AACF,CAAC;;AAAC;AAMF,SAASC,SAAS,CAACC,WAAW,EAAEH,OAAO,EAAEI,OAAO,EAAE;EAChD,IAAI,CAACJ,OAAO,CAACC,IAAI,CAACI,cAAc,EAAE,OAAO,IAAI;EAC7CD,OAAO,GAAGA,OAAO,IAAIE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,OAAO,CAAC,CAAC;EACxD,OAAO;IAACD,WAAW,EAAXA,WAAW;IAAEH,OAAO,EAAPA,OAAO;IAAEI,OAAO,EAAPA;EAAO,CAAC;AACxC;;AAKO,IAAMK,UAA4B,GAAG;EAC1CjB,IAAI,EAAE,aAAa;EACnBC,EAAE,EAAE,MAAM;EACVC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAEL,OAAO;EAChBO,SAAS,EAAE,CAAC,qBAAqB,CAAC;EAClCC,UAAU,EAAE,CAAC,MAAM,CAAC;EACpBS,KAAK;IAAA,uEAAE,iBAAOJ,WAAW,EAAEH,OAAO,EAAEI,OAAO;MAAA;QAAA;UAAA;YAAA;cAAA,iCAAKF,SAAS,CAACC,WAAW,EAAEH,OAAO,EAAEI,OAAO,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA;EACxFF,SAAS,EAATA,SAAS;EACTQ,cAAc;IAAA,6EAAE,kBAA0BC,aAAa,EAAEX,OAAO,EAAEI,OAAO;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA;cAAA,2BAC7CO,aAAa;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAtBC,KAAK;cAAA;cACpB,OAAMV,SAAS,CAACU,KAAK,EAAEZ,OAAO,EAAEI,OAAO,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE3C;IAAA,SAJ+BS,SAAS;MAAA;IAAA;IAAA,OAATA,SAAS;EAAA,GAIxC;EACDd,KAAK,EAAE,CAAC;IAAA,OAAM,KAAK;EAAA,EAAC;EACpBC,OAAO,EAAE;IACPC,IAAI,EAAE;MACJI,cAAc,EAAE;IAClB;EACF;AACF,CAAC;AAAC"}