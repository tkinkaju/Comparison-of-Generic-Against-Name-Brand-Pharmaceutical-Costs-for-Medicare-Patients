{"version":3,"file":"make-dom-stream.js","names":["makeStream","source","options","iterator","Symbol","asyncIterator","ReadableStream","type","pull","controller","next","done","value","close","enqueue","Uint8Array","error","cancel","return","highWaterMark"],"sources":["../../../../src/iterators/make-stream/make-dom-stream.ts"],"sourcesContent":["export type MakeStreamOptions = {\n  /** Stream allocates an arrayBuffer. Enables use of a default reader. */\n  autoAllocateChunkSize?: number;\n  /** Total number of chunks in queue before back pressure is applied */\n  highWaterMark?: number;\n};\n\n/**\n * Builds a DOM stream from an iterator\n * This stream is currently used in browsers only,\n * but note that Web stream support is present in Node from Node 16\n * https://nodejs.org/api/webstreams.html#webstreams_web_streams_api\n */\nexport function makeStream<ArrayBuffer>(\n  source: Iterable<ArrayBuffer> | AsyncIterable<ArrayBuffer>,\n  options?: MakeStreamOptions\n): ReadableStream {\n  const iterator = source[Symbol.asyncIterator]\n    ? (source as AsyncIterable<ArrayBuffer>)[Symbol.asyncIterator]()\n    : (source as Iterable<ArrayBuffer>)[Symbol.iterator]();\n\n  return new ReadableStream<Uint8Array>(\n    {\n      // Create a byte stream (enables `Response(stream).arrayBuffer()`)\n      // Only supported on Chrome\n      // See: https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController\n      type: 'bytes',\n\n      async pull(controller) {\n        try {\n          const {done, value} = await iterator.next();\n          if (done) {\n            controller.close();\n          } else {\n            // TODO - ignores controller.desiredSize\n            // @ts-expect-error Unclear why value is not correctly typed\n            controller.enqueue(new Uint8Array(value));\n          }\n        } catch (error) {\n          controller.error(error);\n        }\n      },\n\n      async cancel() {\n        await iterator?.return?.();\n      }\n    },\n    // options: QueingStrategy<Uint8Array>\n    {\n      // This is bytes, not chunks\n      highWaterMark: 2 ** 24,\n      ...options\n    }\n  );\n}\n"],"mappings":";;;;;;;;;;;;AAaO,SAASA,UAAU,CACxBC,MAA0D,EAC1DC,OAA2B,EACX;EAChB,IAAMC,QAAQ,GAAGF,MAAM,CAACG,MAAM,CAACC,aAAa,CAAC,GACxCJ,MAAM,CAAgCG,MAAM,CAACC,aAAa,CAAC,EAAE,GAC7DJ,MAAM,CAA2BG,MAAM,CAACD,QAAQ,CAAC,EAAE;EAExD,OAAO,IAAIG,cAAc,CACvB;IAIEC,IAAI,EAAE,OAAO;IAEPC,IAAI,gBAACC,UAAU,EAAE;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAESN,QAAQ,CAACO,IAAI,EAAE;cAAA;gBAAA;gBAApCC,IAAI,wBAAJA,IAAI;gBAAEC,KAAK,wBAALA,KAAK;gBAClB,IAAID,IAAI,EAAE;kBACRF,UAAU,CAACI,KAAK,EAAE;gBACpB,CAAC,MAAM;kBAGLJ,UAAU,CAACK,OAAO,CAAC,IAAIC,UAAU,CAACH,KAAK,CAAC,CAAC;gBAC3C;gBAAC;gBAAA;cAAA;gBAAA;gBAAA;gBAEDH,UAAU,CAACO,KAAK,aAAO;cAAC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAE5B,CAAC;IAEKC,MAAM,oBAAG;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACPd,QAAQ,aAARA,QAAQ,2CAARA,QAAQ,CAAEe,MAAM,qDAAhB,sBAAAf,QAAQ,CAAY;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAC5B;EACF,CAAC;IAICgB,aAAa,WAAE,CAAC,EAAI,EAAE;EAAA,GACnBjB,OAAO,EAEb;AACH"}