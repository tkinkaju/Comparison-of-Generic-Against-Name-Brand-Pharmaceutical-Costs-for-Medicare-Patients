{"version":3,"file":"check-errors.js","names":["checkFetchResponseStatus","response","ok","errorMessage","status","statusText","text","getErrorText","Error","checkFetchResponseStatusSync","matches","match","slice"],"sources":["../../../../src/lib/loader-utils/check-errors.ts"],"sourcesContent":["export async function checkFetchResponseStatus(response) {\n  if (!response.ok) {\n    let errorMessage = `fetch failed ${response.status} ${response.statusText}`;\n    try {\n      const text = await response.text();\n      if (text) {\n        errorMessage += `: ${getErrorText(text)}`;\n      }\n    } catch (error) {\n      // ignore error\n    }\n    throw new Error(errorMessage);\n  }\n}\n\nexport function checkFetchResponseStatusSync(response) {\n  if (!response.ok) {\n    throw new Error(`fetch failed ${response.status}`);\n  }\n}\n\nfunction getErrorText(text) {\n  // Look for HTML error texts\n  const matches = text.match('<pre>(.*)</pre>');\n  return matches ? matches[1] : ` ${text.slice(0, 10)}...`;\n}\n"],"mappings":";;;;;;;;;;SAAsBA,wBAAwB;EAAA;AAAA;AAAA;EAAA,sFAAvC,iBAAwCC,QAAQ;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,IAChDA,QAAQ,CAACC,EAAE;cAAA;cAAA;YAAA;YACVC,YAAY,0BAAmBF,QAAQ,CAACG,MAAM,cAAIH,QAAQ,CAACI,UAAU;YAAA;YAAA;YAAA,OAEpDJ,QAAQ,CAACK,IAAI,EAAE;UAAA;YAA5BA,IAAI;YACV,IAAIA,IAAI,EAAE;cACRH,YAAY,gBAASI,YAAY,CAACD,IAAI,CAAC,CAAE;YAC3C;YAAC;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA,MAIG,IAAIE,KAAK,CAACL,YAAY,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAEhC;EAAA;AAAA;AAEM,SAASM,4BAA4B,CAACR,QAAQ,EAAE;EACrD,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAM,IAAIM,KAAK,wBAAiBP,QAAQ,CAACG,MAAM,EAAG;EACpD;AACF;AAEA,SAASG,YAAY,CAACD,IAAI,EAAE;EAE1B,IAAMI,OAAO,GAAGJ,IAAI,CAACK,KAAK,CAAC,iBAAiB,CAAC;EAC7C,OAAOD,OAAO,GAAGA,OAAO,CAAC,CAAC,CAAC,cAAOJ,IAAI,CAACM,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,QAAK;AAC1D"}