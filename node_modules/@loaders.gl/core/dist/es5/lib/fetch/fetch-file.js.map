{"version":3,"file":"fetch-file.js","names":["fetchFile","url","options","resolvePath","fetchOptions","fetch","makeResponse"],"sources":["../../../../src/lib/fetch/fetch-file.ts"],"sourcesContent":["import {resolvePath} from '@loaders.gl/loader-utils';\nimport {makeResponse} from '../utils/response-utils';\n// import {getErrorMessageFromResponse} from './fetch-error-message';\n\n/**\n * fetch compatible function\n * Reads file data from:\n * - http/http urls\n * - data urls\n * - File/Blob objects\n * Leverages `@loaders.gl/polyfills` for Node.js support\n * Respects pathPrefix and file aliases\n */\nexport async function fetchFile(\n  url: string | Blob,\n  options?: RequestInit & {fetch?: RequestInit | Function}\n): Promise<Response> {\n  if (typeof url === 'string') {\n    url = resolvePath(url);\n\n    let fetchOptions: RequestInit = options as RequestInit;\n    if (options?.fetch && typeof options?.fetch !== 'function') {\n      fetchOptions = options.fetch;\n    }\n\n    return await fetch(url, fetchOptions);\n  }\n\n  return await makeResponse(url);\n}\n"],"mappings":";;;;;;;;;AAAA;AACA;AAAqD,SAY/BA,SAAS;EAAA;AAAA;AAAA;EAAA,uEAAxB,iBACLC,GAAkB,EAClBC,OAAwD;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,MAEpD,OAAOD,GAAG,KAAK,QAAQ;cAAA;cAAA;YAAA;YACzBA,GAAG,GAAG,IAAAE,wBAAW,EAACF,GAAG,CAAC;YAElBG,YAAyB,GAAGF,OAAO;YACvC,IAAIA,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEG,KAAK,IAAI,QAAOH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,KAAK,MAAK,UAAU,EAAE;cAC1DD,YAAY,GAAGF,OAAO,CAACG,KAAK;YAC9B;YAAC;YAAA,OAEYA,KAAK,CAACJ,GAAG,EAAEG,YAAY,CAAC;UAAA;YAAA;UAAA;YAAA;YAAA,OAG1B,IAAAE,2BAAY,EAACL,GAAG,CAAC;UAAA;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC/B;EAAA;AAAA"}