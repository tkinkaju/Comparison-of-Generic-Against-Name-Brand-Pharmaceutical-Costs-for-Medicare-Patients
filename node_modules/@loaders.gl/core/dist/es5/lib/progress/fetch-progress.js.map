{"version":3,"file":"fetch-progress.js","names":["fetchProgress","response","onProgress","onDone","onError","ok","body","contentLength","headers","get","totalBytes","parseInt","ReadableStream","getReader","progressStream","start","controller","reader","read","Response","loadedBytes","done","value","close","byteLength","percent","Math","round","enqueue","error"],"sources":["../../../../src/lib/progress/fetch-progress.ts"],"sourcesContent":["// Forked from github AnthumChris/fetch-progress-indicators under MIT license\n\n/**\n * Intercepts the Response stream and creates a new Response\n */\nexport default async function fetchProgress(\n  response: Response | Promise<Response>,\n  onProgress: any, // TODO better callback types\n  onDone = () => {},\n  onError = () => {}\n) {\n  response = await response;\n  if (!response.ok) {\n    // ERROR checking needs to be done separately\n    return response;\n  }\n  const body = response.body;\n  if (!body) {\n    // 'ReadableStream not yet supported in this browser.\n    return response;\n  }\n  const contentLength = response.headers.get('content-length') || 0;\n  const totalBytes = contentLength && parseInt(contentLength);\n  if (!(contentLength > 0)) {\n    return response;\n  }\n  // Currently override only implemented in browser\n  if (typeof ReadableStream === 'undefined' || !body.getReader) {\n    return response;\n  }\n\n  // Create a new stream that invisbly wraps original stream\n  const progressStream = new ReadableStream({\n    async start(controller) {\n      const reader = body.getReader();\n      await read(controller, reader, 0, totalBytes, onProgress, onDone, onError);\n    }\n  });\n\n  return new Response(progressStream);\n}\n\n// Forward to original streams controller\n// TODO - this causes a crazy deep \"async stack\"... rewrite as async iterator?\n// eslint-disable-next-line max-params\nasync function read(controller, reader, loadedBytes, totalBytes, onProgress, onDone, onError) {\n  try {\n    const {done, value} = await reader.read();\n    if (done) {\n      onDone();\n      controller.close();\n      return;\n    }\n    loadedBytes += value.byteLength;\n    const percent = Math.round((loadedBytes / totalBytes) * 100);\n    onProgress(percent, {loadedBytes, totalBytes});\n    controller.enqueue(value);\n    await read(controller, reader, loadedBytes, totalBytes, onProgress, onDone, onError);\n  } catch (error) {\n    controller.error(error);\n    onError(error);\n  }\n}\n"],"mappings":";;;;;;;;;SAK8BA,aAAa;EAAA;AAAA;AAAA;EAAA,2EAA5B,kBACbC,QAAsC,EACtCC,UAAe;IAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;MAAA;QAAA;UAAA;YACfC,MAAM,8DAAG,YAAM,CAAC,CAAC;YACjBC,OAAO,8DAAG,YAAM,CAAC,CAAC;YAAA;YAAA,OAEDH,QAAQ;UAAA;YAAzBA,QAAQ;YAAA,IACHA,QAAQ,CAACI,EAAE;cAAA;cAAA;YAAA;YAAA,kCAEPJ,QAAQ;UAAA;YAEXK,IAAI,GAAGL,QAAQ,CAACK,IAAI;YAAA,IACrBA,IAAI;cAAA;cAAA;YAAA;YAAA,kCAEAL,QAAQ;UAAA;YAEXM,aAAa,GAAGN,QAAQ,CAACO,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC;YAC3DC,UAAU,GAAGH,aAAa,IAAII,QAAQ,CAACJ,aAAa,CAAC;YAAA,IACrDA,aAAa,GAAG,CAAC;cAAA;cAAA;YAAA;YAAA,kCACdN,QAAQ;UAAA;YAAA,MAGb,OAAOW,cAAc,KAAK,WAAW,IAAI,CAACN,IAAI,CAACO,SAAS;cAAA;cAAA;YAAA;YAAA,kCACnDZ,QAAQ;UAAA;YAIXa,cAAc,GAAG,IAAIF,cAAc,CAAC;cAClCG,KAAK,iBAACC,UAAU,EAAE;gBAAA;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAChBC,MAAM,GAAGX,IAAI,CAACO,SAAS,EAAE;0BAAA;0BAAA,OACzBK,IAAI,CAACF,UAAU,EAAEC,MAAM,EAAE,CAAC,EAAEP,UAAU,EAAER,UAAU,EAAEC,MAAM,EAAEC,OAAO,CAAC;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA;cAC5E;YACF,CAAC,CAAC;YAAA,kCAEK,IAAIe,QAAQ,CAACL,cAAc,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACpC;EAAA;AAAA;AAAA,SAKcI,IAAI;EAAA;AAAA;AAAA;EAAA,kEAAnB,kBAAoBF,UAAU,EAAEC,MAAM,EAAEG,WAAW,EAAEV,UAAU,EAAER,UAAU,EAAEC,MAAM,EAAEC,OAAO;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAE5Da,MAAM,CAACC,IAAI,EAAE;UAAA;YAAA;YAAlCG,IAAI,sBAAJA,IAAI;YAAEC,KAAK,sBAALA,KAAK;YAAA,KACdD,IAAI;cAAA;cAAA;YAAA;YACNlB,MAAM,EAAE;YACRa,UAAU,CAACO,KAAK,EAAE;YAAC;UAAA;YAGrBH,WAAW,IAAIE,KAAK,CAACE,UAAU;YACzBC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAEP,WAAW,GAAGV,UAAU,GAAI,GAAG,CAAC;YAC5DR,UAAU,CAACuB,OAAO,EAAE;cAACL,WAAW,EAAXA,WAAW;cAAEV,UAAU,EAAVA;YAAU,CAAC,CAAC;YAC9CM,UAAU,CAACY,OAAO,CAACN,KAAK,CAAC;YAAC;YAAA,OACpBJ,IAAI,CAACF,UAAU,EAAEC,MAAM,EAAEG,WAAW,EAAEV,UAAU,EAAER,UAAU,EAAEC,MAAM,EAAEC,OAAO,CAAC;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAEpFY,UAAU,CAACa,KAAK,cAAO;YACvBzB,OAAO,cAAO;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAElB;EAAA;AAAA"}