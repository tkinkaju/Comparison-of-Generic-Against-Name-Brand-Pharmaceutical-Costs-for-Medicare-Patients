{"version":3,"file":"parse-3d-tile.js","names":["TILE3D_TYPE","getMagicString","parsePointCloud3DTile","parseBatchedModel3DTile","parseInstancedModel3DTile","parseComposite3DTile","parseGltf3DTile","parse3DTile","arrayBuffer","byteOffset","options","context","tile","type","COMPOSITE","BATCHED_3D_MODEL","GLTF","INSTANCED_3D_MODEL","POINT_CLOUD","Error"],"sources":["../../../../src/lib/parsers/parse-3d-tile.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_TYPE} from '../constants';\nimport {getMagicString} from './helpers/parse-utils';\n\nimport {parsePointCloud3DTile} from './parse-3d-tile-point-cloud';\nimport {parseBatchedModel3DTile} from './parse-3d-tile-batched-model';\nimport {parseInstancedModel3DTile} from './parse-3d-tile-instanced-model';\nimport {parseComposite3DTile} from './parse-3d-tile-composite';\nimport {parseGltf3DTile} from './parse-3d-tile-gltf';\n\n// Extracts\nexport async function parse3DTile(arrayBuffer, byteOffset = 0, options, context, tile = {}) {\n  // @ts-expect-error\n  tile.byteOffset = byteOffset;\n  // @ts-expect-error\n  tile.type = getMagicString(arrayBuffer, byteOffset);\n\n  // @ts-expect-error\n  switch (tile.type) {\n    case TILE3D_TYPE.COMPOSITE:\n      // Note: We pass this function as argument so that embedded tiles can be parsed recursively\n      return await parseComposite3DTile(\n        tile,\n        arrayBuffer,\n        byteOffset,\n        options,\n        context,\n        parse3DTile\n      );\n\n    case TILE3D_TYPE.BATCHED_3D_MODEL:\n      return await parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.GLTF:\n      return await parseGltf3DTile(tile, arrayBuffer, options, context);\n\n    case TILE3D_TYPE.INSTANCED_3D_MODEL:\n      return await parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.POINT_CLOUD:\n      return await parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    default:\n      // @ts-expect-error\n      throw new Error(`3DTileLoader: unknown type ${tile.type}`); // eslint-disable-line\n  }\n}\n"],"mappings":";;AAGA,SAAQA,WAAW,QAAO,cAAc;AACxC,SAAQC,cAAc,QAAO,uBAAuB;AAEpD,SAAQC,qBAAqB,QAAO,6BAA6B;AACjE,SAAQC,uBAAuB,QAAO,+BAA+B;AACrE,SAAQC,yBAAyB,QAAO,iCAAiC;AACzE,SAAQC,oBAAoB,QAAO,2BAA2B;AAC9D,SAAQC,eAAe,QAAO,sBAAsB;;AAGpD,OAAO,eAAeC,WAAW,CAACC,WAAW,EAA+C;EAAA,IAA7CC,UAAU,uEAAG,CAAC;EAAA,IAAEC,OAAO;EAAA,IAAEC,OAAO;EAAA,IAAEC,IAAI,uEAAG,CAAC,CAAC;EAExFA,IAAI,CAACH,UAAU,GAAGA,UAAU;EAE5BG,IAAI,CAACC,IAAI,GAAGZ,cAAc,CAACO,WAAW,EAAEC,UAAU,CAAC;;EAGnD,QAAQG,IAAI,CAACC,IAAI;IACf,KAAKb,WAAW,CAACc,SAAS;MAExB,OAAO,MAAMT,oBAAoB,CAC/BO,IAAI,EACJJ,WAAW,EACXC,UAAU,EACVC,OAAO,EACPC,OAAO,EACPJ,WAAW,CACZ;IAEH,KAAKP,WAAW,CAACe,gBAAgB;MAC/B,OAAO,MAAMZ,uBAAuB,CAACS,IAAI,EAAEJ,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,CAAC;IAEvF,KAAKX,WAAW,CAACgB,IAAI;MACnB,OAAO,MAAMV,eAAe,CAACM,IAAI,EAAEJ,WAAW,EAAEE,OAAO,EAAEC,OAAO,CAAC;IAEnE,KAAKX,WAAW,CAACiB,kBAAkB;MACjC,OAAO,MAAMb,yBAAyB,CAACQ,IAAI,EAAEJ,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,CAAC;IAEzF,KAAKX,WAAW,CAACkB,WAAW;MAC1B,OAAO,MAAMhB,qBAAqB,CAACU,IAAI,EAAEJ,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,CAAC;IAErF;MAEE,MAAM,IAAIQ,KAAK,sCAA+BP,IAAI,CAACC,IAAI,EAAG;EAAC;AAEjE"}