{"version":3,"file":"parse-3d-tile-header.js","names":["Tile3DSubtreeLoader","load","LOD_METRIC_TYPE","TILE_REFINEMENT","TILE_TYPE","parseImplicitTiles","replaceContentUrlTemplate","getTileType","tile","contentUrl","EMPTY","fileExtension","split","pop","POINTCLOUD","SCENEGRAPH","getRefine","refine","REPLACE","ADD","resolveUri","uri","basePath","urlSchemeRegex","test","url","URL","decodeURI","toString","startsWith","normalizeTileData","options","content","contentUri","id","lodMetricType","GEOMETRIC_ERROR","lodMetricValue","geometricError","transformMatrix","transform","type","normalizeTileHeaders","tileset","root","rootImplicitTilingExtension","getImplicitTilingExtensionData","normalizeImplicitTileHeaders","stack","push","length","children","childHeader","childImplicitTilingExtension","implicitTilingExtension","subdivisionScheme","maximumLevel","subtreeLevels","subtrees","subtreesUriTemplate","replacedUrlTemplate","subtreeUrl","subtree","contentUrlTemplate","rootLodMetricValue","rootBoundingVolume","boundingVolume","implicitOptions","normalizeImplicitTileData","rootSubtree","replace","extensions","implicitTiling"],"sources":["../../../../src/lib/parsers/parse-3d-tile-header.ts"],"sourcesContent":["import type {LoaderOptions} from '@loaders.gl/loader-utils';\nimport {Tile3DSubtreeLoader} from '../../tile-3d-subtree-loader';\nimport {load} from '@loaders.gl/core';\nimport {Tileset3D, LOD_METRIC_TYPE, TILE_REFINEMENT, TILE_TYPE, Tile3D} from '@loaders.gl/tiles';\nimport {ImplicitTilingExtension, Subtree} from '../../types';\nimport {parseImplicitTiles, replaceContentUrlTemplate} from './helpers/parse-3d-implicit-tiles';\n\nfunction getTileType(tile) {\n  if (!tile.contentUrl) {\n    return TILE_TYPE.EMPTY;\n  }\n\n  const contentUrl = tile.contentUrl;\n  const fileExtension = contentUrl.split('.').pop();\n  switch (fileExtension) {\n    case 'pnts':\n      return TILE_TYPE.POINTCLOUD;\n    case 'i3dm':\n    case 'b3dm':\n    case 'glb':\n    case 'gltf':\n      return TILE_TYPE.SCENEGRAPH;\n    default:\n      return fileExtension;\n  }\n}\n\nfunction getRefine(refine) {\n  switch (refine) {\n    case 'REPLACE':\n    case 'replace':\n      return TILE_REFINEMENT.REPLACE;\n    case 'ADD':\n    case 'add':\n      return TILE_REFINEMENT.ADD;\n    default:\n      return refine;\n  }\n}\n\nfunction resolveUri(uri, basePath) {\n  // url scheme per RFC3986\n  const urlSchemeRegex = /^[a-z][0-9a-z+.-]*:/i;\n\n  if (urlSchemeRegex.test(basePath)) {\n    const url = new URL(uri, `${basePath}/`);\n    return decodeURI(url.toString());\n  } else if (uri.startsWith('/')) {\n    return uri;\n  }\n\n  return `${basePath}/${uri}`;\n}\n\nexport function normalizeTileData(tile, options) {\n  if (!tile) {\n    return null;\n  }\n  if (tile.content) {\n    const contentUri = tile.content.uri || tile.content.url;\n    tile.contentUrl = resolveUri(contentUri, options.basePath);\n  }\n  tile.id = tile.contentUrl;\n  tile.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tile.lodMetricValue = tile.geometricError;\n  tile.transformMatrix = tile.transform;\n  tile.type = getTileType(tile);\n  tile.refine = getRefine(tile.refine);\n\n  return tile;\n}\n\n// normalize tile headers\nexport async function normalizeTileHeaders(\n  tileset: Tileset3D,\n  options: LoaderOptions\n): Promise<Tileset3D> {\n  const basePath = tileset.basePath;\n  let root: Tileset3D;\n\n  const rootImplicitTilingExtension = getImplicitTilingExtensionData(tileset?.root);\n  if (rootImplicitTilingExtension && tileset.root) {\n    root = await normalizeImplicitTileHeaders(\n      tileset.root,\n      tileset,\n      rootImplicitTilingExtension,\n      options\n    );\n  } else {\n    root = normalizeTileData(tileset.root, tileset);\n  }\n\n  const stack: any[] = [];\n  stack.push(root);\n\n  while (stack.length > 0) {\n    const tile = stack.pop() || {};\n    const children = tile.children || [];\n    for (let childHeader of children) {\n      const childImplicitTilingExtension = getImplicitTilingExtensionData(childHeader);\n      if (childImplicitTilingExtension) {\n        childHeader = await normalizeImplicitTileHeaders(\n          childHeader,\n          tileset,\n          childImplicitTilingExtension,\n          options\n        );\n      } else {\n        normalizeTileData(childHeader, {basePath});\n      }\n\n      stack.push(childHeader);\n    }\n  }\n\n  return root;\n}\n\n/**\n * Do normalisation of implicit tile headers\n * TODO Check if Tile3D class can be a return type here.\n * @param tileset\n */\nexport async function normalizeImplicitTileHeaders(\n  tile: Tile3D,\n  tileset: Tileset3D,\n  implicitTilingExtension: ImplicitTilingExtension,\n  options: LoaderOptions\n) {\n  const basePath = tileset.basePath;\n  const {\n    subdivisionScheme,\n    maximumLevel,\n    subtreeLevels,\n    subtrees: {uri: subtreesUriTemplate}\n  } = implicitTilingExtension;\n  const replacedUrlTemplate = replaceContentUrlTemplate(subtreesUriTemplate, 0, 0, 0, 0);\n  const subtreeUrl = resolveUri(replacedUrlTemplate, basePath);\n  const subtree = await load(subtreeUrl, Tile3DSubtreeLoader, options);\n  const contentUrlTemplate = resolveUri(tile.content.uri, basePath);\n  const refine = tileset?.root?.refine;\n  // @ts-ignore\n  const rootLodMetricValue = tile.geometricError;\n  const rootBoundingVolume = tile.boundingVolume;\n\n  const implicitOptions = {\n    contentUrlTemplate,\n    subtreesUriTemplate,\n    subdivisionScheme,\n    subtreeLevels,\n    maximumLevel,\n    refine,\n    basePath,\n    lodMetricType: LOD_METRIC_TYPE.GEOMETRIC_ERROR,\n    rootLodMetricValue,\n    rootBoundingVolume,\n    getTileType,\n    getRefine\n  };\n\n  return await normalizeImplicitTileData(tile, subtree, implicitOptions);\n}\n\n/**\n * Do implicit data normalisation to create hierarchical tile structure\n * @param tile\n * @param rootSubtree\n * @param options\n * @returns\n */\nexport async function normalizeImplicitTileData(tile, rootSubtree: Subtree, options: any) {\n  if (!tile) {\n    return null;\n  }\n\n  tile.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tile.lodMetricValue = tile.geometricError;\n  tile.transformMatrix = tile.transform;\n\n  const {children, contentUrl} = await parseImplicitTiles({subtree: rootSubtree, options});\n\n  if (contentUrl) {\n    tile.contentUrl = contentUrl;\n    tile.content = {uri: contentUrl.replace(`${options.basePath}/`, '')};\n  }\n\n  tile.refine = getRefine(tile.refine);\n  tile.type = getTileType(tile);\n  tile.children = children;\n  tile.id = tile.contentUrl;\n\n  return tile;\n}\n\n/**\n * Implicit Tiling data can be in 3DTILES_implicit_tiling for 3DTiles v.Next or directly in implicitTiling object for 3DTiles v1.1.\n * Spec 3DTiles v.Next - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling\n * Spec 3DTiles v.1.1 - https://github.com/CesiumGS/3d-tiles/tree/draft-1.1/specification/ImplicitTiling\n * @param tile\n * @returns\n */\nfunction getImplicitTilingExtensionData(tile: Tile3D | null): ImplicitTilingExtension {\n  return tile?.extensions?.['3DTILES_implicit_tiling'] || tile?.implicitTiling;\n}\n"],"mappings":"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"}