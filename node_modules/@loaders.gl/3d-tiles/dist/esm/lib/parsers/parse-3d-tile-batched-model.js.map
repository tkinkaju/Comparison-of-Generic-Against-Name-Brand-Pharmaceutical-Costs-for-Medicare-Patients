{"version":3,"file":"parse-3d-tile-batched-model.js","names":["GL","Tile3DFeatureTable","parse3DTileHeaderSync","parse3DTileTablesHeaderSync","parse3DTileTablesSync","parse3DTileGLTFViewSync","extractGLTF","GLTF_FORMAT","parseBatchedModel3DTile","tile","arrayBuffer","byteOffset","options","context","parseBatchedModel","EMBEDDED","extensions","gltf","CESIUM_RTC","rtcCenter","center","featureTable","featureTableJson","featureTableBinary","getGlobalProperty","FLOAT"],"sources":["../../../../src/lib/parsers/parse-3d-tile-batched-model.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {GL} from '@loaders.gl/math'; // math.gl/geometry;\nimport Tile3DFeatureTable from '../classes/tile-3d-feature-table';\n// import Tile3DBatchTable from '../classes/tile-3d-batch-table';\n\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\nimport {parse3DTileTablesHeaderSync, parse3DTileTablesSync} from './helpers/parse-3d-tile-tables';\nimport {parse3DTileGLTFViewSync, extractGLTF, GLTF_FORMAT} from './helpers/parse-3d-tile-gltf-view';\n\nexport async function parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parseBatchedModel(tile, arrayBuffer, byteOffset, options, context);\n  await extractGLTF(tile, GLTF_FORMAT.EMBEDDED, options, context);\n\n  const extensions = tile?.gltf?.extensions;\n  if (extensions && extensions.CESIUM_RTC) {\n    tile.rtcCenter = extensions.CESIUM_RTC.center;\n  }\n\n  return byteOffset;\n}\n\nfunction parseBatchedModel(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n\n  byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n  byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n\n  byteOffset = parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options);\n\n  const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n\n  return byteOffset;\n}\n"],"mappings":";;AAGA,SAAQA,EAAE,QAAO,kBAAkB;AACnC,OAAOC,kBAAkB,MAAM,kCAAkC;;AAGjE,SAAQC,qBAAqB,QAAO,gCAAgC;AACpE,SAAQC,2BAA2B,EAAEC,qBAAqB,QAAO,gCAAgC;AACjG,SAAQC,uBAAuB,EAAEC,WAAW,EAAEC,WAAW,QAAO,mCAAmC;AAEnG,OAAO,eAAeC,uBAAuB,CAACC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAAA;EAC7FF,UAAU,GAAGG,iBAAiB,CAACL,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,CAAC;EAC/E,MAAMP,WAAW,CAACG,IAAI,EAAEF,WAAW,CAACQ,QAAQ,EAAEH,OAAO,EAAEC,OAAO,CAAC;EAE/D,MAAMG,UAAU,GAAGP,IAAI,aAAJA,IAAI,qCAAJA,IAAI,CAAEQ,IAAI,+CAAV,WAAYD,UAAU;EACzC,IAAIA,UAAU,IAAIA,UAAU,CAACE,UAAU,EAAE;IACvCT,IAAI,CAACU,SAAS,GAAGH,UAAU,CAACE,UAAU,CAACE,MAAM;EAC/C;EAEA,OAAOT,UAAU;AACnB;AAEA,SAASG,iBAAiB,CAACL,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAC1EF,UAAU,GAAGT,qBAAqB,CAACO,IAAI,EAAEC,WAAW,EAAEC,UAAU,CAAC;EAEjEA,UAAU,GAAGR,2BAA2B,CAACM,IAAI,EAAEC,WAAW,EAAEC,UAAU,CAAC;EACvEA,UAAU,GAAGP,qBAAqB,CAACK,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,CAAC;EAE1ED,UAAU,GAAGN,uBAAuB,CAACI,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,CAAC;EAE5E,MAAMS,YAAY,GAAG,IAAIpB,kBAAkB,CAACQ,IAAI,CAACa,gBAAgB,EAAEb,IAAI,CAACc,kBAAkB,CAAC;EAC3Fd,IAAI,CAACU,SAAS,GAAGE,YAAY,CAACG,iBAAiB,CAAC,YAAY,EAAExB,EAAE,CAACyB,KAAK,EAAE,CAAC,CAAC;EAE1E,OAAOd,UAAU;AACnB"}