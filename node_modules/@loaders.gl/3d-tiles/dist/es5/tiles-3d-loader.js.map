{"version":3,"file":"tiles-3d-loader.js","names":["Tiles3DLoader","id","name","module","version","VERSION","extensions","mimeTypes","tests","parse","options","loadGLTF","decodeQuantizedPositions","isTileset","assetGltfUpAxis","getBaseUri","tileset","path","dirname","url","parseTile","arrayBuffer","context","tile","content","featureIds","byteOffset","parse3DTile","parseTileset","data","tilesetJson","JSON","TextDecoder","decode","loader","basePath","normalizeTileHeaders","root","type","TILESET_TYPE","TILES3D","lodMetricType","LOD_METRIC_TYPE","GEOMETRIC_ERROR","lodMetricValue","loaderOptions","indexOf"],"sources":["../../src/tiles-3d-loader.ts"],"sourcesContent":["import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {path} from '@loaders.gl/loader-utils';\nimport {TILESET_TYPE, LOD_METRIC_TYPE} from '@loaders.gl/tiles';\nimport {VERSION} from './lib/utils/version';\nimport {parse3DTile} from './lib/parsers/parse-3d-tile';\nimport {normalizeTileHeaders} from './lib/parsers/parse-3d-tile-header';\n\n/**\n * Loader for 3D Tiles\n */\nexport const Tiles3DLoader: LoaderWithParser = {\n  id: '3d-tiles',\n  name: '3D Tiles',\n  module: '3d-tiles',\n  version: VERSION,\n  extensions: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  mimeTypes: ['application/octet-stream'],\n  tests: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  parse,\n  options: {\n    '3d-tiles': {\n      loadGLTF: true,\n      decodeQuantizedPositions: false,\n      isTileset: 'auto',\n      assetGltfUpAxis: null\n    }\n  }\n};\n\nfunction getBaseUri(tileset) {\n  return path.dirname(tileset.url);\n}\n\nasync function parseTile(arrayBuffer, options, context) {\n  const tile = {\n    content: {\n      featureIds: null\n    }\n  };\n  const byteOffset = 0;\n  await parse3DTile(arrayBuffer, byteOffset, options, context, tile.content);\n  return tile.content;\n}\n\nasync function parseTileset(data, options, context) {\n  const tilesetJson = JSON.parse(new TextDecoder().decode(data));\n  // eslint-disable-next-line no-use-before-define\n  tilesetJson.loader = options.loader || Tiles3DLoader;\n  tilesetJson.url = context.url;\n  // base path that non-absolute paths in tileset are relative to.\n  tilesetJson.basePath = getBaseUri(tilesetJson);\n  tilesetJson.root = await normalizeTileHeaders(tilesetJson, options);\n\n  tilesetJson.type = TILESET_TYPE.TILES3D;\n\n  tilesetJson.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tilesetJson.lodMetricValue = tilesetJson.root?.lodMetricValue || 0;\n\n  return tilesetJson;\n}\n\nasync function parse(data, options, context) {\n  // auto detect file type\n  const loaderOptions = options['3d-tiles'] || {};\n  let isTileset;\n  if (loaderOptions.isTileset === 'auto') {\n    isTileset = context.url && context.url.indexOf('.json') !== -1;\n  } else {\n    isTileset = loaderOptions.isTileset;\n  }\n\n  if (isTileset) {\n    data = await parseTileset(data, options, context);\n  } else {\n    data = await parseTile(data, options, context);\n  }\n\n  return data;\n}\n"],"mappings":"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"}