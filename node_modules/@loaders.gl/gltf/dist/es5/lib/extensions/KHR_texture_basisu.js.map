{"version":3,"file":"KHR_texture_basisu.js","names":["KHR_TEXTURE_BASISU","name","preprocess","gltfData","options","scene","GLTFScenegraph","json","textures","texture","extension","getObjectExtension","source","removeObjectExtension","removeExtension"],"sources":["../../../../src/lib/extensions/KHR_texture_basisu.ts"],"sourcesContent":["// GLTF EXTENSION: KHR_texture_basisu\n// https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_texture_basisu\n/* eslint-disable camelcase */\n\nimport type {GLTF, GLTF_KHR_texture_basisu} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\n\nimport GLTFScenegraph from '../api/gltf-scenegraph';\n\nconst KHR_TEXTURE_BASISU = 'KHR_texture_basisu';\n\n/** Extension name */\nexport const name = KHR_TEXTURE_BASISU;\n\n/**\n * Replaces a texture source reference with the extension texture\n * Done in preprocess() to prevent load of default image\n */\nexport function preprocess(gltfData: {json: GLTF}, options: GLTFLoaderOptions): void {\n  const scene = new GLTFScenegraph(gltfData);\n  const {json} = scene;\n\n  for (const texture of json.textures || []) {\n    const extension = scene.getObjectExtension<GLTF_KHR_texture_basisu>(\n      texture,\n      KHR_TEXTURE_BASISU\n    );\n    if (extension) {\n      // TODO - if multiple texture extensions are present which one wins?\n      texture.source = extension.source;\n    }\n    scene.removeObjectExtension(texture, KHR_TEXTURE_BASISU);\n  }\n\n  // Remove the top-level extension\n  scene.removeExtension(KHR_TEXTURE_BASISU);\n}\n"],"mappings":";;;;;;;;AAOA;AAAoD;AAAA;AAAA;AAEpD,IAAMA,kBAAkB,GAAG,oBAAoB;;AAGxC,IAAMC,IAAI,GAAGD,kBAAkB;;AAAC;AAMhC,SAASE,UAAU,CAACC,QAAsB,EAAEC,OAA0B,EAAQ;EACnF,IAAMC,KAAK,GAAG,IAAIC,uBAAc,CAACH,QAAQ,CAAC;EAC1C,IAAOI,IAAI,GAAIF,KAAK,CAAbE,IAAI;EAAU,2CAECA,IAAI,CAACC,QAAQ,IAAI,EAAE;IAAA;EAAA;IAAzC,oDAA2C;MAAA,IAAhCC,OAAO;MAChB,IAAMC,SAAS,GAAGL,KAAK,CAACM,kBAAkB,CACxCF,OAAO,EACPT,kBAAkB,CACnB;MACD,IAAIU,SAAS,EAAE;QAEbD,OAAO,CAACG,MAAM,GAAGF,SAAS,CAACE,MAAM;MACnC;MACAP,KAAK,CAACQ,qBAAqB,CAACJ,OAAO,EAAET,kBAAkB,CAAC;IAC1D;;EAAC;IAAA;EAAA;IAAA;EAAA;EAGDK,KAAK,CAACS,eAAe,CAACd,kBAAkB,CAAC;AAC3C"}