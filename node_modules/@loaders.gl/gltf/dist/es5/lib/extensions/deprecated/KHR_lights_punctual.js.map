{"version":3,"file":"KHR_lights_punctual.js","names":["KHR_LIGHTS_PUNCTUAL","name","decode","gltfData","gltfScenegraph","GLTFScenegraph","json","extension","getExtension","lights","removeExtension","nodes","node","nodeExtension","getObjectExtension","light","removeObjectExtension","encode","addExtension","assert","addObjectExtension"],"sources":["../../../../../src/lib/extensions/deprecated/KHR_lights_punctual.ts"],"sourcesContent":["// GLTF EXTENSION: KHR_lights_punctual\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\nimport type {GLTF} from '../../types/gltf-types';\n\nimport {assert} from '../../utils/assert';\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\n\nconst KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\n\nexport const name = KHR_LIGHTS_PUNCTUAL;\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Move the light array out of the extension and remove the extension\n  const extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n  if (extension) {\n    // @ts-ignore\n    gltfScenegraph.json.lights = extension.lights;\n    gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n  }\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const node of json.nodes || []) {\n    const nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n    if (nodeExtension) {\n      // @ts-ignore\n      node.light = nodeExtension.light;\n    }\n    gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n  }\n}\n\n// Move the light ar ray out of the extension and remove the extension\nexport async function encode(gltfData): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // @ts-ignore\n  if (json.lights) {\n    const extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n    // @ts-ignore\n    assert(!extension.lights);\n    // @ts-ignore\n    extension.lights = json.lights;\n    // @ts-ignore\n    delete json.lights;\n  }\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.json.lights) {\n    // @ts-ignore\n    for (const light of gltfScenegraph.json.lights) {\n      const node = light.node;\n      gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n    }\n    // @ts-ignore\n    delete gltfScenegraph.json.lights;\n  }\n}\n"],"mappings":";;;;;;;;;;;AAKA;AACA;AAAuD;AAAA;AAAA;AAEvD,IAAMA,mBAAmB,GAAG,qBAAqB;AAE1C,IAAMC,IAAI,GAAGD,mBAAmB;AAAC;AAAA,SAElBE,MAAM;EAAA;AAAA;AAAA;EAAA,oEAArB,iBAAsBC,QAAsB;IAAA;IAAA;MAAA;QAAA;UAAA;YAC3CC,cAAc,GAAG,IAAIC,uBAAc,CAACF,QAAQ,CAAC;YAC5CG,IAAI,GAAIF,cAAc,CAAtBE,IAAI;YAGLC,SAAS,GAAGH,cAAc,CAACI,YAAY,CAACR,mBAAmB,CAAC;YAClE,IAAIO,SAAS,EAAE;cAEbH,cAAc,CAACE,IAAI,CAACG,MAAM,GAAGF,SAAS,CAACE,MAAM;cAC7CL,cAAc,CAACM,eAAe,CAACV,mBAAmB,CAAC;YACrD;;YAAC,uCAIkBM,IAAI,CAACK,KAAK,IAAI,EAAE;YAAA;cAAnC,oDAAqC;gBAA1BC,IAAI;gBACPC,aAAa,GAAGT,cAAc,CAACU,kBAAkB,CAACF,IAAI,EAAEZ,mBAAmB,CAAC;gBAClF,IAAIa,aAAa,EAAE;kBAEjBD,IAAI,CAACG,KAAK,GAAGF,aAAa,CAACE,KAAK;gBAClC;gBACAX,cAAc,CAACY,qBAAqB,CAACJ,IAAI,EAAEZ,mBAAmB,CAAC;cACjE;YAAC;cAAA;YAAA;cAAA;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACF;EAAA;AAAA;AAAA,SAGqBiB,MAAM;EAAA;AAAA;AAAA;EAAA,oEAArB,kBAAsBd,QAAQ;IAAA;IAAA;MAAA;QAAA;UAAA;YAC7BC,cAAc,GAAG,IAAIC,uBAAc,CAACF,QAAQ,CAAC;YAC5CG,IAAI,GAAIF,cAAc,CAAtBE,IAAI;YAGX,IAAIA,IAAI,CAACG,MAAM,EAAE;cACTF,SAAS,GAAGH,cAAc,CAACc,YAAY,CAAClB,mBAAmB,CAAC;cAElE,IAAAmB,cAAM,EAAC,CAACZ,SAAS,CAACE,MAAM,CAAC;cAEzBF,SAAS,CAACE,MAAM,GAAGH,IAAI,CAACG,MAAM;cAE9B,OAAOH,IAAI,CAACG,MAAM;YACpB;;YAKA,IAAIL,cAAc,CAACE,IAAI,CAACG,MAAM,EAAE;cAAA,wCAEVL,cAAc,CAACE,IAAI,CAACG,MAAM;cAAA;gBAA9C,uDAAgD;kBAArCM,KAAK;kBACRH,IAAI,GAAGG,KAAK,CAACH,IAAI;kBACvBR,cAAc,CAACgB,kBAAkB,CAACR,IAAI,EAAEZ,mBAAmB,EAAEe,KAAK,CAAC;gBACrE;cAAC;gBAAA;cAAA;gBAAA;cAAA;cAED,OAAOX,cAAc,CAACE,IAAI,CAACG,MAAM;YACnC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACF;EAAA;AAAA"}