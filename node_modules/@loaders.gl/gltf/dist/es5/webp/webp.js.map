{"version":3,"file":"webp.js","names":["WEBP_TEST_IMAGES","lossy","lossless","alpha","animation","WEBP_FEATURES","isWebPSupported","features","promises","map","feature","checkWebPFeature","Promise","all","statuses","every","_","Image","resolve","reject","img","onload","width","height","onerror","src"],"sources":["../../../src/webp/webp.ts"],"sourcesContent":["const WEBP_TEST_IMAGES = {\n  lossy: 'UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA',\n  lossless: 'UklGRhoAAABXRUJQVlA4TA0AAAAvAAAAEAcQERGIiP4HAA==',\n  alpha:\n    'UklGRkoAAABXRUJQVlA4WAoAAAAQAAAAAAAAAAAAQUxQSAwAAAARBxAR/Q9ERP8DAABWUDggGAAAABQBAJ0BKgEAAQAAAP4AAA3AAP7mtQAAAA==',\n  animation:\n    'UklGRlIAAABXRUJQVlA4WAoAAAASAAAAAAAAAAAAQU5JTQYAAAD/////AABBTk1GJgAAAAAAAAAAAAAAAAAAAGQAAABWUDhMDQAAAC8AAAAQBxAREYiI/gcA'\n};\n\nexport type WebPFeature = 'lossy' | 'lossless' | 'alpha' | 'animation';\n\nconst WEBP_FEATURES: WebPFeature[] = ['lossy', 'lossless', 'alpha', 'animation'];\n\n/**\n * Checks if WebP is supported\n * @param features Array, can include 'lossy', 'lossless', 'alpha' or 'animation'\n */\nexport async function isWebPSupported(features: WebPFeature[] = WEBP_FEATURES): Promise<boolean> {\n  const promises = features.map((feature) => checkWebPFeature(feature));\n  const statuses = await Promise.all(promises);\n  return statuses.every((_) => _);\n}\n\n/**\n * Checks if a specific WebP feature is supported\n * @param feature 'feature' can be one of 'lossy', 'lossless', 'alpha' or 'animation'.\n *\n * Based on Google's official recommended checks\n * @see https://developers.google.com/speed/webp/faq#how_can_i_detect_browser_support_for_webp\n */\nasync function checkWebPFeature(feature: WebPFeature): Promise<boolean> {\n  if (typeof Image === 'undefined') {\n    return false;\n  }\n  return await new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img.width > 0 && img.height > 0);\n    img.onerror = () => resolve(false);\n    img.src = `data:image/webp;base64,${WEBP_TEST_IMAGES[feature]}`;\n  });\n}\n"],"mappings":";;;;;;;;;AAAA,IAAMA,gBAAgB,GAAG;EACvBC,KAAK,EAAE,0DAA0D;EACjEC,QAAQ,EAAE,kDAAkD;EAC5DC,KAAK,EACH,kHAAkH;EACpHC,SAAS,EACP;AACJ,CAAC;AAID,IAAMC,aAA4B,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,CAAC;;AAAC,SAM3DC,eAAe;EAAA;AAAA;AAAA;EAAA,6EAA9B;IAAA;MAAA;MAAA;MAAA;IAAA;MAAA;QAAA;UAAA;YAA+BC,QAAuB,2DAAGF,aAAa;YACrEG,QAAQ,GAAGD,QAAQ,CAACE,GAAG,CAAC,UAACC,OAAO;cAAA,OAAKC,gBAAgB,CAACD,OAAO,CAAC;YAAA,EAAC;YAAA;YAAA,OAC9CE,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;UAAA;YAAtCM,QAAQ;YAAA,iCACPA,QAAQ,CAACC,KAAK,CAAC,UAACC,CAAC;cAAA,OAAKA,CAAC;YAAA,EAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAChC;EAAA;AAAA;AAAA,SAScL,gBAAgB;EAAA;AAAA;AAAA;EAAA,8EAA/B,kBAAgCD,OAAoB;IAAA;MAAA;QAAA;UAAA;YAAA,MAC9C,OAAOO,KAAK,KAAK,WAAW;cAAA;cAAA;YAAA;YAAA,kCACvB,KAAK;UAAA;YAAA;YAAA,OAED,IAAIL,OAAO,CAAC,UAACM,OAAO,EAAEC,MAAM,EAAK;cAC5C,IAAMC,GAAG,GAAG,IAAIH,KAAK,EAAE;cACvBG,GAAG,CAACC,MAAM,GAAG;gBAAA,OAAMH,OAAO,CAACE,GAAG,CAACE,KAAK,GAAG,CAAC,IAAIF,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC;cAAA;cAC3DH,GAAG,CAACI,OAAO,GAAG;gBAAA,OAAMN,OAAO,CAAC,KAAK,CAAC;cAAA;cAClCE,GAAG,CAACK,GAAG,oCAA6BzB,gBAAgB,CAACU,OAAO,CAAC,CAAE;YACjE,CAAC,CAAC;UAAA;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACH;EAAA;AAAA"}