{"version":3,"file":"parse-gltf.js","names":["BasisLoader","selectSupportedBasisFormat","ImageLoader","parseJSON","sliceArrayBuffer","assert","resolveUrl","getTypedArrayForBufferView","preprocessExtensions","decodeExtensions","normalizeGLTFV1","postProcessGLTF","parseGLBSync","isGLB","isGLTF","arrayBuffer","options","byteOffset","parseGLTF","gltf","arrayBufferOrString","context","parseGLTFContainerSync","normalize","promises","loadBuffers","json","buffers","loadImages","promise","push","Promise","all","postProcess","data","uri","baseUri","ArrayBuffer","textDecoder","TextDecoder","decode","glb","type","_glb","Array","length","fill","header","hasBinChunk","binChunks","byteLength","images","i","buffer","fetch","response","imageIndices","getReferencesImageIndices","imageIndex","loadImage","Set","textures","texture","source","undefined","add","from","sort","image","index","parse","hasOwnProperty","bufferView","Number","isFinite","array","parsedImage","mimeType","basis","format","compressed","mipmaps","width","height"],"sources":["../../../../src/lib/parsers/parse-gltf.ts"],"sourcesContent":["/* eslint-disable camelcase, max-statements, no-restricted-globals */\nimport type {LoaderContext} from '@loaders.gl/loader-utils';\nimport {BasisLoader, selectSupportedBasisFormat} from '@loaders.gl/textures';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\nimport type {GLB} from '../types/glb-types';\nimport type {GLTFWithBuffers} from '../types/gltf-types';\n\nimport {ImageLoader} from '@loaders.gl/images';\nimport {parseJSON, sliceArrayBuffer} from '@loaders.gl/loader-utils';\nimport {assert} from '../utils/assert';\nimport {resolveUrl} from '../gltf-utils/resolve-url';\nimport {getTypedArrayForBufferView} from '../gltf-utils/get-typed-array';\nimport {preprocessExtensions, decodeExtensions} from '../api/gltf-extensions';\nimport {normalizeGLTFV1} from '../api/normalize-gltf-v1';\nimport {postProcessGLTF} from '../api/post-process-gltf';\nimport parseGLBSync, {isGLB} from './parse-glb';\n\nexport type GLTFParseOptions = {\n  normalize?: boolean;\n  loadImages?: boolean;\n  loadBuffers?: boolean;\n  decompressMeshes?: boolean;\n  postProcess?: boolean;\n  excludeExtensions?: string[];\n};\n\n// export type GLTFOptions = {\n//   gltf?: GLTFParseOptions;\n// };\n\nexport function isGLTF(arrayBuffer, options?): boolean {\n  const byteOffset = 0;\n  return isGLB(arrayBuffer, byteOffset, options);\n}\n\nexport async function parseGLTF(\n  gltf: GLTFWithBuffers,\n  arrayBufferOrString,\n  byteOffset = 0,\n  options: GLTFLoaderOptions,\n  context: LoaderContext\n) {\n  parseGLTFContainerSync(gltf, arrayBufferOrString, byteOffset, options);\n\n  normalizeGLTFV1(gltf, {normalize: options?.gltf?.normalize});\n\n  preprocessExtensions(gltf, options, context);\n\n  const promises: Promise<any>[] = [];\n\n  // Load linked buffers asynchronously and decodes base64 buffers in parallel\n  if (options?.gltf?.loadBuffers && gltf.json.buffers) {\n    await loadBuffers(gltf, options, context);\n  }\n\n  if (options?.gltf?.loadImages) {\n    const promise = loadImages(gltf, options, context);\n    promises.push(promise);\n  }\n\n  const promise = decodeExtensions(gltf, options, context);\n  promises.push(promise);\n\n  // Parallelize image loading and buffer loading/extension decoding\n  await Promise.all(promises);\n\n  // Post processing resolves indices to objects, buffers\n  return options?.gltf?.postProcess ? postProcessGLTF(gltf, options) : gltf;\n}\n\n// `data` - can be ArrayBuffer (GLB), ArrayBuffer (Binary JSON), String (JSON), or Object (parsed JSON)\nfunction parseGLTFContainerSync(gltf, data, byteOffset, options) {\n  // Initialize gltf container\n  if (options.uri) {\n    gltf.baseUri = options.uri;\n  }\n\n  // If data is binary and starting with magic bytes, assume binary JSON text, convert to string\n  if (data instanceof ArrayBuffer && !isGLB(data, byteOffset, options)) {\n    const textDecoder = new TextDecoder();\n    data = textDecoder.decode(data);\n  }\n\n  if (typeof data === 'string') {\n    // If string, try to parse as JSON\n    gltf.json = parseJSON(data);\n  } else if (data instanceof ArrayBuffer) {\n    // If still ArrayBuffer, parse as GLB container\n    const glb: GLB = {} as GLB;\n    byteOffset = parseGLBSync(glb, data, byteOffset, options.glb);\n\n    assert(glb.type === 'glTF', `Invalid GLB magic string ${glb.type}`);\n\n    gltf._glb = glb;\n    gltf.json = glb.json;\n  } else {\n    assert(false, 'GLTF: must be ArrayBuffer or string');\n  }\n\n  // Populate buffers\n  // Create an external buffers array to hold binary data\n  const buffers = gltf.json.buffers || [];\n  gltf.buffers = new Array(buffers.length).fill(null);\n\n  // Populates JSON and some bin chunk info\n  if (gltf._glb && gltf._glb.header.hasBinChunk) {\n    const {binChunks} = gltf._glb;\n    gltf.buffers[0] = {\n      arrayBuffer: binChunks[0].arrayBuffer,\n      byteOffset: binChunks[0].byteOffset,\n      byteLength: binChunks[0].byteLength\n    };\n\n    // TODO - this modifies JSON and is a post processing thing\n    // gltf.json.buffers[0].data = gltf.buffers[0].arrayBuffer;\n    // gltf.json.buffers[0].byteOffset = gltf.buffers[0].byteOffset;\n  }\n\n  // Populate images\n  const images = gltf.json.images || [];\n  gltf.images = new Array(images.length).fill({});\n}\n\n/** Asynchronously fetch and parse buffers, store in buffers array outside of json\n * TODO - traverse gltf and determine which buffers are actually needed\n */\nasync function loadBuffers(gltf: GLTFWithBuffers, options, context: LoaderContext) {\n  // TODO\n  const buffers = gltf.json.buffers || [];\n  for (let i = 0; i < buffers.length; ++i) {\n    const buffer = buffers[i];\n    if (buffer.uri) {\n      const {fetch} = context;\n      assert(fetch);\n\n      const uri = resolveUrl(buffer.uri, options);\n      const response = await context?.fetch?.(uri);\n      const arrayBuffer = await response?.arrayBuffer?.();\n\n      gltf.buffers[i] = {\n        arrayBuffer,\n        byteOffset: 0,\n        byteLength: arrayBuffer.byteLength\n      };\n\n      delete buffer.uri;\n    } else if (gltf.buffers[i] === null) {\n      gltf.buffers[i] = {\n        arrayBuffer: new ArrayBuffer(buffer.byteLength),\n        byteOffset: 0,\n        byteLength: buffer.byteLength\n      };\n    }\n  }\n}\n\n/**\n * Loads all images\n * TODO - traverse gltf and determine which images are actually needed\n * @param gltf\n * @param options\n * @param context\n * @returns\n */\nasync function loadImages(gltf: GLTFWithBuffers, options, context: LoaderContext) {\n  const imageIndices = getReferencesImageIndices(gltf);\n\n  const images = gltf.json.images || [];\n\n  const promises: Promise<any>[] = [];\n  for (const imageIndex of imageIndices) {\n    promises.push(loadImage(gltf, images[imageIndex], imageIndex, options, context));\n  }\n\n  return await Promise.all(promises);\n}\n\n/** Make sure we only load images that are actually referenced by textures */\nfunction getReferencesImageIndices(gltf: GLTFWithBuffers): number[] {\n  const imageIndices = new Set<number>();\n\n  const textures = gltf.json.textures || [];\n  for (const texture of textures) {\n    if (texture.source !== undefined) {\n      imageIndices.add(texture.source);\n    }\n  }\n\n  return Array.from(imageIndices).sort();\n}\n\n/** Asynchronously fetches and parses one image, store in images array outside of json */\nasync function loadImage(\n  gltf: GLTFWithBuffers,\n  image,\n  index: number,\n  options,\n  context: LoaderContext\n) {\n  const {fetch, parse} = context;\n\n  let arrayBuffer;\n\n  if (image.uri && !image.hasOwnProperty('bufferView')) {\n    const uri = resolveUrl(image.uri, options);\n    const response = await fetch(uri);\n    arrayBuffer = await response.arrayBuffer();\n    image.bufferView = {\n      data: arrayBuffer\n    };\n  }\n\n  if (Number.isFinite(image.bufferView)) {\n    const array = getTypedArrayForBufferView(gltf.json, gltf.buffers, image.bufferView);\n    arrayBuffer = sliceArrayBuffer(array.buffer, array.byteOffset, array.byteLength);\n  }\n\n  assert(arrayBuffer, 'glTF image has no data');\n\n  // Call `parse`\n  let parsedImage = await parse(\n    arrayBuffer,\n    [ImageLoader, BasisLoader],\n    {mimeType: image.mimeType, basis: options.basis || {format: selectSupportedBasisFormat()}},\n    context\n  );\n\n  if (parsedImage && parsedImage[0]) {\n    parsedImage = {\n      compressed: true,\n      mipmaps: false,\n      width: parsedImage[0].width,\n      height: parsedImage[0].height,\n      data: parsedImage[0]\n    };\n  }\n  // TODO making sure ImageLoader is overridable by using array of loaders\n  // const parsedImage = await parse(arrayBuffer, [ImageLoader]);\n\n  // Store the loaded image\n  gltf.images = gltf.images || [];\n  gltf.images[index] = parsedImage;\n}\n"],"mappings":"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"}