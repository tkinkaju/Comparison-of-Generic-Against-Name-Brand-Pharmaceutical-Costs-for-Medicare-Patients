import { Credentials } from '@carto/toolkit-core';
declare type PromiseCb<T> = (value?: T) => void;
export declare class RequestManager {
    private _credentials;
    private _endpointServerURL;
    private _queue;
    private _callsLeft;
    private _retryAfter;
    private _retryTimeoutId;
    private _fetching;
    private _scheduleDebounce;
    private _maxApiRequestsRetries;
    constructor(credentials: Credentials, endpointServerURL: string, { maxApiRequestsRetries }?: {
        maxApiRequestsRetries?: number;
    });
    get apiKey(): string;
    set apiKey(value: string);
    protected get endpointServerURL(): string;
    protected set callsLeft(value: number);
    protected get callsLeft(): number;
    protected set maxApiRequestsRetries(value: number);
    protected _scheduleRequest(resolve: PromiseCb<any>, reject: PromiseCb<any>, requestInfo: RequestInfo, requestInit?: RequestInit): void;
    protected addHeadersTo(requestInit: any, headers?: string[][]): void;
    private _scheduler;
    private _fetch;
    private _getRateLimitHeader;
    get queued(): number;
}
export default RequestManager;
//# sourceMappingURL=RequestManager.d.ts.map