{"version":3,"file":"custom-storage.umd.js","sources":["../../core/dist/core.esm.js","../../sql/dist/sql.esm.js","../src/errors/DuplicatedDataset.ts","../src/errors/CustomStorageError.ts","../src/errors/ErrorCodes.ts","../src/sql/utils.ts","../src/sql/SQLStorage.ts","../src/CustomStorage.ts","../src/sql/PublicSQLReader.ts"],"sourcesContent":["class e{constructor(e,r,t=\"https://{user}.carto.com\"){if(!e)throw new Error(\"Username is required\");if(!r)throw new Error(\"Api key is required\");this._username=e,this._apiKey=r,this._serverUrlTemplate=t}static get DEFAULT_SERVER_URL_TEMPLATE(){return\"https://{user}.carto.com\"}static get DEFAULT_PUBLIC_API_KEY(){return\"default_public\"}get username(){return this._username}set username(e){this._username=e}get apiKey(){return this._apiKey}set apiKey(e){this._apiKey=e}get serverUrlTemplate(){return this._serverUrlTemplate}set serverUrlTemplate(e){this._serverUrlTemplate=e}get serverURL(){let e=this._serverUrlTemplate.replace(\"{user}\",this._username);return e.endsWith(\"/\")||(e+=\"/\"),e}}const r=new e(\"username\",\"default_public\");function t(e){r.username=e.username,r.apiKey=e.apiKey||\"default_public\",r.serverUrlTemplate=e.serverUrlTemplate||\"https://{user}.carto.com\"}class s{constructor(e,r,t=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,e=>{const r=16*Math.random()|0;return(\"x\"===e?r:3&r|8).toString(16)})){this.source=e,this.name=r,this.groupId=t}getHeaders(){return[[\"Carto-Event-Source\",this.source],[\"Carto-Event\",this.name],[\"Carto-Event-Group-Id\",this.groupId]]}}export{e as Credentials,s as MetricsEvent,r as defaultCredentials,t as setDefaultCredentials};\n//# sourceMappingURL=core.esm.js.map\n","import{Credentials as e}from\"@carto/toolkit-core\";\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,r)};function r(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}function n(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{a(n.next(e))}catch(e){o(e)}}function u(e){try{a(n.throw(e))}catch(e){o(e)}}function a(e){e.done?i(e.value):new r((function(t){t(e.value)})).then(s,u)}a((n=n.apply(e,t||[])).next())}))}function i(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}}var o={TOO_MANY_REQUESTS:429,SERVICE_UNAVAILABLE:503},s=Object.freeze({__proto__:null,QUERY_LIMIT:1024,DEFAULT_MAX_API_REQUESTS_RETRIES:0,HTTP_ERRORS:o}),u=function(){function e(e,t,r){var n=(void 0===r?{}:r).maxApiRequestsRetries;this._callsLeft=-1,this._retryAfter=-1,this._retryTimeoutId=-1,this._fetching=!1,this._scheduleDebounce=-1,this._maxApiRequestsRetries=0,this._credentials=e,this._endpointServerURL=t,this._queue=[],Number.isFinite(n)&&n>=0&&(this._maxApiRequestsRetries=n)}return Object.defineProperty(e.prototype,\"apiKey\",{get:function(){return this._credentials.apiKey},set:function(e){this._credentials.apiKey=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"endpointServerURL\",{get:function(){return this._endpointServerURL},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"callsLeft\",{get:function(){return this._callsLeft},set:function(e){this._callsLeft=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"maxApiRequestsRetries\",{set:function(e){this._maxApiRequestsRetries=e},enumerable:!0,configurable:!0}),e.prototype._scheduleRequest=function(e,t,r,n){var i=this;this._queue.push({resolve:e,reject:t,requestInfo:r,requestInit:n,retries_count:-1}),clearTimeout(this._scheduleDebounce),this._scheduleDebounce=window.setTimeout((function(){i._scheduler()}),0)},e.prototype.addHeadersTo=function(e,t){void 0===t&&(t=[]),void 0!==e&&(e.headers||(e.headers=new Headers),t.length>0&&t.forEach((function(t){e.headers.append(t[0],t[1])})))},e.prototype._scheduler=function(){var e=this;if(0!==this._queue.length&&-1===this._retryTimeoutId&&!this._fetching)if(-1===this._retryAfter){for(var t=-1!==this._callsLeft?Math.min(Math.max(1,this._callsLeft),this._queue.length):1,r=[],n=0;n<t;n++)this._fetching=!0,r.push(this._fetch(this._queue[n],n));Promise.all(r).then((function(t){e._queue=e._queue.filter((function(e,r){return-1===t.indexOf(r)})),e._fetching=!1,e._queue.length>0&&e._scheduler()}))}else this._retryTimeoutId=window.setTimeout((function(){e._retryTimeoutId=-1,e._retryAfter=-1,e._callsLeft+=1,e._scheduler()}),1e3*this._retryAfter)},e.prototype._fetch=function(e,t){var r=this,s=e.resolve,u=e.reject,c=e.requestInfo,p=e.requestInit,h=e.retries_count;return fetch(c,p).then((function(t){return n(r,void 0,void 0,(function(){var r,n,s;return i(this,(function(i){switch(i.label){case 0:return this._retryAfter=this._getRateLimitHeader(t.headers,\"Retry-After\",this._retryAfter),this._callsLeft=this._getRateLimitHeader(t.headers,\"Carto-Rate-Limit-Remaining\",this._callsLeft),[4,a(t)];case 1:if(r=i.sent(),n=t.status===o.TOO_MANY_REQUESTS&&(\"datasource\"===r.detail||\"rate-limit\"===r.detail),(t.status===o.SERVICE_UNAVAILABLE||n)&&(e.retries_count=-1!==h?h-1:this._maxApiRequestsRetries,s=.5*(this._maxApiRequestsRetries-e.retries_count)+.5,this._retryAfter=Math.max(this._retryAfter,s)),0===e.retries_count)throw new Error(\"Too many retries\");return t.status===o.TOO_MANY_REQUESTS||t.status===o.SERVICE_UNAVAILABLE?(this._scheduler(),[2,null]):[2,r]}}))}))})).then((function(e){var r,n;if(null!==e){if(e.error){var i=(null===(n=null===(r=e)||void 0===r?void 0:r.error)||void 0===n?void 0:n.length)?e.error[0]:\"Unknown error\";u(new Error(i))}else s(e);return t}})).catch((function(e){return u(e),t}))},e.prototype._getRateLimitHeader=function(e,t,r){var n=e.get(t);return null!==n?parseInt(n,10):r},Object.defineProperty(e.prototype,\"queued\",{get:function(){return this._queue.length},enumerable:!0,configurable:!0}),e}();function a(e){return n(this,void 0,void 0,(function(){var t;return i(this,(function(r){switch(r.label){case 0:return(e.headers.get(\"content-type\")||\"\").includes(\"application/json\")?[4,e.json()]:[3,2];case 1:return t=r.sent(),[3,4];case 2:return[4,e.text()];case 3:t=r.sent(),r.label=4;case 4:return[2,t]}}))}))}var c=function(e){function t(t,r){void 0===r&&(r={});var n=t.serverURL+\"api/v2/sql/copyfrom\";return e.call(this,t,n,r)||this}return r(t,e),t.prototype.copy=function(e,t,r,n){var i=this;void 0===n&&(n={});var o=\"COPY \"+t+\" (\"+r+\") FROM STDIN WITH (FORMAT csv, HEADER true);\",s=this.endpointServerURL+\"?api_key=\"+this.apiKey+\"&q=\"+o,u={method:\"POST\",body:new Blob([e])},a=n.event?n.event.getHeaders():[];return this.addHeadersTo(u,a),new Promise((function(e,t){i._scheduleRequest(e,t,s,u)}))},t}(u),p=function(e){function t(t,r){void 0===r&&(r={});var n=t.serverURL+\"api/v2/sql/copyto\";return e.call(this,t,n,r)||this}return r(t,e),t.prototype.copyUrl=function(e,t,r){void 0===t&&(t=\"carto_copyto.csv\"),void 0===r&&(r=\"FORMAT csv, HEADER true\");var n=\"COPY (\"+e+\") TO stdout WITH(\"+r+\")\";return this.endpointServerURL+\"?api_key=\"+this.apiKey+\"&q=\"+n+\"&filename=\"+t},t.prototype.copy=function(e,t,r){var n=this,i=this.copyUrl(e,t,r);return new Promise((function(e,t){n._scheduleRequest(e,t,i)}))},t}(u),h={string:\"text\",integer:\"numeric\",geojson:\"json\"},l=function(){function e(){}return e.drop=function(e,t){return t&&t.ifExists?\"DROP TABLE IF EXISTS \"+e+\";\":\"DROP TABLE \"+e+\";\"},e.create=function(e,t,r){var n=\"CREATE TABLE \"+e+\" ({rows});\";r&&r.ifNotExists&&(n=\"CREATE TABLE IF NOT EXISTS \"+e+\" ({rows});\");var i=t.map((function(e){if(\"string\"==typeof e)return e;var t;e.type=(t=e.type,h[t]||t);var r='\"'+e.name+'\" '+e.type;return e.extra?r+\" \"+e.extra:r})).join(\", \");return n.replace(/{rows}/,i)},e}();var f=function(e){function t(t,r){void 0===r&&(r={});var n=t.serverURL+\"api/v2/sql\";return e.call(this,t,n,r)||this}return r(t,e),t.prototype.query=function(e,t){void 0===t&&(t={});var r=[[\"api_key\",this.apiKey],[\"q\",e]];t.extraParams&&r.push.apply(r,t.extraParams);var n=t.event?t.event.getHeaders():[];return e.length<1024?this.prepareGetRequest(r,n):this.preparePostRequest(r,n)},t.prototype.prepareGetRequest=function(e,t){var r=this;void 0===t&&(t=[]);var n=encodeURI(e.map((function(e){return e[0]+\"=\"+e[1]})).join(\"&\")),i={method:\"GET\"};return this.addHeadersTo(i,t),new Promise((function(e,t){r._scheduleRequest(e,t,r.endpointServerURL+\"?\"+n,i)}))},t.prototype.preparePostRequest=function(e,t){var r=this;void 0===t&&(t=[]);var n=new FormData;e.forEach((function(e){return n.set(e[0],e[1])}));var i={method:\"POST\",body:n};return this.addHeadersTo(i,t),new Promise((function(e,t){r._scheduleRequest(e,t,\"\"+r.endpointServerURL,i)}))},t}(u),d=function(){function t(t,r){var n=(void 0===r?{}:r).maxApiRequestsRetries;this._credentials=t,this._copyToManager=new p(this._credentials,{maxApiRequestsRetries:n}),this._queryManager=new f(this._credentials,{maxApiRequestsRetries:n}),this._copyFromManager=new c(this._credentials,{maxApiRequestsRetries:n});var i=new e(t.username,e.DEFAULT_PUBLIC_API_KEY,t.serverUrlTemplate);this._publicQueryManager=new f(i,{maxApiRequestsRetries:n})}return Object.defineProperty(t,\"DDL\",{get:function(){return l},enumerable:!0,configurable:!0}),t.prototype.copyFrom=function(e,t,r,n){return void 0===n&&(n={}),this._copyFromManager.copy(e,t,r,n)},t.prototype.exportURL=function(e){return this._copyToManager.copyUrl(e)},t.prototype.query=function(e,t){void 0===t&&(t={});var r=e.replace(/\\s+/g,\" \").trim();return this._queryManager.query(r,t)},t.prototype.truncate=function(e){return this._queryManager.query(\"TRUNCATE \"+e+\";\")},t.prototype.create=function(e,t,r){void 0===r&&(r={});var n=l.create(e,t,r.createOptions);return this._queryManager.query(n,{event:r.event})},t.prototype.drop=function(e,t){void 0===t&&(t={});var r=l.drop(e,t.dropOptions);return this._queryManager.query(r,{event:t.event})},t.prototype.grantPublicRead=function(e,t){return void 0===t&&(t={}),n(this,void 0,void 0,(function(){var r,n;return i(this,(function(i){switch(i.label){case 0:return(n=this._publicRole)?[3,2]:[4,this.getRole(t)];case 1:n=i.sent(),i.label=2;case 2:return r=n,[2,this.grantReadToRole(e,r,t)]}}))}))},t.prototype.grantReadToRole=function(e,t,r){void 0===t&&(t=\"publicuser\"),void 0===r&&(r={});var n=\"GRANT SELECT on \"+e+' TO \"'+t+'\"';return this.query(n,r)},t.prototype.transaction=function(e){var t=\"\\n      BEGIN;\\n        \"+e.join(\"\\n\")+\"\\n      COMMIT;\\n    \";return this._queryManager.query(t)},t.prototype.setApiKey=function(e){this._credentials.apiKey=e,this._queryManager.apiKey=e,this._copyToManager.apiKey=e,this._copyFromManager.apiKey=e},t.prototype.getRole=function(e){var t=this;return void 0===e&&(e={}),this._publicQueryManager.query(\"SELECT current_user as rolename\",e).then((function(e){if(e.error)throw new Error(e.error);if(0===e.rows.length)throw new Error(\"Cannot grant: got no current_user data\");var r=e.rows[0].rolename;return t._publicRole=r,r}))},t}();export{s as Constants,d as SQL};\n//# sourceMappingURL=sql.esm.js.map\n","import { CustomStorageError } from './CustomStorageError';\nimport { DUPLICATED_DATASETS } from './ErrorCodes';\n\nexport class DuplicatedDatasetsError extends CustomStorageError {\n  public datasets: string[];\n\n  constructor(datasets: string[]) {\n    super(DUPLICATED_DATASETS, 'Some datasets are duplicated');\n\n    this.datasets = datasets;\n  }\n}\n","export class CustomStorageError {\n  public errorCode: string;\n  public message: string | undefined;\n\n  constructor(errorcode: string, message?: string) {\n    this.errorCode = errorcode;\n    this.message = message;\n  }\n}\n","export const DUPLICATED_DATASETS = 'DUPLICATED_DATASETS';\n\nexport default {\n  DUPLICATED_DATASETS\n};\n","import { MetricsEvent } from '@carto/toolkit-core';\nimport { SQL } from '@carto/toolkit-sql';\nimport { CompleteVisualization, Dataset, StoredDataset, StoredVisualization } from '../StorageRepository';\n\ntype Pair<T> = [T, T];\n\nexport interface TableNames {\n  vis: string;\n  datasets: string;\n  visToDatasets: string;\n}\n\nexport function rowToVisualization(row: any): StoredVisualization {\n  return {\n    id: row.id,\n    name: row.name,\n    description: row.description,\n    thumbnail: row.thumbnail,\n    isprivate: row.isprivate,\n    config: row.config,\n    lastmodified: row.lastmodified\n  };\n}\n\n/**\n * Get dataset file as CSV from SQL API\n *\n * TODO. Consider the use of copyTo API\n */\nexport async function getDatasetData(\n  name: string,\n  tablename: string,\n  client: SQL,\n  options: {\n    event?: MetricsEvent\n  } = {}\n  ): Promise<Dataset> {\n\n  const csvFormat: Array<Pair<string>> = [['format', 'csv']];\n  const queryOptions = {\n    extraParams: csvFormat,\n    event: options.event\n  };\n  const response: string | any = await client.query(`SELECT * FROM ${tablename}`, queryOptions);\n\n  // Something wrong has happened\n  if (typeof response !== 'string') {\n    throw new Error(response.error);\n  }\n\n  return {\n    name,\n    file: response\n  };\n}\n\nexport async function getDatasetsForVis(\n  tableNames: TableNames,\n  visId: string,\n  client: SQL,\n  options: {\n    event?: MetricsEvent\n  } = {}\n  ): Promise<StoredDataset[]> {\n\n  const datasetsResp: any = await (client).query(`\n    WITH datasets AS (SELECT dataset FROM ${tableNames.visToDatasets} WHERE vis = '${visId}')\n    SELECT t.id, t.name, t.tablename FROM ${tableNames.datasets} t, datasets u\n    WHERE t.id = u.dataset\n  `, options);\n\n  if (datasetsResp.error) {\n    throw new Error(datasetsResp.error);\n  }\n\n  return datasetsResp.rows;\n}\n\n\nexport async function getVisualization(\n  tableNames: TableNames,\n  id: string,\n  client: SQL,\n  options: {\n    event?: MetricsEvent\n  } = {}\n): Promise<CompleteVisualization | null> {\n\n  // The visualization\n  const response: any = await client.query(`SELECT * FROM ${tableNames.vis} WHERE id = '${id}'`, options);\n\n  if (response.error) {\n    throw new Error(response.error);\n  }\n  if (response.rows.length === 0) {\n    return null;\n  }\n  const vis = rowToVisualization(response.rows[0]);\n\n  // The relation table between visualization & datasets\n  const datasetsForViz = await getDatasetsForVis(tableNames, id, client, options);\n  if (datasetsForViz.length === 0) {\n    return {\n      vis,\n      datasets: []\n    };\n  }\n\n  // Download each dataset\n  const datasets: Dataset[] = await Promise.all(\n    datasetsForViz.map((dataset: StoredDataset) => getDatasetData(dataset.name, dataset.tablename, client, options))\n  );\n\n  return {\n    vis,\n    datasets\n  };\n}\n\nexport function generateVisTableName(namespace: string, isPublic: boolean, version: number) {\n  return `${namespace}_${isPublic ? 'public' : 'private'}_v${version}`;\n}\n\nexport function generateDatasetTableName(tableName: string) {\n  return `${tableName}_datasets`;\n}\n\n/**\n * This generates the table name for the N <-> M relationship between vis and datasets\n * @param tableName The base table name\n */\nexport function generateDatasetVisTableName(tableName: string) {\n  return `${tableName}_datasets_vis`;\n}\n","import { MetricsEvent } from '@carto/toolkit-core';\nimport { SQL } from '@carto/toolkit-sql';\nimport { ColumConfig, CreateConfig, DropOptions } from '@carto/toolkit-sql/dist/types/DDL';\nimport { DuplicatedDatasetsError } from '../errors/DuplicatedDataset';\nimport {\n  CompleteVisualization,\n  Dataset,\n  StoredDataset,\n  StoredVisualization,\n  Visualization\n} from '../StorageRepository';\nimport {\n  generateDatasetTableName,\n  generateDatasetVisTableName,\n  generateVisTableName,\n  getDatasetData,\n  getVisualization,\n  rowToVisualization,\n  TableNames\n} from './utils';\n\n\nexport class SQLStorage {\n  protected _tableName: string;\n  protected _datasetsTableName: string;\n  protected _datasetsVisTableName: string;\n  private _sql: SQL;\n  private _isPublic: boolean;\n  private _isReady: boolean = false;\n  private _namespace: string;\n  private VIS_FIELDS: { [property: string]: ColumConfig };\n  private DATASET_COLUMNS: string[];\n  private DATASET_VIS_COLUMNS: string[];\n  private FIELD_NAMES: string[];\n  private FIELD_NAMES_INSERT: string[];\n\n  constructor(\n    tableName: string,\n    sqlClient: SQL,\n    version: number,\n    isPublic: boolean) {\n    this._namespace = tableName;\n    this._tableName = generateVisTableName(tableName, isPublic, version);\n    this._datasetsTableName = generateDatasetTableName(this._tableName);\n    this._datasetsVisTableName = generateDatasetVisTableName(this._tableName);\n    this._isPublic = isPublic;\n\n    this.VIS_FIELDS = {\n      id: { name: 'id', type: 'uuid', extra: `PRIMARY KEY DEFAULT ${this._namespace}_create_uuid()`, omitOnInsert: true },\n      name: { name: 'name', type: 'text', extra: 'NOT NULL', format: this.escapeOrNull },\n      description: { name: 'description', type: 'text', format: this.escapeOrNull },\n      thumbnail: { name: 'thumbnail', type: 'text', format: this.escapeOrNull },\n      isprivate: {\n        name: 'isprivate', type: 'boolean', format: (isPrivate: boolean) => isPrivate === undefined ? false : isPrivate\n      },\n      config: { name: 'config', type: 'json', format: this.escapeOrNull },\n      lastmodified: { name: 'lastmodified', type: 'timestamp', extra: 'NOT NULL DEFAULT now()', omitOnInsert: true }\n    };\n\n    this.DATASET_COLUMNS = [\n      `\"id\" uuid PRIMARY KEY DEFAULT ${this._namespace}_create_uuid()`,\n      `\"tablename\" text UNIQUE NOT NULL`,\n      `\"name\" text UNIQUE NOT NULL`\n    ];\n\n    this.DATASET_VIS_COLUMNS = [\n      // TODO: Reenable foreign keys when https://github.com/CartoDB/cartodb/issues/15161 is solved\n      `\"vis\" uuid NOT NULL`, // `vis uuid references ${this._tableName}(id) ON DELETE CASCADE`,\n      `\"dataset\" uuid NOT NULL` // `dataset uuid references ${this._datasetsTableName}(id) ON DELETE CASCADE`\n    ];\n\n    this.FIELD_NAMES = (Object.values(this.VIS_FIELDS) as ColumConfig[])\n      .map((field) => field.name);\n\n    this.FIELD_NAMES_INSERT = (Object.values(this.VIS_FIELDS) as ColumConfig[])\n      .filter((field) => !field.omitOnInsert)\n      .map((field) => field.name);\n\n    this._sql = sqlClient;\n  }\n\n  /**\n   * Ensures custom storage tables are ready\n   */\n  public async init(options: { event?: MetricsEvent } = {}) {\n    const missing = await this._checkMissingTables(); // notice how the previous checks don't propagate the event...\n    if (missing) {\n      await this._initTables({ event: options.event }); // ...but the real initialization does\n    }\n    this._isReady = true;\n    return missing;\n  }\n\n  /**\n   * Checks if storage tables are created\n   */\n  public async isInitialized() {\n    const hasMissingTables = await this._checkMissingTables();\n    this._isReady = !hasMissingTables;\n    return this._isReady;\n  }\n\n  public getVisualizations(options: { event?: MetricsEvent } = {}): Promise<StoredVisualization[]> {\n    return this._sql.query(`\n      SELECT ${this.FIELD_NAMES.filter((name) => name !== 'config').map((name) => `\"${name}\"`).join(', ')}\n      FROM ${this._tableName}\n      `, options).then((response: any) => {\n\n      if (response.error) {\n        throw new Error(response.error);\n      }\n\n      if (response.rows.length === 0) {\n        return [];\n      }\n\n      return response.rows.map(rowToVisualization);\n    });\n  }\n\n  public async getVisualization(id: string, options: { event?: MetricsEvent } = {}): Promise<CompleteVisualization | null> {\n    const tableNames: TableNames = {\n      vis: this._tableName,\n      datasets: this._datasetsTableName,\n      visToDatasets: this._datasetsVisTableName\n    };\n\n    return getVisualization(tableNames, id, this._sql, options);\n  }\n\n  public async getDatasetData(name: string, tablename: string): Promise<Dataset> {\n    return getDatasetData(name, tablename, this._sql);\n  }\n\n  public async getDataset(name: string, options: { event?: MetricsEvent } = {}): Promise<StoredDataset | null> {\n    const result: any = await this._sql.query(`\n      SELECT * FROM ${this._datasetsTableName} WHERE \"name\"='${name}'\n    `, options);\n\n    if (result.error) {\n      throw new Error(`Failed to get dataset ${name}`);\n    }\n\n    return result.rows[0] || null;\n  }\n\n  public async getDatasets(): Promise<StoredDataset[]> {\n    const result: any = await this._sql.query(`\n      SELECT * FROM ${this._datasetsTableName}\n    `);\n\n    if (result.error) {\n      throw new Error('Failed to read datasets');\n    }\n\n    return result.rows;\n  }\n\n  public async getVisForDataset(datasetId: string): Promise<StoredVisualization[]> {\n    const result: any = await this._sql.query(`\n      WITH dataset_vis as (SELECT * FROM ${this._datasetsVisTableName} WHERE \"dataset\" = '${datasetId}')\n\n      SELECT t.\"name\", t.\"id\", t.\"thumbnail\", t.\"isprivate\"\n      FROM ${this._tableName} t, dataset_vis u WHERE t.\"id\" = u.\"vis\"\n    `);\n\n    if (result.error) {\n      throw new Error('Failed to read visualizations');\n    }\n\n    return result.rows.map(rowToVisualization);\n  }\n\n  public async deleteVisualization(id: string, options: { event?: MetricsEvent } = {}): Promise<void> {\n    // Delete visualization - dataset relation\n    await this._sql.query(`DELETE FROM ${this._datasetsVisTableName} WHERE \"vis\"='${id}'`, options);\n\n    // Delete visualization\n    await this._sql.query(`DELETE FROM ${this._tableName} WHERE \"id\"='${id}'`, options);\n\n    // Delete (not shared) datasets\n    await this.deleteOrphanDatasets(options);\n  }\n\n  public async deleteDataset() {\n    // Find all related visualizations\n    // Delete them\n    // Delete the dataset\n    throw new Error('deleteDataset Not implemented yet');\n  }\n\n  public async createVisualization(\n    vis: Visualization,\n    datasets: Array<Dataset | string>,\n    options: {\n      overwriteDatasets?: boolean,\n      event?: MetricsEvent\n    } = {}): Promise<StoredVisualization | null> {\n\n    await this.preventAccidentalDatasetsOverwrite(options.overwriteDatasets, datasets);\n\n    const insertedVis = await this.insertVisTable(vis, { event: options.event });\n    if (insertedVis === null) {\n      return null;\n    }\n\n    await this.uploadAndLinkDatasetsTo(insertedVis.id, datasets, vis.isprivate, options);\n\n    return {\n      ...insertedVis,\n      ...vis\n    };\n  }\n\n  public async uploadDataset(\n    dataset: Dataset,\n    options: {\n      overwrite: boolean,\n      event?: MetricsEvent\n    } = { overwrite: false }\n    ): Promise<StoredDataset> {\n\n    const tableName = `${this._tableName}_${dataset.name}`;\n\n    if (!dataset.columns) {\n      throw new Error('Need dataset column information');\n    }\n\n    const storedDataset = await this.getDataset(dataset.name, { event: options.event });\n\n    if (options.overwrite && storedDataset !== null) {\n      await this._sql.query(`DROP TABLE IF EXISTS ${tableName}`, { event: options.event });\n    }\n\n    const opts = {\n      createOptions: { ifNotExists: false },\n      event: options.event\n    };\n    const result: any = await this._sql.create(tableName, dataset.columns, opts);\n\n    if (result.error) {\n      throw new Error(`Failed to create table for dataset ${dataset.name}: ${result.error}`);\n    }\n\n    let copyResult: any;\n    try {\n      const fields = dataset.columns.map((column) => {\n        if (typeof column === 'string') {\n          return `\"${column}\"`;\n        }\n        return `\"${column.name}\"`;\n      });\n      copyResult = await this._sql.copyFrom(dataset.file, tableName, fields, { event: options.event });\n    } catch (error) {\n      throw new Error(`Failed to copy to ${tableName}: ${error.message}`);\n    }\n    if (copyResult.error) {\n      throw new Error(`Failed to copy to ${tableName}: ${copyResult.error}`);\n    }\n\n    if (storedDataset === null) {\n      const insertResult: any = await this._sql.query(`\n        INSERT INTO ${this._datasetsTableName} (\"id\", \"name\", \"tablename\")\n        VALUES (${this._namespace}_create_uuid(), '${dataset.name}', '${tableName}')\n        RETURNING *\n      `, { event: options.event });\n\n      if (insertResult.error) {\n        throw new Error(`Failed to register dataset ${tableName} ${insertResult.error}`);\n      }\n\n      return insertResult.rows[0];\n    }\n\n    return storedDataset;\n  }\n\n  public shareDataset(tableName: string, options: { event?: MetricsEvent } = {}) {\n    return this._sql.grantPublicRead(tableName, options);\n  }\n\n  public async updateVisualization(\n    vis: StoredVisualization,\n    datasets: Dataset[],\n    options: {\n      event?: MetricsEvent\n    } = {}\n    ): Promise<any> {\n\n    const updatedVis = await this.updateVisTable(vis, options);\n    if (updatedVis === null) {\n      return null;\n    }\n\n    await this.cleanVisAndDatasetLinks(updatedVis.id, options);\n    await this.uploadAndLinkDatasetsTo(updatedVis.id, datasets, vis.isprivate, {\n      overwriteDatasets: true,\n      event: options.event\n    });\n    await this.deleteOrphanDatasets(options);\n\n    return {\n      ...vis,\n      ...updatedVis\n    };\n  }\n\n  public get isReady(): boolean {\n    return this._isReady;\n  }\n\n  public setApiKey(apiKey: string) {\n    this._sql.setApiKey(apiKey);\n  }\n\n  public async destroy() {\n    const rawDatasets = await this.getDatasets();\n\n    const datasets: string[] = rawDatasets.map((row: { name: string }) => row.name);\n\n    // NOTE: DROP TABLE CASCADE removes dependant views or functions and foreign keys constraints (neither tables nor data)\n    return this._sql.query(`\n      BEGIN;\n        ${datasets.map((datasetName) => `DROP TABLE IF EXISTS ${datasetName};`).join('\\n')}\n        DROP TABLE IF EXISTS ${this._tableName} CASCADE;\n        DROP TABLE IF EXISTS ${this._datasetsTableName} CASCADE;\n        DROP TABLE IF EXISTS ${this._datasetsVisTableName} CASCADE;\n      COMMIT;\n    `);\n  }\n\n  // Private methods\n\n  private async checkIfDatasetExists(datasetOrName: Dataset | string): Promise<StoredDataset | null> {\n    const name = typeof datasetOrName === 'string' ? datasetOrName : datasetOrName.name;\n\n    const result: any = await this._sql.query(`SELECT * FROM ${this._datasetsTableName} WHERE \"name\" = '${name}'`);\n\n    if (result.error) {\n      throw new Error(result.error);\n    }\n\n    if (result.rows.length === 0) {\n      return null;\n    }\n\n    return result.rows[0];\n  }\n\n  private async preventAccidentalDatasetsOverwrite(overwriteDatasets: boolean = false, datasets: Array<Dataset | string>) {\n    const fullDatasets = datasets.filter((dataset): dataset is Dataset => typeof dataset !== 'string');\n    const existingTables = await this.checkExistingDataset(fullDatasets);\n    if (!overwriteDatasets) {\n      if (existingTables.length > 0) {\n        throw new DuplicatedDatasetsError(existingTables.map((dataset) => dataset.name));\n      }\n    }\n  }\n\n  private async deleteOrphanDatasets(options: { event?: MetricsEvent } = {}) {\n    // Delete any dataset that is not used by any other visualization.\n    // This makes sense if datasets have not been cartodbfied, so they are just 'weak entities',\n    // tied to visualizations. Once cartodbfied, the drop could not make sense anymore.\n\n    // Drop the orphan datasets themselves\n    const result: any = await this._sql.query(`\n      SELECT * FROM ${this._datasetsTableName} WHERE \"id\" NOT IN (SELECT distinct(\"dataset\") FROM ${this._datasetsVisTableName})\n    `, options);\n\n    const dropOptions: DropOptions = { ifExists: true };\n    const opts = {\n      dropOptions,\n      event: options.event\n    };\n    const drops = result.rows.map((row: any) => {\n      this._sql.drop(row.tablename, opts);\n    });\n    await Promise.all(drops);\n\n    // Delete the reference to those datasets\n    await this._sql.query(`DELETE FROM ${this._datasetsTableName} WHERE \"id\" NOT IN (SELECT distinct(\"dataset\") FROM ${this._datasetsVisTableName})`, options);\n  }\n\n  private async insertVisTable(vis: Visualization, options: { event?: MetricsEvent } = {}) {\n    const insert = `INSERT INTO ${this._tableName}\n     (${this.FIELD_NAMES_INSERT.map((field: string) => `\"${field}\"`).join(', ')})\n     VALUES\n     (\n       ${\n      this.FIELD_NAMES_INSERT\n        .map((field: string) => {\n          const visField = this.VIS_FIELDS[field];\n          const fieldValue = (vis as any)[field];\n\n          const value = visField && visField.format ? visField.format(fieldValue) : fieldValue;\n          return value === null ? 'null' : value;\n        })\n        .join()\n      }\n     )\n     RETURNING \"id\", \"lastmodified\"\n   `;\n    const insertResult: any = await this._sql.query(insert, options);\n\n    if (insertResult.error) {\n      throw new Error(insertResult.error);\n    }\n\n    const insertedVis = insertResult.rows[0];\n    return {\n      id: insertedVis.id,\n      lastmodified: insertedVis.lastmodified\n    };\n  }\n\n  private async updateVisTable(vis: StoredVisualization, options: { event?: MetricsEvent } = {}) {\n    const update = `UPDATE ${this._tableName}\n      SET\n        ${\n        this.FIELD_NAMES_INSERT\n          .map((field: string) => {\n            const visField = this.VIS_FIELDS[field];\n            const fieldValue = (vis as any)[field];\n\n            const value = visField && visField.format ? visField.format(fieldValue) : fieldValue;\n            return `\"${field}\" = ${value === null ? 'null' : value}`;\n          })\n          .join()\n        }\n        ,${this.VIS_FIELDS.lastmodified.name}=NOW()\n      WHERE ${this.VIS_FIELDS.id.name} = '${vis.id}'\n      RETURNING \"${this.VIS_FIELDS.id.name}\", \"${this.VIS_FIELDS.lastmodified.name}\"\n    `;\n    const updatedResult: any = await this._sql.query(update, options);\n\n    if (updatedResult.error) {\n      throw new Error(updatedResult.error);\n    }\n\n    return {\n      id: vis.id,\n      lastmodified: updatedResult.rows.length ? updatedResult.rows[0].lastmodified : vis.lastmodified\n    };\n\n  }\n\n  private async uploadAndLinkDatasetsTo(\n    visId: string,\n    datasets: Array<Dataset | string>,\n    isPrivateVis: boolean,\n    options: {\n      overwriteDatasets?: boolean,\n      event?: MetricsEvent\n    } = {}\n    ) {\n\n    for (const dataset of datasets) {\n      let tableName: string;\n\n      // User has specified an already stored dataset as a data source\n      if (typeof dataset === 'string') {\n        const storedDataset = await this.getDataset(dataset);\n\n        if (storedDataset === null) {\n          // Fail silently for now. We'd have to be able to undo everything to fail properly.\n          continue;\n        }\n        tableName = storedDataset.tablename;\n        await this.linkVisAndDataset(visId, storedDataset.id, { event: options.event });\n      } else {\n        const storedDataset = await this.uploadDataset(dataset, {\n          overwrite: options.overwriteDatasets || false,\n          event: options.event\n        });\n        tableName = storedDataset.tablename;\n\n        await this.linkVisAndDataset(visId, storedDataset.id, { event: options.event });\n\n\n        // Creating the cartodbified version\n        // BEGIN;\n        // CREATE TABLE <tableName_cartodbified> AS (select * from previousTable);\n        // We'll need some extra user info for this step, fetch this early on.\n        // CARTODBFY(...);\n        // END;\n      }\n\n      // GRANT READ to datasets\n      if (!isPrivateVis) {\n        await this.shareDataset(tableName, { event: options.event });\n      }\n    }\n  }\n\n  private async checkExistingDataset(datasets: Array<string | Dataset>): Promise<StoredDataset[]> {\n    const result = await Promise.all(datasets.map((dataset) => this.checkIfDatasetExists(dataset)));\n\n    return result.filter((element): element is StoredDataset => element !== null);\n  }\n\n  private escapeOrNull(what: string) {\n    if (what === null) {\n      return null;\n    }\n    what = what.replace(/\\'/gi, '\\\\\\'');\n\n    return `E'${what}'`;\n  }\n\n  // Removes existing links with a certain visualization\n  private async cleanVisAndDatasetLinks(visId: string, options: { event?: MetricsEvent } = {}) {\n    const cleanResult: any = await this._sql.query(`\n      DELETE FROM ${this._datasetsVisTableName}\n      WHERE vis='${visId}'\n    `, options);\n\n    if (cleanResult.error) {\n      throw new Error(`Failed to clean vis-dataset links for visualization '${visId}'`);\n    }\n  }\n\n  private async linkVisAndDataset(visId: string, datasetId: string, options: { event?: MetricsEvent } = {}) {\n    const insert = `\n      INSERT INTO ${this._datasetsVisTableName} (\"vis\", \"dataset\")\n      VALUES ('${visId}', '${datasetId}')\n    `;\n    const insertResult: any = await this._sql.query(insert, options);\n\n    if (insertResult.error) {\n      throw new Error('Failed to link dataset id to vis id');\n    }\n  }\n\n  /**\n   * Checks if all the tables for SQLStorage exist\n   */\n  private _checkMissingTables() {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const requiredTables = [this._tableName, this._datasetsTableName, this._datasetsVisTableName];\n\n        const checksTablesAreReady = requiredTables.map((table) => this._sql.query(`SELECT to_regclass('${table}')`));\n        const results = await Promise.all(checksTablesAreReady);\n        const missingTables = results.some((response: any) => {\n          const tableIsMissing = (response.rows[0].to_regclass === null);\n          return tableIsMissing;\n        });\n\n        resolve(missingTables);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Creates missing required tables for custom storage\n   */\n  private async _initTables(options: { event?: MetricsEvent } = {}) {\n    const columnsConfig = [...Object.values(this.VIS_FIELDS)];\n\n    const createConfig: CreateConfig = { ifNotExists: true };\n    const createOptions = {\n      createConfig,\n      event: options.event\n    };\n\n    await this._sql.create(this._tableName, columnsConfig, createOptions);\n    await this._sql.create(this._datasetsTableName, this.DATASET_COLUMNS, createOptions);\n    await this._sql.create(this._datasetsVisTableName, this.DATASET_VIS_COLUMNS, createOptions);\n\n    // TODO: If they are already granted, no point in following\n    if (this._isPublic) {\n      await this._sql.grantPublicRead(this._tableName, options);\n      await this._sql.grantPublicRead(this._datasetsTableName, options);\n      await this._sql.grantPublicRead(this._datasetsVisTableName, options);\n    }\n  }\n}\n","import { Credentials, MetricsEvent } from '@carto/toolkit-core';\nimport { Constants, SQL } from '@carto/toolkit-sql';\nimport { SQLStorage } from './sql/SQLStorage';\nimport {\n  CompleteVisualization,\n  Dataset,\n  StorageRepository,\n  StoredDataset,\n  StoredVisualization,\n  Visualization\n} from './StorageRepository';\n\nconst DEFAULT_CLIENT = 'keplergl'; // default client app using the storage\n\nconst CONTEXT_INIT = 'custom_storage_init';\nconst CONTEXT_CREATE_PUBLIC_VIS = 'custom_storage_public_visualization_create';\nconst CONTEXT_CREATE_PRIVATE_VIS = 'custom_storage_private_visualization_create';\nconst CONTEXT_UPDATE_VIS = 'custom_storage_visualization_update';\nconst CONTEXT_DELETE_VIS = 'custom_storage_visualization_delete';\nconst CONTEXT_GET_ALL_VIS = 'custom_storage_visualization_list_load';\nconst CONTEXT_GET_PUBLIC_VIS = 'custom_storage_public_visualizations_load';\nconst CONTEXT_GET_PRIVATE_VIS = 'custom_storage_private_visualizations_load';\nconst CONTEXT_GET_VIS = 'custom_storage_visualization_load';\n\nexport class CustomStorage implements StorageRepository {\n  public static version: number = 0;\n\n  public client: string;\n\n  private _publicSQLStorage: SQLStorage;\n  private _privateSQLStorage: SQLStorage;\n  private _sqlClient: SQL;\n  private _namespace: string;\n\n  constructor(\n      namespace: string,\n      credentials: Credentials,\n      options: {\n        client?: string\n        maxApiRequestsRetries?: number,\n      } = {}\n    ) {\n      const opts = Object.assign({\n        client: DEFAULT_CLIENT,\n        maxApiRequestsRetries: Constants.DEFAULT_MAX_API_REQUESTS_RETRIES,\n      }, options);\n\n      this.client = opts.client;\n      this._sqlClient = new SQL(credentials, { maxApiRequestsRetries: opts.maxApiRequestsRetries });\n      this._checkNamespace(namespace);\n\n      this._namespace = namespace;\n\n      this._publicSQLStorage = new SQLStorage(\n      this._namespace,\n      this._sqlClient,\n      this.getVersion(),\n      true\n    );\n\n      this._privateSQLStorage = new SQLStorage(\n      this._namespace,\n      this._sqlClient,\n      this.getVersion(),\n      false\n    );\n  }\n\n  public async init() {\n    const isInitialized = await this.isInitialized();\n    if (isInitialized) {\n      return true;\n    }\n\n    await this._sqlClient.query(`\n      BEGIN;\n        CREATE OR REPLACE FUNCTION ${this._namespace}_create_uuid()\n        RETURNS UUID AS\n        $$\n        DECLARE\n          _output UUID;\n        BEGIN\n          SELECT uuid_in(md5(random()::text || clock_timestamp()::text)::cstring) INTO _output;\n          RETURN _output;\n        END\n        $$ LANGUAGE plpgsql PARALLEL SAFE;\n      COMMIT;\n    `);\n\n    const event = new MetricsEvent(this.client, CONTEXT_INIT);\n    const inits = await Promise.all([this._publicSQLStorage.init({ event }), this._privateSQLStorage.init({ event })]);\n\n    const storageHasBeenInitialized = inits[0] || inits[1];\n    return storageHasBeenInitialized;\n  }\n\n  public getVisualizations(): Promise<StoredVisualization[]> {\n    this._checkReady();\n\n    const event = new MetricsEvent(this.client, CONTEXT_GET_ALL_VIS);\n    return Promise.all([\n      this._privateSQLStorage.getVisualizations({ event }),\n      this._publicSQLStorage.getVisualizations({ event })\n    ]).then((data) => {\n      return [...data[0], ...data[1]];\n    });\n  }\n\n  public getPublicVisualizations(): Promise<StoredVisualization[]> {\n    this._checkReady();\n\n    const event = new MetricsEvent(this.client, CONTEXT_GET_PUBLIC_VIS);\n    return this._publicSQLStorage.getVisualizations({ event });\n  }\n\n  public getPrivateVisualizations(): Promise<StoredVisualization[]> {\n    this._checkReady();\n\n    const event = new MetricsEvent(this.client, CONTEXT_GET_PRIVATE_VIS);\n    return this._privateSQLStorage.getVisualizations({ event });\n  }\n\n  public getVisualization(id: string): Promise<CompleteVisualization | null> {\n    this._checkReady();\n\n    const event = new MetricsEvent(this.client, CONTEXT_GET_VIS);\n\n    // Alternatively: SELECT * from (SELECT * FROM <public_table> UNION SELECT * FROM <private_table>) WHERE id = ${id};\n    return Promise.all([\n      this._publicSQLStorage.getVisualization(id, { event }),\n      this._privateSQLStorage.getVisualization(id, { event })\n    ]).then((d) => {\n      return d[0] || d[1];\n    });\n  }\n\n  // TODO: optimize by splitting into two methods because clients will know the type of vis it is\n  public deleteVisualization(id: string) {\n    this._checkReady();\n\n    const event = new MetricsEvent(this.client, CONTEXT_DELETE_VIS);\n\n    return Promise.all([\n      this._publicSQLStorage.deleteVisualization(id, { event }),\n      this._privateSQLStorage.deleteVisualization(id, { event })\n    ]).then(() => {\n      return true;\n    }).catch(() => {\n      return false;\n    });\n  }\n\n  public createVisualization(\n    vis: Visualization,\n    datasets: Array<Dataset | string>,\n    overwriteDatasets: boolean): Promise<StoredVisualization | null> {\n    this._checkReady();\n\n    const target = vis.isprivate ? this._privateSQLStorage : this._publicSQLStorage;\n    const eventName = vis.isprivate ? CONTEXT_CREATE_PRIVATE_VIS : CONTEXT_CREATE_PUBLIC_VIS;\n    const event = new MetricsEvent(this.client, eventName);\n\n    return target.createVisualization(vis, datasets, { overwriteDatasets, event });\n  }\n\n  public updateVisualization(vis: StoredVisualization, datasets: Dataset[]): Promise<StoredVisualization | null> {\n    this._checkReady();\n\n    const target = vis.isprivate ? this._privateSQLStorage : this._publicSQLStorage;\n\n    const event = new MetricsEvent(this.client, CONTEXT_UPDATE_VIS);\n    return target.updateVisualization(vis, datasets, { event });\n  }\n\n  public getDatasets(): Promise<StoredDataset[]> {\n    return Promise.all([this._publicSQLStorage.getDatasets(), this._privateSQLStorage.getDatasets()])\n      .then((result) => {\n        return [\n          ...result[0], ...result[1]\n        ];\n      });\n  }\n\n  public getVisForDataset(datasetName: string) {\n    return Promise.all([\n      this._publicSQLStorage.getVisForDataset(datasetName),\n      this._privateSQLStorage.getVisForDataset(datasetName)\n    ])\n    .then((result) => {\n      return [\n        ...result[0], ...result[1]\n      ];\n    });\n  }\n\n  public uploadPublicDataset(dataset: Dataset, overwrite: boolean = false) {\n    return this._uploadDataset(dataset, this._publicSQLStorage, true, overwrite);\n  }\n\n  public uploadPrivateDataset(dataset: Dataset, overwrite: boolean = false) {\n    return this._uploadDataset(dataset, this._privateSQLStorage, false, overwrite);\n  }\n\n  public getVersion() {\n    return CustomStorage.version;\n  }\n\n  public migrate() {\n    // Version 0 does not need to migrate anything.\n    // Future versions should implement this to migrate from 0 to this.getVersion()\n    return Promise.resolve();\n  }\n\n  public getSQLClient(): SQL {\n    return this._sqlClient;\n  }\n\n  public setApiKey(apiKey: string) {\n    this._sqlClient.setApiKey(apiKey);\n    this._privateSQLStorage.setApiKey(apiKey);\n    this._publicSQLStorage.setApiKey(apiKey);\n  }\n\n  public async destroy() {\n    await this._sqlClient.query(`DROP FUNCTION ${this._namespace}_create_uuid CASCADE;`);\n    await this._privateSQLStorage.destroy();\n    await this._publicSQLStorage.destroy();\n  }\n\n  public async isInitialized() {\n    const inits = await Promise.all([this._publicSQLStorage.isInitialized(), this._privateSQLStorage.isInitialized()]);\n    const isInitialized = inits[0] || inits[1];\n    return isInitialized;\n  }\n\n  /**\n   * Check namespace, as it will be used internally to create database-related elements\n   *\n   * @private\n   * @param {string} namespace\n   * @memberof CustomStorage\n   */\n  private _checkNamespace(namespace: string) {\n\n    if ((namespace.split(' ').length > 1)) {\n      throw new Error ('Namespace for custom-storage must be 1 word');\n    }\n  }\n\n  private _checkReady() {\n    if (!this._privateSQLStorage.isReady || !this._publicSQLStorage.isReady) {\n      throw new Error('.init has not finished');\n    }\n  }\n\n  private async _uploadDataset(dataset: Dataset, storage: SQLStorage, isPublic: boolean, overwrite: boolean) {\n    const storedDataset = await storage.uploadDataset(dataset, { overwrite });\n\n    if (isPublic) {\n      await storage.shareDataset(storedDataset.tablename);\n    }\n\n    return storedDataset;\n  }\n}\n","import { Credentials, MetricsEvent } from '@carto/toolkit-core';\nimport { SQL } from '@carto/toolkit-sql';\nimport { CustomStorage } from '../CustomStorage';\nimport { generateDatasetTableName, generateDatasetVisTableName, generateVisTableName, getVisualization, TableNames } from './utils';\n\ninterface SQLClientMap {\n  [key: string]: SQL;\n}\n\nconst DEFAULT_CLIENT = 'keplergl'; // default client app using the storage\n\nconst CONTEXT_GET_PUBLIC_VIS = 'public_sql_reader_visualization_load';\n\nexport class PublicSQLReader {\n\n  private _client: string;\n\n  private _clientMap: SQLClientMap;\n  private _serverUrlTemplate: string;\n\n  private _tableName: string;\n  private _datasetTableName: string;\n  private _datasetsVisTableName: string;\n\n  constructor(\n      namespace: string,\n      serverUrlTemplate: string = Credentials.DEFAULT_SERVER_URL_TEMPLATE,\n      options: {\n        client?: string\n      } = { }\n    ) {\n\n      this._client = options.client ? options.client : DEFAULT_CLIENT;\n\n      this._clientMap = {};\n      this._serverUrlTemplate = serverUrlTemplate;\n\n      this._tableName = generateVisTableName(namespace, true, CustomStorage.version);\n      this._datasetTableName = generateDatasetTableName(this._tableName);\n      this._datasetsVisTableName = generateDatasetVisTableName(this._tableName);\n  }\n\n  public getVisualization(username: string, id: string) {\n    if (this._clientMap[username] === undefined) {\n      const publicCredentials = new Credentials(username, Credentials.DEFAULT_PUBLIC_API_KEY, this._serverUrlTemplate);\n      this._clientMap[username] = new SQL(publicCredentials);\n    }\n\n    const tableNames: TableNames = {\n      vis: this._tableName,\n      datasets: this._datasetTableName,\n      visToDatasets: this._datasetsVisTableName\n    };\n\n    const event = new MetricsEvent(this._client, CONTEXT_GET_PUBLIC_VIS);\n\n    return getVisualization(tableNames, id, this._clientMap[username], { event });\n  }\n}\n"],"names":["e","[object Object]","r","t","Error","this","_username","_apiKey","_serverUrlTemplate","DEFAULT_SERVER_URL_TEMPLATE","DEFAULT_PUBLIC_API_KEY","username","apiKey","serverUrlTemplate","serverURL","replace","endsWith","s","Math","random","toString","source","name","groupId","Object","setPrototypeOf","__proto__","Array","hasOwnProperty","n","constructor","prototype","create","Promise","i","o","a","next","u","throw","done","value","then","apply","label","sent","trys","ops","return","Symbol","iterator","TypeError","call","pop","length","push","TOO_MANY_REQUESTS","SERVICE_UNAVAILABLE","freeze","QUERY_LIMIT","DEFAULT_MAX_API_REQUESTS_RETRIES","HTTP_ERRORS","maxApiRequestsRetries","_callsLeft","_retryAfter","_retryTimeoutId","_fetching","_scheduleDebounce","_maxApiRequestsRetries","_credentials","_endpointServerURL","_queue","Number","isFinite","defineProperty","get","set","enumerable","configurable","_scheduleRequest","resolve","reject","requestInfo","requestInit","retries_count","clearTimeout","window","setTimeout","_scheduler","addHeadersTo","headers","Headers","forEach","append","min","max","_fetch","all","filter","indexOf","c","p","h","fetch","_getRateLimitHeader","status","detail","error","catch","parseInt","includes","json","text","copy","endpointServerURL","method","body","Blob","event","getHeaders","copyUrl","string","integer","geojson","l","drop","ifExists","ifNotExists","map","type","extra","join","f","query","extraParams","prepareGetRequest","preparePostRequest","encodeURI","FormData","d","_copyToManager","_queryManager","_copyFromManager","_publicQueryManager","copyFrom","exportURL","trim","truncate","createOptions","dropOptions","grantPublicRead","_publicRole","getRole","grantReadToRole","transaction","setApiKey","rows","rolename","DuplicatedDatasetsError","errorcode","message","errorCode","datasets","super","rowToVisualization","row","id","description","thumbnail","isprivate","config","lastmodified","getDatasetData","tablename","client","options","queryOptions","response","file","getVisualization","tableNames","vis","datasetsForViz","visId","datasetsResp","visToDatasets","getDatasetsForVis","dataset","generateVisTableName","namespace","isPublic","version","generateDatasetTableName","tableName","generateDatasetVisTableName","SQLStorage","sqlClient","_namespace","_tableName","_datasetsTableName","_datasetsVisTableName","_isPublic","VIS_FIELDS","omitOnInsert","format","escapeOrNull","isPrivate","undefined","DATASET_COLUMNS","DATASET_VIS_COLUMNS","FIELD_NAMES","values","field","FIELD_NAMES_INSERT","_sql","missing","_checkMissingTables","_initTables","_isReady","hasMissingTables","result","datasetId","deleteOrphanDatasets","preventAccidentalDatasetsOverwrite","overwriteDatasets","insertedVis","insertVisTable","uploadAndLinkDatasetsTo","overwrite","columns","storedDataset","getDataset","opts","copyResult","fields","column","insertResult","updatedVis","updateVisTable","cleanVisAndDatasetLinks","isReady","getDatasets","datasetName","datasetOrName","fullDatasets","existingTables","checkExistingDataset","drops","insert","visField","fieldValue","update","updatedResult","isPrivateVis","linkVisAndDataset","uploadDataset","shareDataset","checkIfDatasetExists","element","what","checksTablesAreReady","table","missingTables","some","to_regclass","err","columnsConfig","createConfig","CustomStorage","credentials","assign","Constants","_sqlClient","SQL","_checkNamespace","_publicSQLStorage","getVersion","_privateSQLStorage","isInitialized","MetricsEvent","inits","init","_checkReady","getVisualizations","data","deleteVisualization","target","eventName","createVisualization","updateVisualization","getVisForDataset","_uploadDataset","destroy","split","storage","Credentials","_client","_clientMap","_datasetTableName","publicCredentials"],"mappings":"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"}