{"version":3,"file":"salte-auth.mjs","sources":["../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../src/mixins/auth.ts","../src/base/core/salte-auth-error.ts","../src/base/core/required.ts","../src/utils/interceptors/fetch.ts","../src/utils/events.ts","../src/utils/interceptors/xhr.ts","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../src/utils/url.ts","../src/utils/common.ts","../src/utils/access-token.ts","../src/utils/id-token.ts","../src/utils/logger.ts","../src/base/core/storage.ts","../src/base/core/events.ts","../src/base/core/shared.ts","../node_modules/nanoid/index.browser.js","../src/base/core/provider.ts","../src/base/provider-oauth2.ts","../src/base/provider-openid.ts","../src/generic.ts","../src/base/handler.ts","../src/salte-auth.ts"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import { SalteAuth } from '../salte-auth';\n\nexport type SalteAuthMixedIn<T = {\n  auth: SalteAuth;\n}> = new (...args: any[]) => T;\n\nexport type Constructor<T = {\n  requestUpdate?(field: string): void;\n}> = new (...args: any[]) => T;\n\nexport function AuthMixinGenerator(auth: SalteAuth) {\n  return function<TBase extends Constructor>(Base: TBase): SalteAuthMixedIn {\n    return class extends Base {\n      public auth: SalteAuth;\n\n      public constructor(...args: any[]) {\n        super(...args);\n\n        this.auth = auth;\n\n        this.auth.on('login', () => {\n          if (this.requestUpdate) this.requestUpdate('auth');\n        });\n\n        this.auth.on('logout', () => {\n          if (this.requestUpdate) this.requestUpdate('auth');\n        });\n      }\n    };\n  };\n}\n","export class SalteAuthError extends Error {\n  public code: string;\n\n  public constructor({ message, code }: SalteAuthError.Options) {\n    super(message);\n\n    this.code = code;\n  }\n}\n\nexport declare namespace SalteAuthError {\n  export interface Options {\n    message: string;\n    code: string;\n  }\n}\n","import { SalteAuthError } from './salte-auth-error';\n\nexport class Required {\n  public constructor(config?: Required.Config) {\n    this.config = config || {};\n  }\n\n  protected required(...keys: string[]): void {\n    const missing = keys.filter((key: string) => {\n      return this.config[key] === undefined;\n    });\n\n    if (missing.length > 0) {\n      throw new SalteAuthError({\n        code: 'missing_required_properties',\n        message: `Missing the following required fields. (${missing.join(', ')})`,\n      });\n    }\n  }\n}\n\nexport interface Required {\n  config: Required.Config;\n};\n\nexport declare namespace Required {\n  export interface Config {\n    [key: string]: any;\n  }\n}\n","export class Fetch {\n  static real: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n  static hasSetup = false;\n  static interceptors: Function[];\n\n  static setup(force?: boolean) {\n    if (this.hasSetup && !force) return;\n    this.hasSetup = true;\n    this.interceptors = [];\n\n    if (!this.real) this.real = window.fetch;\n\n    if (window.fetch) {\n      window.fetch = async function(input, options) {\n        const request = input instanceof Request ? input : new Request(input, options);\n\n        for (let i = 0; i < Fetch.interceptors.length; i++) {\n          const interceptor = Fetch.interceptors[i];\n\n          await Promise.resolve(interceptor(request));\n        }\n\n        return Fetch.real.call(this, request);\n      };\n    }\n  }\n\n  static add(interceptor: (request: Request) => void) {\n    this.setup();\n\n    this.interceptors.push(interceptor);\n  }\n}\n\n","let setup = false;\nconst callbacks: Function[] = [];\nexport declare interface SalteAuthEvent extends Event {\n  detail?: any;\n}\n\nexport declare interface CreateOptions {\n  bubbles?: boolean;\n  cancelable?: boolean;\n  detail?: any;\n}\n\nfunction onRouteChange() {\n  callbacks.forEach((callback) => callback());\n}\n\nexport class Events {\n  public static route(callback: () => void) {\n    if (!setup) {\n      window.addEventListener('popstate', onRouteChange, { passive: true });\n      window.addEventListener('click', onRouteChange, { passive: true });\n      setTimeout(onRouteChange);\n      setup = true;\n    }\n\n    callbacks.push(callback);\n  }\n\n  public static create(name: string, params: CreateOptions): SalteAuthEvent {\n    const event: SalteAuthEvent = document.createEvent('Event');\n    event.initEvent(name, params.bubbles || false, params.cancelable || true);\n    event.detail = params.detail;\n    return event;\n  }\n\n  public static isCrossDomainError(e: Error): boolean {\n    return e instanceof DOMException || e.message === 'Permission denied';\n  }\n}\n","import { Events } from '../events';\n\nexport class XHR {\n  static realOpen: (method: string, url: string) => void;\n  static realSend: (body?: Document | BodyInit | null) => void;\n  static hasSetup = false;\n  static interceptors: Function[];\n\n  public static setup(force?: boolean) {\n    if (this.hasSetup && !force) return;\n    this.hasSetup = true;\n    this.interceptors = [];\n\n    if (!this.realOpen) this.realOpen = XMLHttpRequest.prototype.open;\n    if (!this.realSend) this.realSend = XMLHttpRequest.prototype.send;\n\n    const requestPrototype: XHR.ExtendedXMLHttpRequest = XMLHttpRequest.prototype;\n    requestPrototype.open = function(...args: any) {\n      const [, url] = args;\n      this.$url = url;\n      return XHR.realOpen.apply(this, args);\n    };\n\n    requestPrototype.send = function(data) {\n      const promises = [];\n      for (let i = 0; i < XHR.interceptors.length; i++) {\n        const interceptor = XHR.interceptors[i];\n\n        promises.push(interceptor(this, data));\n      }\n\n      Promise.all(promises).then(() => {\n        XHR.realSend.call(this, data);\n      }).catch((error) => {\n        this.dispatchEvent(Events.create('error', {\n          detail: error\n        }));\n      });\n    };\n  }\n\n  public static add(interceptor: (request: XHR.ExtendedXMLHttpRequest, data?: string | Document | Blob | ArrayBufferView | ArrayBuffer | FormData | URLSearchParams | ReadableStream<Uint8Array> | null) => void) {\n    this.setup();\n\n    this.interceptors.push(interceptor);\n  }\n}\n\nexport declare namespace XHR {\n  export interface ExtendedXMLHttpRequest extends XMLHttpRequest {\n    $url?: string;\n  }\n}\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import { Common } from './common';\n\nlet urlDocument: Document;\nlet base: HTMLBaseElement;\nlet anchor: HTMLAnchorElement;\n\nexport class URL {\n  /**\n   * Outputs a result equivalent to `location.origin`\n   */\n  public static get origin() {\n    return `${location.protocol}//${location.host}`;\n  }\n\n  public static resolve(path: string) {\n    if (!urlDocument) {\n      urlDocument = document.implementation.createHTMLDocument('url');\n      base = urlDocument.createElement('base');\n      anchor = urlDocument.createElement('a');\n      urlDocument.head.appendChild(base);\n    }\n    base.href = window.location.protocol + '//' + window.location.host;\n    anchor.href = path.replace(/ /g, '%20');\n    return anchor.href.replace(/\\/$/, '');\n  }\n\n  public static match(url: string, tests: (string | RegExp)[] | boolean): boolean {\n    if (tests instanceof Array) {\n      const resolvedUrl = this.resolve(url);\n\n      const match = Common.find(tests, (test) => {\n        if (test instanceof RegExp) {\n          return !!resolvedUrl.match(test);\n        }\n\n        return resolvedUrl.indexOf(this.resolve(test)) === 0;\n      });\n\n      return !!match;\n    }\n\n    return tests === true;\n  }\n\n  public static parse({ search, hash }: Location) {\n    let params: string[] = [];\n\n    if (search) params = params.concat(search.replace('?', '').split('&'));\n    if (hash) params = params.concat(hash.replace('#', '').split('&'));\n\n    const parsed: any = {};\n\n    Common.forEach(params, (param) => {\n      const [key, value] = param.split('=');\n\n      parsed[key] = value;\n    });\n\n    return parsed;\n  }\n}\n","import { URL } from './url';\nimport { Events } from './events';\n\nconst debounces: {\n  [key: string]: number;\n} = {};\n\nexport class Common {\n  public static includes(source: any[] | string, value: any) {\n    return source.indexOf(value) !== -1;\n  }\n\n  public static forEach<T>(source: T[], cb: (value: T, key: number | string) => void): void;\n  public static forEach<T extends object>(source: T, cb: (item: any, key: number | string) => void): void;\n  public static forEach<T>(source: T[] | T, cb: (item: T | any, key: number | string) => void): void {\n    if (Array.isArray(source)) {\n      for (let i = 0; i < source.length; i++) {\n        cb(source[i], i);\n      }\n    } else {\n      for (let key in source) {\n        cb(source[key], key);\n      }\n    }\n  }\n\n  public static find<T>(source: T[], cb: (value: T, key: number | string) => boolean): T;\n  public static find<T extends object>(source: T, cb: (item: any, key: number | string) => boolean): any;\n  public static find<T>(source: T[] | T, cb: (item: T | any, key: number | string) => boolean): T | any {\n    if (Array.isArray(source)) {\n      for (let i = 0; i < source.length; i++) {\n        const item = source[i];\n        if (cb(item, i)) {\n          return item;\n        }\n      }\n    } else {\n      for (let key in source) {\n        const item = source[key];\n        if (cb(item, key)) {\n          return item;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  public static assign(target: any, ...sources: any[]) {\n    this.forEach(sources, (source) => {\n      for (const key in source) {\n        target[key] = source[key];\n      }\n    });\n\n    return target;\n  }\n\n  public static defaults(target: any, ...sources: any[]) {\n    this.forEach(sources, (source) => {\n      for (const key in source) {\n        if (this.isObject(target[key]) && this.isObject(source[key])) {\n          target[key] = this.defaults(target[key], source[key]);\n        } else if (target[key] === undefined) {\n          target[key] = source[key];\n        }\n      }\n    });\n\n    return target;\n  }\n\n  public static isObject(value: any) {\n    return typeof(value) === 'object' && !Array.isArray(value);\n  }\n\n  public static async iframe({ url, redirectUrl, visible }: Common.IFrameOptions): Promise<any> {\n    const iframe = document.createElement('iframe');\n    iframe.setAttribute('owner', '@salte-auth/salte-auth');\n\n    if (visible) {\n      this.assign(iframe.style, {\n        border: 'none',\n        bottom: 0,\n        height: '100%',\n        left: 0,\n        position: 'fixed',\n        right: 0,\n        top: 0,\n        width: '100%',\n        zIndex: 9999,\n\n        opacity: 0,\n        transition: '0.5s opacity',\n      });\n\n      setTimeout(() => iframe.style.opacity = '1');\n    } else {\n      iframe.style.display = 'none';\n    }\n\n    iframe.src = url;\n    document.body.appendChild(iframe);\n\n    return new Promise((resolve, reject) => {\n      const checker = setInterval(() => {\n        try {\n          const { location } = iframe.contentWindow;\n          // This could throw cross-domain errors, so we need to silence them.\n          if (location.href.indexOf(redirectUrl) !== 0) return;\n          const parsed = URL.parse(location);\n\n          iframe.parentElement && iframe.parentElement.removeChild(iframe);\n          clearInterval(checker);\n          resolve(parsed);\n        } catch (error) {\n          if (Events.isCrossDomainError(error)) return;\n\n          iframe.parentElement && iframe.parentElement.removeChild(iframe);\n          clearInterval(checker);\n\n          reject(error);\n        }\n      });\n    });\n  }\n\n  public static debounce(identifier: string, callback: () => void, timeout?: number): void {\n    clearTimeout(debounces[identifier]);\n\n    debounces[identifier] = window.setTimeout(() => {\n      delete debounces[identifier];\n\n      callback();\n    }, timeout);\n  }\n}\n\nexport declare namespace Common {\n  export interface IFrameOptions {\n    url: string;\n    redirectUrl: string;\n    visible?: boolean;\n  }\n}\n\n\n","import { Common } from './common';\n\nexport class AccessToken {\n  public raw: string;\n  public expiration: number;\n  public type: string;\n\n  public constructor(accessToken: string, expiration: string, type: string) {\n    this.raw = accessToken;\n    this.expiration = Common.includes([undefined, null], expiration) ? null : Number(expiration);\n    this.type = type;\n  }\n\n  public get expired() {\n    return !this.raw || this.expiration <= Date.now();\n  }\n}\n","import { SalteAuthError } from '../base/core/salte-auth-error';\n\nexport class IDToken {\n  public raw: string;\n  public user: IDToken.UserInfo;\n\n  public constructor(idToken: string) {\n    this.raw = idToken;\n    this.user = IDToken.parse(this.raw);\n  }\n\n  public get expired() {\n    return !this.user || (this.user.exp * 1000) <= Date.now();\n  }\n\n  public static parse(idToken?: string): IDToken.UserInfo | null {\n    try {\n      const separated = idToken.split('.');\n\n      if (separated.length !== 3) {\n        throw new SalteAuthError({\n          code: 'invalid_id_token',\n          message: `ID Token didn't match the desired format. ({header}.{payload}.{validation})`,\n        });\n      }\n\n      // This fixes an issue where various providers will encode values\n      // incorrectly and cause the browser to fail to decode.\n      // https://stackoverflow.com/questions/43065553/base64-decoded-differently-in-java-jjwt\n      return JSON.parse(atob(separated[1].replace(/-/g, '+').replace(/_/g, '/')));\n    } catch (error) {\n      return null;\n    }\n  }\n}\n\nexport declare namespace IDToken {\n  export interface UserInfo {\n    /**\n     * Issuer Identifier for the Issuer of the response.\n     */\n    iss: string;\n\n    /**\n     * A locally unique and never reassigned identifier within the Provider for the End-User.\n     */\n    sub: string;\n\n    /**\n     * Audience(s) that this ID Token is intended for.\n     */\n    aud: string[];\n\n    /**\n     * Value used to mitigate replay attacks by associating a client session with an id_token.\n     */\n    nonce: string;\n\n    /**\n     * Expiration time on or after which the ID Token MUST NOT be accepted for processing.\n     *\n     * Represented as a unix epoch timestamp (seconds)\n     */\n    exp: number;\n\n    /**\n     * When the JWT was issued.\n     *\n     * Represented as a unix epoch timestamp (seconds)\n     */\n    iat: number;\n  }\n}\n\n","import { Common } from './common';\n\nexport class Logger {\n  private static levels: {\n    [key: string]: number;\n  } = {\n    trace: 0,\n    info: 1,\n    warn: 2,\n    error: 3\n  };\n\n  public name: string;\n  private level: number | boolean;\n\n  public constructor(name: string, level: string);\n  public constructor(name: string, level: boolean);\n  public constructor(name: string, level: string | boolean) {\n    this.name = name;\n    this.level = typeof(level) === 'string' ? this.toLevel(level) : level;\n  }\n\n  public trace(message: string, ...optionalParams: any[]) {\n    this.log('trace', message, ...optionalParams);\n  }\n\n  public info(message: string, ...optionalParams: any[]) {\n    this.log('info', message, ...optionalParams);\n  }\n\n  public warn(message: string, ...optionalParams: any[]) {\n    this.log('warn', message, ...optionalParams);\n  }\n\n  public error(message: string, ...optionalParams: any[]) {\n    this.log('error', message, ...optionalParams);\n  }\n\n  private log(level: string, message: string, ...optionalParams: any[]) {\n    if (this.enabled(level)) {\n      console.log(`${level}: ${message}`, ...optionalParams);\n    }\n  }\n\n  public enabled(level: string) {\n    if (this.level === false) return false;\n\n    return this.level === true || this.level <= this.toLevel(level);\n  }\n\n  public toLevel(name: string): number {\n    return Common.find(Logger.levels, (_level, key) => key === name);\n  }\n}\n","import { SalteAuthError } from './salte-auth-error';\n\nimport { Required } from './required';\n\nimport { Common } from '../../utils';\n\nexport class Storage extends Required {\n  public constructor(config?: Storage.Config) {\n    super(config);\n\n    this.config = Common.defaults(this.config, {\n      storage: 'session'\n    });\n  }\n\n  public get(key: string, defaultValue: string = null): string {\n    return this.storage.getItem(this.key(key)) || defaultValue;\n  }\n\n  public set(key: string, value?: any): void {\n    if (Common.includes([undefined, null], value)) {\n      this.clear(key);\n    } else {\n      this.storage.setItem(this.key(key), value);\n    }\n  }\n\n  public clear(key: string) {\n    this.storage.removeItem(this.key(key));\n  }\n\n  public reset(): void {\n    const baseKey = this.key('');\n    for (const key in localStorage) {\n      if (key.indexOf(baseKey) === 0) {\n        localStorage.removeItem(key);\n      }\n    }\n\n    for (const key in sessionStorage) {\n      if (key.indexOf(baseKey) === 0) {\n        sessionStorage.removeItem(key);\n      }\n    }\n  }\n\n  protected key(key?: string): string {\n    return `salte.auth.${key}`;\n  }\n\n  private get storage() {\n    const storage = this.config && this.config.storage;\n\n    switch (storage) {\n      case 'local': return localStorage;\n      case 'session': return sessionStorage;\n    }\n\n    throw new SalteAuthError({\n      code: 'invalid_storage',\n      message: `Storage doesn't exist for the given value. (${storage})`,\n    });\n  }\n}\n\nexport interface Storage {\n  config: Storage.Config;\n};\n\nexport declare namespace Storage {\n  export interface Config extends Required.Config {\n    /**\n     * The storage api to keep authenticate information stored in.\n     *\n     * @default 'session'\n     */\n    storage?: ('local'|'session');\n  }\n}\n","import { Storage } from './storage';\nimport { Common } from '../../utils';\n\nexport class Events extends Storage {\n  private listeners: Map<string, Function[]> = new Map();\n\n  public on(name: string, listener: Function) {\n    if (!this.listeners.has(name)) {\n      this.listeners.set(name, []);\n    }\n\n    const listeners = this.listeners.get(name);\n    listeners.push(listener);\n  }\n\n  public off(name: string, listener: Function) {\n    if (!this.listeners.has(name)) return;\n    const listeners = this.listeners.get(name);\n\n    if (!listeners.length) return;\n    const index = listeners.indexOf(listener);\n\n    if (index === -1) return;\n    listeners.splice(index, 1);\n  }\n\n  public emit(name: string, ...args: any[]) {\n    if (!this.listeners.has(name)) return;\n\n    const listeners = this.listeners.get(name);\n\n    Common.forEach(listeners, (listener) => listener(...args));\n  }\n}\n\nexport interface Events {\n  config: Events.Config;\n};\n\nexport declare namespace Events {\n  // TODO: What's the best way to forward a configuration?\n  export interface Config extends Storage.Config {} // eslint-disable-line\n}\n","import { Events } from './events';\n\nimport { Common } from '../../utils';\n\nexport class Shared extends Events {\n  public constructor(config?: Shared.Config) {\n    super(config);\n\n    this.config = Common.defaults(this.config, {\n      redirectUrl: location.origin,\n      level: 'warn'\n    });\n  }\n\n  /**\n   * Returns a redirect url for the given login type.\n   * @param type Are we logging in or logging out?\n   */\n  public redirectUrl(type: 'login'|'logout'): string {\n    if (typeof(this.config.redirectUrl) === 'string') {\n      return this.config.redirectUrl;\n    }\n\n    return this.config.redirectUrl[type];\n  }\n}\n\nexport interface Shared {\n  config: Shared.Config;\n}\n\nexport declare namespace Shared {\n  export interface Config extends Events.Config {\n    [key: string]: any;\n\n    /**\n     * URL the Provider will send the response back to.\n     */\n    redirectUrl?: string | RedirectUrl;\n  }\n\n  export interface RedirectUrl {\n    /**\n     * The URL the Provider will send the response back to on login.\n     */\n    login: string;\n\n    /**\n     * The URL the Provider will send the response back to on logout.\n     */\n    logout: string;\n  }\n}\n","if (process.env.NODE_ENV !== 'production') {\n  if (typeof self === 'undefined' || (!self.crypto && !self.msCrypto)) {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nvar crypto = self.crypto || self.msCrypto\n\n/*\n * This alphabet uses a-z A-Z 0-9 _- symbols.\n * Symbols order was changed for better gzip compression.\n */\nvar url = 'Uint8ArdomValuesObj012345679BCDEFGHIJKLMNPQRSTWXYZ_cfghkpqvwxyz-'\n\nmodule.exports = function (size) {\n  size = size || 21\n  var id = ''\n  var bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (0 < size--) {\n    id += url[bytes[size] & 63]\n  }\n  return id\n}\n","import { Shared } from './shared';\n\nimport { Common, Interceptors, Logger } from '../../utils';\nimport { SalteAuthError } from './salte-auth-error';\n\nexport class Provider extends Shared {\n  protected logger: Logger;\n\n  public constructor(config: Provider.Config) {\n    super(config);\n\n    this.config = Common.defaults(this.config, {\n      validation: true,\n      level: 'warn'\n    });\n    this.logger = new Logger(`@salte-auth/salte-auth:providers/${this.$name}`, this.config.level);\n  }\n\n  /**\n   * Determines if validation is enabled for the given key.\n   * @param key the key to determine whether validation is enabled for\n   * @returns whether validation is enabled for the key.\n   */\n  protected validation(key: string): boolean {\n    if (typeof(this.config.validation) === 'object') {\n      return this.config.validation[key] === true;\n    }\n\n    return this.config.validation === true;\n  }\n\n  /**\n   * The unique name of the provider\n   */\n  public get $name(): string {\n    return this.config.name || this.name;\n  }\n\n  /**\n   * Returns a scoped key for storage.\n   * @param key The storage key.\n   *\n   * @example auth0.key('hello') // 'salte.auth.provider.auth0.hello'\n   */\n  protected key(key: string) {\n    return `salte.auth.provider.${this.$name}.${key}`;\n  }\n\n  /**\n   * Creates a url with the given query parameters\n   * @param base the base url without query parameters\n   * @param params the query parameters to attache to the url\n   * @returns the built url\n   */\n  protected url(base: string, params: object = {}): string {\n    let url = base;\n\n    Common.forEach(params, (value, key) => {\n      if (Common.includes([undefined, null, ''], value)) return;\n\n      url += `${url.indexOf('?') === -1 ? '?' : '&'}${key}=${encodeURIComponent(value)}`;\n    });\n\n    return url;\n  }\n\n  /**\n   * Returns the logout url for the provider.\n   */\n  public get logout(): string {\n    throw new SalteAuthError({\n      code: 'logout_not_supported',\n      message: `This provider doesn't support logout.`,\n    });\n  }\n}\n\nexport interface Provider {\n  /**\n   * The unique name of the provider\n   */\n  name: string;\n\n  /**\n   * Returns the login url for the provider.\n   */\n  login: string;\n\n  /**\n   * An internal login command to `salte-auth` that enables enhancing the login with common parameters.\n   */\n  $login(options?: object): string;\n\n  validate(options: object | void): void;\n\n  /**\n   * Checks for errors returned from the provider.\n   */\n  $validate(options: object): void;\n\n  /**\n   * Reinitializes the ID and Access Tokens of the given provider.\n   */\n  sync(): void;\n\n  /**\n   * Invoked when Salte Auth is initialized\n   */\n  connected?(): void;\n\n  /**\n   * Invoked when an endpoint is marked as secured.\n   * @returns true if the endpoint is already secured, otherwise it returns a url to secure the endpoint.\n   */\n  secure?(request?: Interceptors.XHR.ExtendedXMLHttpRequest | Request): Promise<string | boolean>;\n\n  on(name: 'login', listener: (error?: Error, data?: any) => void): void;\n  on(name: 'logout', listener: (error?: Error) => void): void;\n}\n\nexport interface Provider {\n  config: Provider.Config;\n};\n\nexport declare namespace Provider {\n  export interface Config extends Shared.Config {\n    /**\n     * The name associated with your provider\n     */\n    name?: string;\n\n    /**\n     * The url of the designated provider.\n     */\n    url?: string;\n\n    /**\n     * Used to disable certain security validations if your provider doesn't support them.\n     *\n     * @default true\n     */\n    validation?: ValidationOptions | boolean;\n\n    /**\n     * The routes to secure for this provider.\n     */\n    routes?: (string | RegExp)[] | boolean;\n\n    /**\n     * The endpoints to secure for this provider.\n     */\n    endpoints?: (string | RegExp)[];\n\n    /**\n     * Determines the level of verbosity of the logs.\n     *\n     * @default 'warn'\n     */\n    level?: ('error'|'warn'|'info'|'trace');\n  }\n\n  export interface ValidationOptions {\n    [key: string]: boolean;\n  }\n}\n","import nanoid from 'nanoid';\n\nimport { AccessToken, Common, Interceptors } from '../utils';\nimport { Provider } from './core/provider';\nimport { SalteAuthError } from './core/salte-auth-error';\n\nexport class OAuth2Provider extends Provider {\n  public accessToken?: AccessToken;\n\n  public constructor(config?: OAuth2Provider.Config) {\n    super(config);\n\n    this.sync();\n  }\n\n  public connected() {\n    this.required('clientID', 'responseType');\n  }\n\n  public async secure(request: Interceptors.XHR.ExtendedXMLHttpRequest | Request): Promise<string | boolean> {\n    if (this.config.responseType === 'token') {\n      if (this.accessToken.expired) {\n        return this.$login();\n      }\n\n      if (request) {\n        if (request instanceof Request) {\n          request.headers.set('Authorization', `Bearer ${this.accessToken.raw}`);\n        } else if (request instanceof XMLHttpRequest) {\n          request.setRequestHeader('Authorization', `Bearer ${this.accessToken.raw}`);\n        } else {\n          throw new SalteAuthError({\n            code: 'unknown_request',\n            message: `Unknown request type. (${request})`,\n          });\n        }\n      }\n    }\n\n    return true;\n  }\n\n  public $validate(options: OAuth2Provider.Validation): void {\n    try {\n      if (!options) {\n        throw new SalteAuthError({\n          code: 'empty_response',\n          message: `The response provided was empty, this is most likely due to the configured handler not providing it.`\n        });\n      }\n\n      if (options.error) {\n        throw new SalteAuthError({\n          code: options.error,\n          message: `${options.error_description ? options.error_description : options.error}${options.error_uri ? ` (${options.error_uri})` : ''}`,\n        });\n      }\n\n      const { code, access_token, state, expires_in, token_type } = options;\n\n      if (this.validation('state') && this.get('state') !== state) {\n        throw new SalteAuthError({\n          code: 'invalid_state',\n          message: 'State provided by identity provider did not match local state.',\n        });\n      }\n\n      const types = this.get('response-type', '').split(' ');\n      if (Common.includes(types, 'code')) {\n        if (!code) {\n          throw new SalteAuthError({\n            code: 'invalid_code',\n            message: 'Expected a code to be returned by the Provider.',\n          });\n        }\n      } else if (Common.includes(types, 'token')) {\n        if (!access_token) {\n          throw new SalteAuthError({\n            code: 'invalid_access_token',\n            message: 'Expected an access token to be returned by the Provider.',\n          });\n        }\n      }\n\n      if (code) {\n        this.set('code.raw', code);\n        this.clear('access-token.raw');\n        this.clear('access-token.expiration');\n        this.clear('access-token.type');\n      } else if (access_token) {\n        this.set('access-token.raw', access_token);\n        this.set('access-token.expiration', Date.now() + (Number(expires_in) * 1000));\n        this.set('access-token.type', token_type);\n        this.clear('code.raw');\n      }\n    } finally {\n      this.clear('state');\n    }\n  }\n\n  public validate(options: OAuth2Provider.Validation) {\n    try {\n      this.$validate(options);\n    } catch (error) {\n      this.emit('login', error);\n      throw error;\n    } finally {\n      this.sync();\n    }\n\n    this.emit('login', null, this.code || this.accessToken);\n  }\n\n  public get code() {\n    return this.get('code.raw');\n  }\n\n  public $login(options: OAuth2Provider.OverrideOptions = {}): string {\n    const state = `${this.$name}-state-${nanoid()}`;\n    const responseType = options.responseType || this.config.responseType;\n\n    this.set('state', state);\n    this.set('response-type', responseType);\n\n    return this.url(this.login, {\n      client_id: this.config.clientID,\n      response_type: responseType,\n      redirect_uri: this.config.redirectUrl,\n      scope: this.config.scope,\n      state\n    });\n  }\n\n  public sync() {\n    this.accessToken = new AccessToken(\n      this.get('access-token.raw'),\n      this.get('access-token.expiration'),\n      this.get('access-token.type')\n    );\n  }\n}\n\nexport interface OAuth2Provider {\n  config: OAuth2Provider.Config;\n\n  on(name: 'login', listener: (error?: Error, accessToken?: AccessToken) => void): void;\n  on(name: 'login', listener: (error?: Error, code?: string) => void): void;\n  on(name: 'logout', listener: (error?: Error) => void): void;\n}\n\nexport declare namespace OAuth2Provider {\n  export interface Config extends Provider.Config {\n    /**\n     * Determines whether a authorization code (server) or access token (client) should be returned.\n     * @type {('code'|'token')}\n     */\n    responseType?: string;\n\n    /**\n     * A list of space-delimited claims used to determine what user information is provided and what access is given.\n     */\n    scope?: string;\n\n    /**\n     * The client id of your identity provider\n     */\n    clientID: string;\n\n    validation?: boolean | ValidationOptions;\n  }\n\n  export interface OverrideOptions {\n    /**\n     * Determines whether a authorization code (server) or access token (client) should be returned.\n     * @type {('code'|'token')}\n     */\n    responseType?: string;\n  }\n\n  export interface ValidationOptions extends Provider.ValidationOptions {\n    /**\n     * Disables cross-site forgery validation via \"state\".\n     */\n    state: boolean;\n  }\n\n  export interface Validation {\n    /**\n     * An error code sent from the Provider\n     */\n    error: ('unauthorized_client'|'access_denied'|'unsupported_response_type'|'invalid_scope'|'server_error'|'temporarily_unavailable');\n\n    /**\n     * Human-readable message sent back by the Provider.\n     */\n    error_description?: string;\n\n    /**\n     * A URI to a human-readable web page with information about the error.\n     */\n    error_uri?: string;\n\n    /**\n     * A value sent back by the server to the client.\n     *\n     * Used to prevent cross-site request forgery.\n     */\n    state: string;\n\n    /**\n     * The authorization code generated by the Provider.\n     *\n     * Generally used by a backend server to generate an access token.\n     */\n    code: string;\n\n    /**\n     * The access token issued by the Provider.\n     */\n    access_token: string;\n\n    /**\n     * The type of the token issued.\n     */\n    token_type: ('bearer'|'mac');\n\n    /**\n     * The lifetime (in seconds) of the access_token.\n     *\n     * For example, the value \"3600\" denotes that the access token will\n     * expire in one hour from the time the response was generated.\n     */\n    expires_in: string;\n  }\n}\n","import nanoid from 'nanoid';\n\nimport { OAuth2Provider } from './provider-oauth2';\n\nimport { SalteAuthError } from './core/salte-auth-error';\n\nimport { Common, IDToken, Interceptors } from '../utils';\n\nexport class OpenIDProvider extends OAuth2Provider {\n  public idToken?: IDToken;\n\n  public constructor(config?: OpenIDProvider.Config) {\n    super(config);\n\n    this.config.renewal = typeof(this.config.renewal) === 'object' ? this.config.renewal : { type: this.config.renewal };\n\n    this.config = Common.defaults(this.config, {\n      responseType: 'id_token',\n      scope: 'openid',\n      renewal: {\n        type: 'auto',\n        buffer: 60000\n      }\n    });\n\n    this.sync();\n  }\n\n  public async secure(request: Interceptors.XHR.ExtendedXMLHttpRequest | Request): Promise<string | boolean> {\n    if (Common.includes(['id_token', 'id_token token', 'token'], this.config.responseType)) {\n      if (this.idToken.expired) {\n        return this.$login();\n      }\n\n      if (this.accessToken.expired) {\n        const parsed = await Common.iframe({\n          redirectUrl: this.redirectUrl('login'),\n          url: this.$login({\n            prompt: 'none',\n            responseType: 'token',\n          }),\n        });\n\n        this.validate(parsed);\n      }\n\n      if (request) {\n        if (request instanceof Request) {\n          request.headers.set('Authorization', `Bearer ${this.accessToken.raw}`);\n        } else if (request instanceof XMLHttpRequest) {\n          request.setRequestHeader('Authorization', `Bearer ${this.accessToken.raw}`);\n        } else {\n          throw new SalteAuthError({\n            code: 'unknown_request',\n            message: `Unknown request type. (${request})`,\n          });\n        }\n      }\n    }\n\n    return true;\n  }\n\n  public $validate(options: OpenIDProvider.Validation): void {\n    try {\n      super.$validate(options);\n\n      const types = this.get('response-type', '').split(' ');\n      if (Common.includes(types, 'id_token')) {\n        const { id_token } = options;\n\n        const user = IDToken.parse(id_token);\n\n        if (!user) {\n          throw new SalteAuthError({\n            code: 'invalid_id_token',\n            message: 'Failed to parse user information due to invalid id token.',\n          });\n        }\n\n        if (this.validation('nonce') && this.get('nonce') !== user.nonce) {\n          throw new SalteAuthError({\n            code: 'invalid_nonce',\n            message: 'Nonce provided by identity provider did not match the local nonce.',\n          });\n        }\n\n        this.set('id-token.raw', id_token);\n      } else if (Common.includes(types, 'code')) {\n        this.clear('id-token.raw');\n      }\n    } finally {\n      this.clear('nonce');\n    }\n  }\n\n  public validate(options: OpenIDProvider.Validation): any {\n    try {\n      this.$validate(options);\n    } catch (error) {\n      this.emit('login', error);\n      throw error;\n    } finally {\n      this.sync();\n    }\n\n    const responseType = this.get('response-type', '');\n    const types = responseType.split(' ');\n    if (Common.includes(types, 'id_token')) {\n      this.emit('login', null, this.idToken);\n    } else if (Common.includes(types, 'token')) {\n      this.emit('login', null, this.accessToken);\n    } else if (Common.includes(types, 'code')) {\n      this.emit('login', null, this.code);\n    } else {\n      throw new SalteAuthError({\n        code: 'invalid_response_type',\n        message: `Unknown Response Type (${responseType})`\n      });\n    }\n  }\n\n  public $login(options?: OpenIDProvider.OverrideOptions): string {\n    const nonce = `${this.$name}-nonce-${nanoid()}`;\n\n    this.set('nonce', nonce);\n\n    return this.url(super.$login(options), {\n      prompt: options && options.prompt,\n      nonce\n    });\n  }\n\n  public sync() {\n    super.sync();\n\n    this.idToken = new IDToken(this.get('id-token.raw'));\n  }\n}\n\nexport interface OpenIDProvider {\n  config: OpenIDProvider.Config;\n\n  // TODO: Fix this\n  // on(name: 'login', listener: (error?: Error, user?: IDToken) => void): void;\n  // on(name: 'logout', listener: (error?: Error) => void): void;\n}\n\nexport declare namespace OpenIDProvider {\n  export interface Config extends OAuth2Provider.Config {\n    /**\n     * Determines whether a authorization code (server) or id token (client) should be returned.\n     */\n    responseType?: ('id_token'|'id_token token'|'code');\n\n    validation?: boolean | ValidationOptions;\n\n    /**\n     * Determines whether token renewal should be handled automatically or manually.\n     *\n     * @default 'auto'\n     */\n    renewal?: ('auto'|'manual'| {\n      type?: ('auto'|'manual');\n      /**\n       * The amount of time prior to experation to renew the `id_token`.\n       *\n       * @default 60000\n       */\n      buffer?: number;\n    });\n  }\n\n  export interface ValidationOptions extends OAuth2Provider.ValidationOptions {\n    /**\n     * Disables replay attack mitigation via \"nonce\".\n     */\n    nonce: boolean;\n  }\n\n  export interface OverrideOptions extends OAuth2Provider.OverrideOptions {\n    /**\n     * Indicate that the Provider shouldn't display any user interaction.\n     */\n    prompt?: ('none'|'login'|'consent'|'select_account');\n  }\n\n  export interface Validation extends OAuth2Provider.Validation {\n    /**\n     * A JSON Web Token (JWT) that contains user profile information\n     */\n    id_token: string;\n  }\n}\n","import { OAuth2Provider } from './base/provider-oauth2';\nimport { OpenIDProvider } from './base/provider-openid';\n\nexport class OAuth2 extends OAuth2Provider {\n  constructor(config: OAuth2.Config) {\n    super(config);\n\n    this.required('login');\n  }\n\n  get name(): string {\n    return 'generic.oauth2';\n  }\n\n  get login(): string {\n    return this.config.login.apply(this);\n  }\n}\n\nexport interface OAuth2 {\n  config: OAuth2.Config;\n};\n\nexport declare namespace OAuth2 {\n  export interface Config extends OAuth2Provider.Config {\n    login(): string;\n  }\n}\n\nexport class OpenID extends OpenIDProvider {\n  constructor(config: OpenID.Config) {\n    super(config);\n\n    this.required('login', 'logout');\n  }\n\n  get name(): string {\n    return 'generic.openid';\n  }\n\n  get login(): string {\n    return this.config.login.apply(this);\n  }\n\n  get logout(): string {\n    return this.config.logout.apply(this);\n  }\n}\n\nexport interface OpenID {\n  config: OpenID.Config;\n};\n\nexport declare namespace OpenID {\n  export interface Config extends OpenIDProvider.Config {\n    login(): string;\n    logout(): string;\n  }\n}\n","import { Storage } from './core/storage';\nimport { Common, Logger, URL } from '../utils';\n\nexport class Handler extends Storage {\n  protected logger: Logger;\n\n  public constructor(config?: Handler.Config) {\n    super(config);\n\n    this.config = Common.defaults(this.config, {\n      navigate: 'reload',\n      level: 'warn'\n    });\n    this.logger = new Logger(`@salte-auth/salte-auth:handlers/${this.$name}`, this.config.level);\n  }\n\n  /**\n   * The unique name of the handler\n   */\n  public get $name() {\n    return this.config.name || this.name;\n  }\n\n  /**\n   * Returns a scoped key for storage.\n   * @param key The storage key.\n   *\n   * @example redirect.key('hello') // 'salte.auth.handler.redirect.hello'\n   */\n  protected key(key: string) {\n    return `salte.auth.handler.${this.$name}.${key}`;\n  }\n\n  /**\n   * Navigates to the url provided.\n   * @param url the url to navigate to\n   */\n  /* istanbul ignore next */\n  protected navigate(url: string) {\n    if (this.config.navigate === 'history' && url.indexOf(URL.origin) === 0) {\n      history.pushState('', document.title, url);\n    }\n\n    location.href = url;\n  }\n}\n\nexport interface Handler {\n  config: Handler.Config;\n\n  /**\n   * The unique name of the handler\n   */\n  name: string;\n\n  /**\n   * Determines whether the handler supports automatic login.\n   */\n  auto: boolean;\n\n  open(options: Handler.OpenOptions): Promise<object>;\n  connected?(options: Handler.ConnectedOptions): object | void;\n}\n\nexport declare namespace Handler {\n  export interface Config extends Storage.Config {\n    /**\n     * Overrides the default name of the handler.\n     */\n    name?: string;\n\n    /**\n     * Dictates that this is the default handler.\n     */\n    default?: boolean;\n\n    /**\n     * Determines how page navigations are interpreted by this handler.\n     *\n     * * **reload:** Reloads the whole page when `navigate` is invoked.\n     * * **history:** Utilizes the history api to prevent page reloads when possible.\n     *\n     * @default 'reload'\n     */\n    navigate?: ('reload'|'history');\n\n    /**\n     * Determines the level of verbosity of the logs.\n     *\n     * @default 'warn'\n     */\n    level?: ('error'|'warn'|'info'|'trace');\n  }\n\n  export interface ConnectedOptions {\n    action?: string;\n  }\n\n  export interface OpenOptions {\n    url: string;\n    redirectUrl: string;\n  }\n}\n","import { AuthMixinGenerator, SalteAuthMixedIn, Constructor } from './mixins/auth';\nimport { Shared } from './base/core/shared';\nimport * as Generic from './generic';\nimport * as Utils from './utils';\nimport { Common, Events, Interceptors, URL, IDToken, Logger } from './utils';\n\nimport { Provider } from './base/core/provider';\nimport { SalteAuthError } from './base/core/salte-auth-error';\nimport { Handler } from './base/handler';\n\nexport class SalteAuth extends Shared {\n  public logger: Logger;\n  public mixin: (base: Constructor) => SalteAuthMixedIn;\n\n  public constructor(config: SalteAuth.Config) {\n    super(config);\n\n    this.required('providers', 'handlers');\n\n    this.config = Common.defaults(this.config, {\n      validation: true,\n      level: 'warn'\n    });\n\n    this.logger = new Logger(`@salte-auth/salte-auth:core`, this.config.level);\n\n    Common.forEach(this.config.providers, (provider) => {\n      provider.connected && provider.connected();\n\n      provider.on('login', (error, data) => {\n        this.emit('login', error, data);\n      });\n\n      provider.on('logout', (error) => {\n        this.emit('logout', error);\n      });\n    });\n\n    const action = this.get('action');\n    const provider = action ? this.provider(this.get('provider')) : null;\n    const handlerName = action ? this.get('handler') : null;\n\n    if (!Common.includes([undefined, null, 'login', 'logout'], action)) {\n      throw new SalteAuthError({\n        code: 'unknown_action',\n        message: `Unable to finish redirect due to an unknown action! (${action})`,\n      });\n    }\n\n    Common.forEach(this.config.handlers, (handler) => {\n      if (!handler.connected) return;\n\n      const responsible = handler.$name === handlerName;\n\n      setTimeout(() => {\n        const parsed = handler.connected({ action: responsible ? action : null });\n\n        if (!responsible) return;\n\n        if (action === 'login') {\n          provider.validate(parsed);\n        } else {\n          provider.reset();\n          provider.sync();\n          provider.emit('logout');\n        }\n      });\n    });\n\n    this.clear('action');\n    this.clear('provider');\n    this.clear('handler');\n\n    Interceptors.Fetch.add(async (request) => {\n      for (let i = 0; i < this.config.providers.length; i++) {\n        const provider = this.config.providers[i];\n\n        if (URL.match(request.url, provider.config.endpoints)) {\n          provider.secure && await provider.secure(request);\n        }\n      }\n    });\n\n    Interceptors.XHR.add(async (request) => {\n      for (let i = 0; i < this.config.providers.length; i++) {\n        const provider = this.config.providers[i];\n\n        if (URL.match(request.$url, provider.config.endpoints)) {\n          provider.secure && await provider.secure(request);\n        }\n      }\n    });\n\n    Events.route(async () => {\n      try {\n        const handler = this.handler();\n\n        for (let i = 0; i < this.config.providers.length; i++) {\n          const provider = this.config.providers[i];\n\n          if (URL.match(location.href, provider.config.routes)) {\n            let response: string | boolean = null;\n\n            while (response !== true) {\n              response = await provider.secure();\n\n              if (typeof(response) === 'string') {\n                if (!handler.auto) {\n                  throw new SalteAuthError({\n                    code: 'auto_unsupported',\n                    message: `The default handler doesn't support automatic authentication! (${handler.$name})`,\n                  });\n                }\n\n                this.set('action', 'login');\n                this.set('provider', provider.$name);\n                this.set('handler', handler.$name);\n\n                const params = await handler.open({\n                  redirectUrl: provider.redirectUrl('login'),\n                  url: response,\n                });\n\n                provider.validate(params);\n\n                this.clear('action');\n                this.clear('provider');\n                this.clear('handler');\n              }\n            }\n          }\n        }\n      } catch (error) {\n        this.clear('action');\n        this.clear('provider');\n        this.clear('handler');\n        throw error;\n      }\n    });\n\n    this.mixin = AuthMixinGenerator(this);\n  }\n\n  /**\n   * Login to the specified provider.\n   *\n   * @param options the authentication options\n   */\n  public async login(options: SalteAuth.AuthOptions): Promise<void>;\n  /**\n   * Login to the specified provider.\n   *\n   * @param provider the provider to login with\n   */\n  public async login(provider: string): Promise<void>;\n  public async login(options: SalteAuth.AuthOptions | string): Promise<void> {\n    options = typeof(options) === 'string' ? { provider: options } : options;\n\n    try {\n      const provider = this.provider(options.provider);\n      const handler = this.handler(options.handler);\n\n      this.set('action', 'login');\n      this.set('provider', provider.$name);\n      this.set('handler', handler.$name);\n\n      const params = await handler.open({\n        redirectUrl: provider.redirectUrl('login'),\n        url: provider.$login(),\n      });\n\n      provider.validate(params);\n    } finally {\n      this.clear('action');\n      this.clear('provider');\n      this.clear('handler');\n    }\n  }\n\n  /**\n   * Logout of the specified provider.\n   *\n   * @param options the authentication options\n   */\n  public async logout(options: SalteAuth.AuthOptions): Promise<void>;\n  /**\n   * Logout of the specified provider.\n   *\n   * @param provider the provider to logout of\n   */\n  public async logout(provider: string): Promise<void>;\n  public async logout(options: SalteAuth.AuthOptions | string): Promise<void> {\n    options = typeof(options) === 'string' ? { provider: options } : options;\n\n    const provider = this.provider(options.provider);\n    try {\n      const handler = this.handler(options.handler);\n\n      this.set('action', 'logout');\n      this.set('provider', provider.$name);\n      this.set('handler', handler.$name);\n\n      await handler.open({\n        redirectUrl: provider.redirectUrl('logout'),\n        url: provider.logout,\n      });\n\n      provider.reset();\n      provider.emit('logout');\n    } catch (error) {\n      provider.emit('logout', error);\n      throw error;\n    } finally {\n      this.clear('action');\n      this.clear('provider');\n      this.clear('handler');\n    }\n  }\n\n  /**\n   * Returns a provider that matches the given name.\n   * @param name the name of the provider\n   * @returns the provider with the given name.\n   */\n  public provider(name?: string): Provider {\n    const provider = Common.find(this.config.providers, (provider) => provider.$name === name);\n\n    if (!provider) {\n      throw new SalteAuthError({\n        code: 'invalid_provider',\n        message: `Unable to locate provider with the given name. (${name})`,\n      });\n    }\n\n    return provider;\n  }\n\n  /**\n   * Returns a handler that matches the given name.\n   * @param name the name of the handler\n   * @returns the handler with the given name, if no name is specified then the default handler.\n   */\n  public handler(name?: string): Handler {\n    const handler = name === undefined ?\n      Common.find(this.config.handlers, (handler) => !!handler.config.default) :\n      Common.find(this.config.handlers, (handler) => handler.$name === name)\n\n    if (!handler) {\n      throw new SalteAuthError({\n        code: 'invalid_handler',\n        message: `Unable to locate handler with the given name. (${name})`,\n      });\n    }\n\n    return handler;\n  }\n}\n\nexport interface SalteAuth {\n  config: SalteAuth.Config;\n  on(name: 'login', listener: (error?: Error, data?: SalteAuth.EventWrapper) => void): void;\n  on(name: 'logout', listener: (error?: Error, data?: SalteAuth.EventWrapper) => void): void;\n}\n\nexport declare namespace SalteAuth {\n  interface Config extends Shared.Config {\n    providers: Provider[];\n\n    handlers: Handler[];\n\n    /**\n     * Determines the level of verbosity of the logs.\n     *\n     * @default 'warn'\n     */\n    level?: ('error'|'warn'|'info'|'trace');\n  }\n\n  interface EventWrapper {\n    provider: string;\n    data?: IDToken.UserInfo | string;\n  }\n\n  interface AuthOptions {\n    provider: string;\n    handler?: string;\n  }\n}\n\nexport { SalteAuthError } from './base/core/salte-auth-error';\nexport { OAuth2Provider } from './base/provider-oauth2';\nexport { OpenIDProvider } from './base/provider-openid';\nexport { Handler, Utils, Generic };\n"],"names":["AuthMixinGenerator","auth","Base","constructor","on","requestUpdate","SalteAuthError","Error","message","code","Required","config","required","keys","missing","filter","key","undefined","length","join","Fetch","setup","force","hasSetup","interceptors","real","window","fetch","input","options","request","Request","i","interceptor","Promise","resolve","call","add","push","callbacks","onRouteChange","forEach","callback","Events","route","addEventListener","passive","setTimeout","create","name","params","event","document","createEvent","initEvent","bubbles","cancelable","detail","isCrossDomainError","e","DOMException","XHR","realOpen","XMLHttpRequest","prototype","open","realSend","send","requestPrototype","args","url","$url","apply","data","promises","all","then","catch","error","dispatchEvent","urlDocument","base","anchor","URL","origin","location","protocol","host","path","implementation","createHTMLDocument","createElement","head","appendChild","href","replace","match","tests","Array","resolvedUrl","Common","find","test","RegExp","indexOf","parse","search","hash","concat","split","parsed","param","value","debounces","includes","source","cb","isArray","item","assign","target","sources","defaults","isObject","iframe","redirectUrl","visible","setAttribute","style","border","bottom","height","left","position","right","top","width","zIndex","opacity","transition","display","src","body","reject","checker","setInterval","contentWindow","parentElement","removeChild","clearInterval","debounce","identifier","timeout","clearTimeout","AccessToken","accessToken","expiration","type","raw","Number","expired","Date","now","IDToken","idToken","user","exp","separated","JSON","atob","Logger","level","toLevel","trace","optionalParams","log","info","warn","enabled","console","levels","_level","Storage","storage","get","defaultValue","getItem","set","clear","setItem","removeItem","reset","baseKey","localStorage","sessionStorage","Map","listener","listeners","has","off","index","splice","emit","Shared","Provider","validation","logger","$name","encodeURIComponent","logout","OAuth2Provider","sync","connected","secure","responseType","$login","headers","setRequestHeader","$validate","error_description","error_uri","access_token","state","expires_in","token_type","types","validate","nanoid","login","client_id","clientID","response_type","redirect_uri","scope","OpenIDProvider","renewal","buffer","prompt","id_token","nonce","OAuth2","OpenID","Handler","navigate","history","pushState","title","SalteAuth","providers","provider","action","handlerName","handlers","handler","responsible","Interceptors","endpoints","routes","response","auto","mixin","default"],"mappings":"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"}