{"version":3,"file":"popup.mjs","sources":["../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../src/popup.ts"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import { Handler, SalteAuthError, Utils } from '@salte-auth/salte-auth';\n\nexport class Popup extends Handler {\n  public constructor(config?: Popup.Config) {\n    super(config);\n\n    this.config = Utils.Common.defaults(this.config, {\n      window: {\n        name: '@salte-auth/tab',\n        height: 600,\n        width: 600\n      }\n    });\n  }\n\n  public get name() {\n    return 'popup';\n  }\n\n  public get auto() {\n    return false;\n  }\n\n  public async open(options: Handler.OpenOptions) {\n    const top = ((window.innerHeight / 2) - (this.config.window.height / 2)) + window.screenTop;\n    const left = ((window.innerWidth / 2) - (this.config.window.width / 2)) + window.screenLeft;\n    const popupWindow = window.open(options.url, this.config.window.name, `height=${this.config.window.height}, width=${this.config.window.width}, status=yes, toolbar=no, menubar=no, location=no, top=${top}, left=${left}`);\n    if (!popupWindow) {\n      throw new SalteAuthError({\n        message: 'We were unable to open the popup window, its likely that the request was blocked.',\n        code: 'popup_blocked'\n      });\n    }\n\n    popupWindow.focus();\n    // TODO: Find a better way of tracking when a Window closes.\n    return new Promise((resolve) => {\n      const checker = setInterval(() => {\n        try {\n          if (!popupWindow.closed) {\n            // This could throw cross-domain errors, so we need to silence them.\n            if (popupWindow.location.href.indexOf(options.redirectUrl) !== 0) return;\n\n            const parsed = Utils.URL.parse(popupWindow.location);\n\n            popupWindow.close();\n            setTimeout(() => resolve(parsed));\n          }\n\n          clearInterval(checker);\n        } catch (e) {} // eslint-disable-line\n      }, 100);\n    });\n  }\n}\n\nexport interface Popup {\n  config: Popup.Config;\n}\n\nexport declare namespace Popup {\n  export interface Config extends Handler.Config {\n    /**\n     * The name to attach to the popup window.\n     *\n     * @default 'salte-auth'\n     */\n    name?: string;\n\n    /**\n     * The height of the popup window.\n     *\n     * @default 600\n     */\n    height?: number;\n\n    /**\n     * The width of the popup window.\n     *\n     * @default 600\n     */\n    width?: number;\n  }\n}\n"],"names":["Popup","Handler","constructor","config","Utils","Common","defaults","window","name","height","width","auto","open","options","top","innerHeight","screenTop","left","innerWidth","screenLeft","popupWindow","url","SalteAuthError","message","code","focus","Promise","resolve","checker","setInterval","closed","location","href","indexOf","redirectUrl","parsed","URL","parse","close","setTimeout","clearInterval","e"],"mappings":"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"}